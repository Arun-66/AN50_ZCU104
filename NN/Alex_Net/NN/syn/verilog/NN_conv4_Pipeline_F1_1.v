// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module NN_conv4_Pipeline_F1_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        filter_local_8_address0,
        filter_local_8_ce0,
        filter_local_8_we0,
        filter_local_8_d0,
        filter_local_7_address0,
        filter_local_7_ce0,
        filter_local_7_we0,
        filter_local_7_d0,
        filter_local_6_address0,
        filter_local_6_ce0,
        filter_local_6_we0,
        filter_local_6_d0,
        filter_local_5_address0,
        filter_local_5_ce0,
        filter_local_5_we0,
        filter_local_5_d0,
        filter_local_4_address0,
        filter_local_4_ce0,
        filter_local_4_we0,
        filter_local_4_d0,
        filter_local_3_address0,
        filter_local_3_ce0,
        filter_local_3_we0,
        filter_local_3_d0,
        filter_local_2_address0,
        filter_local_2_ce0,
        filter_local_2_we0,
        filter_local_2_d0,
        filter_local_1_address0,
        filter_local_1_ce0,
        filter_local_1_we0,
        filter_local_1_d0,
        filter_local_address0,
        filter_local_ce0,
        filter_local_we0,
        filter_local_d0,
        phi_mul184,
        filter_conv4_address0,
        filter_conv4_ce0,
        filter_conv4_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] filter_local_8_address0;
output   filter_local_8_ce0;
output   filter_local_8_we0;
output  [31:0] filter_local_8_d0;
output  [7:0] filter_local_7_address0;
output   filter_local_7_ce0;
output   filter_local_7_we0;
output  [31:0] filter_local_7_d0;
output  [7:0] filter_local_6_address0;
output   filter_local_6_ce0;
output   filter_local_6_we0;
output  [31:0] filter_local_6_d0;
output  [7:0] filter_local_5_address0;
output   filter_local_5_ce0;
output   filter_local_5_we0;
output  [31:0] filter_local_5_d0;
output  [7:0] filter_local_4_address0;
output   filter_local_4_ce0;
output   filter_local_4_we0;
output  [31:0] filter_local_4_d0;
output  [7:0] filter_local_3_address0;
output   filter_local_3_ce0;
output   filter_local_3_we0;
output  [31:0] filter_local_3_d0;
output  [7:0] filter_local_2_address0;
output   filter_local_2_ce0;
output   filter_local_2_we0;
output  [31:0] filter_local_2_d0;
output  [7:0] filter_local_1_address0;
output   filter_local_1_ce0;
output   filter_local_1_we0;
output  [31:0] filter_local_1_d0;
output  [7:0] filter_local_address0;
output   filter_local_ce0;
output   filter_local_we0;
output  [31:0] filter_local_d0;
input  [18:0] phi_mul184;
output  [19:0] filter_conv4_address0;
output   filter_conv4_ce0;
input  [31:0] filter_conv4_q0;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln81_fu_251_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [3:0] trunc_ln81_fu_267_p1;
reg   [3:0] trunc_ln81_reg_386;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln83_fu_277_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln81_1_fu_331_p1;
reg   [10:0] phi_urem179_fu_82;
wire   [10:0] select_ln81_fu_294_p3;
wire    ap_loop_init;
reg   [10:0] ap_sig_allocacmp_phi_urem179_load;
reg   [22:0] phi_mul177_fu_86;
wire   [22:0] add_ln81_1_fu_315_p2;
reg   [10:0] h_fu_90;
wire   [10:0] add_ln81_fu_257_p2;
reg   [10:0] ap_sig_allocacmp_h_3;
reg    filter_conv4_ce0_local;
reg    filter_local_7_we0_local;
wire   [31:0] bitcast_ln83_fu_344_p1;
reg    filter_local_7_ce0_local;
reg    filter_local_6_we0_local;
reg    filter_local_6_ce0_local;
reg    filter_local_5_we0_local;
reg    filter_local_5_ce0_local;
reg    filter_local_4_we0_local;
reg    filter_local_4_ce0_local;
reg    filter_local_3_we0_local;
reg    filter_local_3_ce0_local;
reg    filter_local_2_we0_local;
reg    filter_local_2_ce0_local;
reg    filter_local_1_we0_local;
reg    filter_local_1_ce0_local;
reg    filter_local_we0_local;
reg    filter_local_ce0_local;
reg    filter_local_8_we0_local;
reg    filter_local_8_ce0_local;
wire   [18:0] zext_ln81_fu_263_p1;
wire   [18:0] add_ln83_fu_271_p2;
wire   [0:0] icmp_ln81_1_fu_288_p2;
wire   [10:0] add_ln81_2_fu_282_p2;
wire   [7:0] tmp_fu_321_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 phi_urem179_fu_82 = 11'd0;
#0 phi_mul177_fu_86 = 23'd0;
#0 h_fu_90 = 11'd0;
#0 ap_done_reg = 1'b0;
end

NN_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln81_fu_251_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            h_fu_90 <= add_ln81_fu_257_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            h_fu_90 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            phi_mul177_fu_86 <= 23'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            phi_mul177_fu_86 <= add_ln81_1_fu_315_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln81_fu_251_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            phi_urem179_fu_82 <= select_ln81_fu_294_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            phi_urem179_fu_82 <= 11'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln81_reg_386 <= trunc_ln81_fu_267_p1;
    end
end

always @ (*) begin
    if (((icmp_ln81_fu_251_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_h_3 = 11'd0;
    end else begin
        ap_sig_allocacmp_h_3 = h_fu_90;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_phi_urem179_load = 11'd0;
    end else begin
        ap_sig_allocacmp_phi_urem179_load = phi_urem179_fu_82;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_conv4_ce0_local = 1'b1;
    end else begin
        filter_conv4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_local_1_ce0_local = 1'b1;
    end else begin
        filter_local_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln81_reg_386 == 4'd1))) begin
        filter_local_1_we0_local = 1'b1;
    end else begin
        filter_local_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_local_2_ce0_local = 1'b1;
    end else begin
        filter_local_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln81_reg_386 == 4'd2))) begin
        filter_local_2_we0_local = 1'b1;
    end else begin
        filter_local_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_local_3_ce0_local = 1'b1;
    end else begin
        filter_local_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln81_reg_386 == 4'd3))) begin
        filter_local_3_we0_local = 1'b1;
    end else begin
        filter_local_3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_local_4_ce0_local = 1'b1;
    end else begin
        filter_local_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln81_reg_386 == 4'd4))) begin
        filter_local_4_we0_local = 1'b1;
    end else begin
        filter_local_4_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_local_5_ce0_local = 1'b1;
    end else begin
        filter_local_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln81_reg_386 == 4'd5))) begin
        filter_local_5_we0_local = 1'b1;
    end else begin
        filter_local_5_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_local_6_ce0_local = 1'b1;
    end else begin
        filter_local_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln81_reg_386 == 4'd6))) begin
        filter_local_6_we0_local = 1'b1;
    end else begin
        filter_local_6_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_local_7_ce0_local = 1'b1;
    end else begin
        filter_local_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln81_reg_386 == 4'd7))) begin
        filter_local_7_we0_local = 1'b1;
    end else begin
        filter_local_7_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_local_8_ce0_local = 1'b1;
    end else begin
        filter_local_8_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if ((~(trunc_ln81_reg_386 == 4'd0) & ~(trunc_ln81_reg_386 == 4'd1) & ~(trunc_ln81_reg_386 == 4'd2) & ~(trunc_ln81_reg_386 == 4'd3) & ~(trunc_ln81_reg_386 == 4'd4) & ~(trunc_ln81_reg_386 == 4'd5) & ~(trunc_ln81_reg_386 == 4'd6) & ~(trunc_ln81_reg_386 == 4'd7) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_local_8_we0_local = 1'b1;
    end else begin
        filter_local_8_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_local_ce0_local = 1'b1;
    end else begin
        filter_local_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln81_reg_386 == 4'd0))) begin
        filter_local_we0_local = 1'b1;
    end else begin
        filter_local_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln81_1_fu_315_p2 = (phi_mul177_fu_86 + 23'd3641);

assign add_ln81_2_fu_282_p2 = (ap_sig_allocacmp_phi_urem179_load + 11'd1);

assign add_ln81_fu_257_p2 = (ap_sig_allocacmp_h_3 + 11'd1);

assign add_ln83_fu_271_p2 = (zext_ln81_fu_263_p1 + phi_mul184);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign bitcast_ln83_fu_344_p1 = filter_conv4_q0;

assign filter_conv4_address0 = zext_ln83_fu_277_p1;

assign filter_conv4_ce0 = filter_conv4_ce0_local;

assign filter_local_1_address0 = zext_ln81_1_fu_331_p1;

assign filter_local_1_ce0 = filter_local_1_ce0_local;

assign filter_local_1_d0 = bitcast_ln83_fu_344_p1;

assign filter_local_1_we0 = filter_local_1_we0_local;

assign filter_local_2_address0 = zext_ln81_1_fu_331_p1;

assign filter_local_2_ce0 = filter_local_2_ce0_local;

assign filter_local_2_d0 = bitcast_ln83_fu_344_p1;

assign filter_local_2_we0 = filter_local_2_we0_local;

assign filter_local_3_address0 = zext_ln81_1_fu_331_p1;

assign filter_local_3_ce0 = filter_local_3_ce0_local;

assign filter_local_3_d0 = bitcast_ln83_fu_344_p1;

assign filter_local_3_we0 = filter_local_3_we0_local;

assign filter_local_4_address0 = zext_ln81_1_fu_331_p1;

assign filter_local_4_ce0 = filter_local_4_ce0_local;

assign filter_local_4_d0 = bitcast_ln83_fu_344_p1;

assign filter_local_4_we0 = filter_local_4_we0_local;

assign filter_local_5_address0 = zext_ln81_1_fu_331_p1;

assign filter_local_5_ce0 = filter_local_5_ce0_local;

assign filter_local_5_d0 = bitcast_ln83_fu_344_p1;

assign filter_local_5_we0 = filter_local_5_we0_local;

assign filter_local_6_address0 = zext_ln81_1_fu_331_p1;

assign filter_local_6_ce0 = filter_local_6_ce0_local;

assign filter_local_6_d0 = bitcast_ln83_fu_344_p1;

assign filter_local_6_we0 = filter_local_6_we0_local;

assign filter_local_7_address0 = zext_ln81_1_fu_331_p1;

assign filter_local_7_ce0 = filter_local_7_ce0_local;

assign filter_local_7_d0 = bitcast_ln83_fu_344_p1;

assign filter_local_7_we0 = filter_local_7_we0_local;

assign filter_local_8_address0 = zext_ln81_1_fu_331_p1;

assign filter_local_8_ce0 = filter_local_8_ce0_local;

assign filter_local_8_d0 = bitcast_ln83_fu_344_p1;

assign filter_local_8_we0 = filter_local_8_we0_local;

assign filter_local_address0 = zext_ln81_1_fu_331_p1;

assign filter_local_ce0 = filter_local_ce0_local;

assign filter_local_d0 = bitcast_ln83_fu_344_p1;

assign filter_local_we0 = filter_local_we0_local;

assign icmp_ln81_1_fu_288_p2 = ((ap_sig_allocacmp_phi_urem179_load == 11'd8) ? 1'b1 : 1'b0);

assign icmp_ln81_fu_251_p2 = ((ap_sig_allocacmp_h_3 == 11'd1728) ? 1'b1 : 1'b0);

assign select_ln81_fu_294_p3 = ((icmp_ln81_1_fu_288_p2[0:0] == 1'b1) ? 11'd0 : add_ln81_2_fu_282_p2);

assign tmp_fu_321_p4 = {{phi_mul177_fu_86[22:15]}};

assign trunc_ln81_fu_267_p1 = ap_sig_allocacmp_phi_urem179_load[3:0];

assign zext_ln81_1_fu_331_p1 = tmp_fu_321_p4;

assign zext_ln81_fu_263_p1 = ap_sig_allocacmp_h_3;

assign zext_ln83_fu_277_p1 = add_ln83_fu_271_p2;

endmodule //NN_conv4_Pipeline_F1_1
