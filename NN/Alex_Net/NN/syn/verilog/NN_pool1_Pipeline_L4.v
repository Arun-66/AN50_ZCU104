// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module NN_pool1_Pipeline_L4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        empty,
        mux_case_54386,
        mux_case_52379,
        mux_case_50372,
        mux_case_48365,
        mux_case_46358,
        mux_case_44351,
        mux_case_42344,
        mux_case_40337,
        mux_case_38330,
        mux_case_36323,
        mux_case_34316,
        mux_case_32309,
        mux_case_30302,
        mux_case_28295,
        mux_case_26288,
        mux_case_24281,
        mux_case_22274,
        mux_case_20267,
        mux_case_18260,
        mux_case_16253,
        mux_case_14246,
        mux_case_12239,
        mux_case_10232,
        mux_case_8225,
        mux_case_6218,
        mux_case_4211,
        mux_case_2204,
        mux_case_53197,
        mux_case_51190,
        mux_case_49183,
        mux_case_47176,
        mux_case_45169,
        mux_case_43162,
        mux_case_41155,
        mux_case_39148,
        mux_case_37141,
        mux_case_35134,
        mux_case_33127,
        mux_case_31120,
        mux_case_29113,
        mux_case_27106,
        mux_case_2599,
        mux_case_2392,
        mux_case_2185,
        mux_case_1978,
        mux_case_1771,
        mux_case_1564,
        mux_case_1357,
        mux_case_1150,
        mux_case_943,
        mux_case_736,
        mux_case_529,
        mux_case_322,
        mux_case_115,
        phi_mul20,
        inp_img_0_address0,
        inp_img_0_ce0,
        inp_img_0_q0,
        inp_img_1_address0,
        inp_img_1_ce0,
        inp_img_1_q0,
        inp_img_2_address0,
        inp_img_2_ce0,
        inp_img_2_q0,
        inp_img_3_address0,
        inp_img_3_ce0,
        inp_img_3_q0,
        inp_img_4_address0,
        inp_img_4_ce0,
        inp_img_4_q0,
        p_out,
        p_out_ap_vld,
        mux_case_54385_out,
        mux_case_54385_out_ap_vld,
        mux_case_52378_out,
        mux_case_52378_out_ap_vld,
        mux_case_50371_out,
        mux_case_50371_out_ap_vld,
        mux_case_48364_out,
        mux_case_48364_out_ap_vld,
        mux_case_46357_out,
        mux_case_46357_out_ap_vld,
        mux_case_44350_out,
        mux_case_44350_out_ap_vld,
        mux_case_42343_out,
        mux_case_42343_out_ap_vld,
        mux_case_40336_out,
        mux_case_40336_out_ap_vld,
        mux_case_38329_out,
        mux_case_38329_out_ap_vld,
        mux_case_36322_out,
        mux_case_36322_out_ap_vld,
        mux_case_34315_out,
        mux_case_34315_out_ap_vld,
        mux_case_32308_out,
        mux_case_32308_out_ap_vld,
        mux_case_30301_out,
        mux_case_30301_out_ap_vld,
        mux_case_28294_out,
        mux_case_28294_out_ap_vld,
        mux_case_26287_out,
        mux_case_26287_out_ap_vld,
        mux_case_24280_out,
        mux_case_24280_out_ap_vld,
        mux_case_22273_out,
        mux_case_22273_out_ap_vld,
        mux_case_20266_out,
        mux_case_20266_out_ap_vld,
        mux_case_18259_out,
        mux_case_18259_out_ap_vld,
        mux_case_16252_out,
        mux_case_16252_out_ap_vld,
        mux_case_14245_out,
        mux_case_14245_out_ap_vld,
        mux_case_12238_out,
        mux_case_12238_out_ap_vld,
        mux_case_10231_out,
        mux_case_10231_out_ap_vld,
        mux_case_8224_out,
        mux_case_8224_out_ap_vld,
        mux_case_6217_out,
        mux_case_6217_out_ap_vld,
        mux_case_4210_out,
        mux_case_4210_out_ap_vld,
        mux_case_2203_out,
        mux_case_2203_out_ap_vld,
        mux_case_53196_out,
        mux_case_53196_out_ap_vld,
        mux_case_51189_out,
        mux_case_51189_out_ap_vld,
        mux_case_49182_out,
        mux_case_49182_out_ap_vld,
        mux_case_47175_out,
        mux_case_47175_out_ap_vld,
        mux_case_45168_out,
        mux_case_45168_out_ap_vld,
        mux_case_43161_out,
        mux_case_43161_out_ap_vld,
        mux_case_41154_out,
        mux_case_41154_out_ap_vld,
        mux_case_39147_out,
        mux_case_39147_out_ap_vld,
        mux_case_37140_out,
        mux_case_37140_out_ap_vld,
        mux_case_35133_out,
        mux_case_35133_out_ap_vld,
        mux_case_33126_out,
        mux_case_33126_out_ap_vld,
        mux_case_31119_out,
        mux_case_31119_out_ap_vld,
        mux_case_29112_out,
        mux_case_29112_out_ap_vld,
        mux_case_27105_out,
        mux_case_27105_out_ap_vld,
        mux_case_2598_out,
        mux_case_2598_out_ap_vld,
        mux_case_2391_out,
        mux_case_2391_out_ap_vld,
        mux_case_2184_out,
        mux_case_2184_out_ap_vld,
        mux_case_1977_out,
        mux_case_1977_out_ap_vld,
        mux_case_1770_out,
        mux_case_1770_out_ap_vld,
        mux_case_1563_out,
        mux_case_1563_out_ap_vld,
        mux_case_1356_out,
        mux_case_1356_out_ap_vld,
        mux_case_1149_out,
        mux_case_1149_out_ap_vld,
        mux_case_942_out,
        mux_case_942_out_ap_vld,
        mux_case_735_out,
        mux_case_735_out_ap_vld,
        mux_case_528_out,
        mux_case_528_out_ap_vld,
        mux_case_321_out,
        mux_case_321_out_ap_vld,
        mux_case_114_out,
        mux_case_114_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] empty;
input  [31:0] mux_case_54386;
input  [31:0] mux_case_52379;
input  [31:0] mux_case_50372;
input  [31:0] mux_case_48365;
input  [31:0] mux_case_46358;
input  [31:0] mux_case_44351;
input  [31:0] mux_case_42344;
input  [31:0] mux_case_40337;
input  [31:0] mux_case_38330;
input  [31:0] mux_case_36323;
input  [31:0] mux_case_34316;
input  [31:0] mux_case_32309;
input  [31:0] mux_case_30302;
input  [31:0] mux_case_28295;
input  [31:0] mux_case_26288;
input  [31:0] mux_case_24281;
input  [31:0] mux_case_22274;
input  [31:0] mux_case_20267;
input  [31:0] mux_case_18260;
input  [31:0] mux_case_16253;
input  [31:0] mux_case_14246;
input  [31:0] mux_case_12239;
input  [31:0] mux_case_10232;
input  [31:0] mux_case_8225;
input  [31:0] mux_case_6218;
input  [31:0] mux_case_4211;
input  [31:0] mux_case_2204;
input  [31:0] mux_case_53197;
input  [31:0] mux_case_51190;
input  [31:0] mux_case_49183;
input  [31:0] mux_case_47176;
input  [31:0] mux_case_45169;
input  [31:0] mux_case_43162;
input  [31:0] mux_case_41155;
input  [31:0] mux_case_39148;
input  [31:0] mux_case_37141;
input  [31:0] mux_case_35134;
input  [31:0] mux_case_33127;
input  [31:0] mux_case_31120;
input  [31:0] mux_case_29113;
input  [31:0] mux_case_27106;
input  [31:0] mux_case_2599;
input  [31:0] mux_case_2392;
input  [31:0] mux_case_2185;
input  [31:0] mux_case_1978;
input  [31:0] mux_case_1771;
input  [31:0] mux_case_1564;
input  [31:0] mux_case_1357;
input  [31:0] mux_case_1150;
input  [31:0] mux_case_943;
input  [31:0] mux_case_736;
input  [31:0] mux_case_529;
input  [31:0] mux_case_322;
input  [31:0] mux_case_115;
input  [15:0] phi_mul20;
output  [15:0] inp_img_0_address0;
output   inp_img_0_ce0;
input  [31:0] inp_img_0_q0;
output  [15:0] inp_img_1_address0;
output   inp_img_1_ce0;
input  [31:0] inp_img_1_q0;
output  [15:0] inp_img_2_address0;
output   inp_img_2_ce0;
input  [31:0] inp_img_2_q0;
output  [15:0] inp_img_3_address0;
output   inp_img_3_ce0;
input  [31:0] inp_img_3_q0;
output  [15:0] inp_img_4_address0;
output   inp_img_4_ce0;
input  [31:0] inp_img_4_q0;
output  [31:0] p_out;
output   p_out_ap_vld;
output  [31:0] mux_case_54385_out;
output   mux_case_54385_out_ap_vld;
output  [31:0] mux_case_52378_out;
output   mux_case_52378_out_ap_vld;
output  [31:0] mux_case_50371_out;
output   mux_case_50371_out_ap_vld;
output  [31:0] mux_case_48364_out;
output   mux_case_48364_out_ap_vld;
output  [31:0] mux_case_46357_out;
output   mux_case_46357_out_ap_vld;
output  [31:0] mux_case_44350_out;
output   mux_case_44350_out_ap_vld;
output  [31:0] mux_case_42343_out;
output   mux_case_42343_out_ap_vld;
output  [31:0] mux_case_40336_out;
output   mux_case_40336_out_ap_vld;
output  [31:0] mux_case_38329_out;
output   mux_case_38329_out_ap_vld;
output  [31:0] mux_case_36322_out;
output   mux_case_36322_out_ap_vld;
output  [31:0] mux_case_34315_out;
output   mux_case_34315_out_ap_vld;
output  [31:0] mux_case_32308_out;
output   mux_case_32308_out_ap_vld;
output  [31:0] mux_case_30301_out;
output   mux_case_30301_out_ap_vld;
output  [31:0] mux_case_28294_out;
output   mux_case_28294_out_ap_vld;
output  [31:0] mux_case_26287_out;
output   mux_case_26287_out_ap_vld;
output  [31:0] mux_case_24280_out;
output   mux_case_24280_out_ap_vld;
output  [31:0] mux_case_22273_out;
output   mux_case_22273_out_ap_vld;
output  [31:0] mux_case_20266_out;
output   mux_case_20266_out_ap_vld;
output  [31:0] mux_case_18259_out;
output   mux_case_18259_out_ap_vld;
output  [31:0] mux_case_16252_out;
output   mux_case_16252_out_ap_vld;
output  [31:0] mux_case_14245_out;
output   mux_case_14245_out_ap_vld;
output  [31:0] mux_case_12238_out;
output   mux_case_12238_out_ap_vld;
output  [31:0] mux_case_10231_out;
output   mux_case_10231_out_ap_vld;
output  [31:0] mux_case_8224_out;
output   mux_case_8224_out_ap_vld;
output  [31:0] mux_case_6217_out;
output   mux_case_6217_out_ap_vld;
output  [31:0] mux_case_4210_out;
output   mux_case_4210_out_ap_vld;
output  [31:0] mux_case_2203_out;
output   mux_case_2203_out_ap_vld;
output  [31:0] mux_case_53196_out;
output   mux_case_53196_out_ap_vld;
output  [31:0] mux_case_51189_out;
output   mux_case_51189_out_ap_vld;
output  [31:0] mux_case_49182_out;
output   mux_case_49182_out_ap_vld;
output  [31:0] mux_case_47175_out;
output   mux_case_47175_out_ap_vld;
output  [31:0] mux_case_45168_out;
output   mux_case_45168_out_ap_vld;
output  [31:0] mux_case_43161_out;
output   mux_case_43161_out_ap_vld;
output  [31:0] mux_case_41154_out;
output   mux_case_41154_out_ap_vld;
output  [31:0] mux_case_39147_out;
output   mux_case_39147_out_ap_vld;
output  [31:0] mux_case_37140_out;
output   mux_case_37140_out_ap_vld;
output  [31:0] mux_case_35133_out;
output   mux_case_35133_out_ap_vld;
output  [31:0] mux_case_33126_out;
output   mux_case_33126_out_ap_vld;
output  [31:0] mux_case_31119_out;
output   mux_case_31119_out_ap_vld;
output  [31:0] mux_case_29112_out;
output   mux_case_29112_out_ap_vld;
output  [31:0] mux_case_27105_out;
output   mux_case_27105_out_ap_vld;
output  [31:0] mux_case_2598_out;
output   mux_case_2598_out_ap_vld;
output  [31:0] mux_case_2391_out;
output   mux_case_2391_out_ap_vld;
output  [31:0] mux_case_2184_out;
output   mux_case_2184_out_ap_vld;
output  [31:0] mux_case_1977_out;
output   mux_case_1977_out_ap_vld;
output  [31:0] mux_case_1770_out;
output   mux_case_1770_out_ap_vld;
output  [31:0] mux_case_1563_out;
output   mux_case_1563_out_ap_vld;
output  [31:0] mux_case_1356_out;
output   mux_case_1356_out_ap_vld;
output  [31:0] mux_case_1149_out;
output   mux_case_1149_out_ap_vld;
output  [31:0] mux_case_942_out;
output   mux_case_942_out_ap_vld;
output  [31:0] mux_case_735_out;
output   mux_case_735_out_ap_vld;
output  [31:0] mux_case_528_out;
output   mux_case_528_out_ap_vld;
output  [31:0] mux_case_321_out;
output   mux_case_321_out_ap_vld;
output  [31:0] mux_case_114_out;
output   mux_case_114_out_ap_vld;

reg ap_idle;
reg p_out_ap_vld;
reg mux_case_54385_out_ap_vld;
reg mux_case_52378_out_ap_vld;
reg mux_case_50371_out_ap_vld;
reg mux_case_48364_out_ap_vld;
reg mux_case_46357_out_ap_vld;
reg mux_case_44350_out_ap_vld;
reg mux_case_42343_out_ap_vld;
reg mux_case_40336_out_ap_vld;
reg mux_case_38329_out_ap_vld;
reg mux_case_36322_out_ap_vld;
reg mux_case_34315_out_ap_vld;
reg mux_case_32308_out_ap_vld;
reg mux_case_30301_out_ap_vld;
reg mux_case_28294_out_ap_vld;
reg mux_case_26287_out_ap_vld;
reg mux_case_24280_out_ap_vld;
reg mux_case_22273_out_ap_vld;
reg mux_case_20266_out_ap_vld;
reg mux_case_18259_out_ap_vld;
reg mux_case_16252_out_ap_vld;
reg mux_case_14245_out_ap_vld;
reg mux_case_12238_out_ap_vld;
reg mux_case_10231_out_ap_vld;
reg mux_case_8224_out_ap_vld;
reg mux_case_6217_out_ap_vld;
reg mux_case_4210_out_ap_vld;
reg mux_case_2203_out_ap_vld;
reg mux_case_53196_out_ap_vld;
reg mux_case_51189_out_ap_vld;
reg mux_case_49182_out_ap_vld;
reg mux_case_47175_out_ap_vld;
reg mux_case_45168_out_ap_vld;
reg mux_case_43161_out_ap_vld;
reg mux_case_41154_out_ap_vld;
reg mux_case_39147_out_ap_vld;
reg mux_case_37140_out_ap_vld;
reg mux_case_35133_out_ap_vld;
reg mux_case_33126_out_ap_vld;
reg mux_case_31119_out_ap_vld;
reg mux_case_29112_out_ap_vld;
reg mux_case_27105_out_ap_vld;
reg mux_case_2598_out_ap_vld;
reg mux_case_2391_out_ap_vld;
reg mux_case_2184_out_ap_vld;
reg mux_case_1977_out_ap_vld;
reg mux_case_1770_out_ap_vld;
reg mux_case_1563_out_ap_vld;
reg mux_case_1356_out_ap_vld;
reg mux_case_1149_out_ap_vld;
reg mux_case_942_out_ap_vld;
reg mux_case_735_out_ap_vld;
reg mux_case_528_out_ap_vld;
reg mux_case_321_out_ap_vld;
reg mux_case_114_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln57_fu_1703_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [5:0] j_3_reg_2728;
wire    ap_block_pp0_stage0_11001;
wire   [63:0] zext_ln63_1_fu_1744_p1;
wire    ap_block_pp0_stage0;
reg   [5:0] phi_urem_fu_392;
wire   [5:0] select_ln57_fu_2088_p3;
wire    ap_loop_init;
reg   [12:0] phi_mul_fu_396;
wire   [12:0] add_ln63_1_fu_1718_p2;
reg   [12:0] ap_sig_allocacmp_phi_mul_load;
reg   [5:0] j_fu_400;
wire   [5:0] add_ln57_fu_1709_p2;
reg   [5:0] ap_sig_allocacmp_j_3;
reg   [31:0] mux_case_114_fu_404;
wire   [31:0] line_buffer_2D_fu_1770_p13;
reg   [31:0] mux_case_321_fu_408;
reg   [31:0] mux_case_528_fu_412;
reg   [31:0] mux_case_735_fu_416;
reg   [31:0] mux_case_942_fu_420;
reg   [31:0] mux_case_1149_fu_424;
reg   [31:0] mux_case_1356_fu_428;
reg   [31:0] mux_case_1563_fu_432;
reg   [31:0] mux_case_1770_fu_436;
reg   [31:0] mux_case_1977_fu_440;
reg   [31:0] mux_case_2184_fu_444;
reg   [31:0] mux_case_2391_fu_448;
reg   [31:0] mux_case_2598_fu_452;
reg   [31:0] mux_case_27105_fu_456;
reg   [31:0] mux_case_29112_fu_460;
reg   [31:0] mux_case_31119_fu_464;
reg   [31:0] mux_case_33126_fu_468;
reg   [31:0] mux_case_35133_fu_472;
reg   [31:0] mux_case_37140_fu_476;
reg   [31:0] mux_case_39147_fu_480;
reg   [31:0] mux_case_41154_fu_484;
reg   [31:0] mux_case_43161_fu_488;
reg   [31:0] mux_case_45168_fu_492;
reg   [31:0] mux_case_47175_fu_496;
reg   [31:0] mux_case_49182_fu_500;
reg   [31:0] mux_case_51189_fu_504;
reg   [31:0] mux_case_53196_fu_508;
reg   [31:0] mux_case_2203_fu_512;
reg   [31:0] mux_case_4210_fu_516;
reg   [31:0] mux_case_6217_fu_520;
reg   [31:0] mux_case_8224_fu_524;
reg   [31:0] mux_case_10231_fu_528;
reg   [31:0] mux_case_12238_fu_532;
reg   [31:0] mux_case_14245_fu_536;
reg   [31:0] mux_case_16252_fu_540;
reg   [31:0] mux_case_18259_fu_544;
reg   [31:0] mux_case_20266_fu_548;
reg   [31:0] mux_case_22273_fu_552;
reg   [31:0] mux_case_24280_fu_556;
reg   [31:0] mux_case_26287_fu_560;
reg   [31:0] mux_case_28294_fu_564;
reg   [31:0] mux_case_30301_fu_568;
reg   [31:0] mux_case_32308_fu_572;
reg   [31:0] mux_case_34315_fu_576;
reg   [31:0] mux_case_36322_fu_580;
reg   [31:0] mux_case_38329_fu_584;
reg   [31:0] mux_case_40336_fu_588;
reg   [31:0] mux_case_42343_fu_592;
reg   [31:0] mux_case_44350_fu_596;
reg   [31:0] mux_case_46357_fu_600;
reg   [31:0] mux_case_48364_fu_604;
reg   [31:0] mux_case_50371_fu_608;
reg   [31:0] mux_case_52378_fu_612;
reg   [31:0] mux_case_54385_fu_616;
reg   [31:0] empty_108_fu_620;
wire    ap_block_pp0_stage0_01001;
reg    inp_img_0_ce0_local;
reg    inp_img_1_ce0_local;
reg    inp_img_2_ce0_local;
reg    inp_img_3_ce0_local;
reg    inp_img_4_ce0_local;
wire   [3:0] tmp_105_fu_1724_p4;
wire   [15:0] zext_ln63_fu_1734_p1;
wire   [15:0] add_ln63_fu_1738_p2;
wire   [31:0] line_buffer_2D_fu_1770_p11;
wire   [2:0] line_buffer_2D_fu_1770_p12;
wire   [0:0] icmp_ln57_1_fu_2082_p2;
wire   [5:0] add_ln57_1_fu_2076_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
reg    ap_condition_1018;
wire   [2:0] line_buffer_2D_fu_1770_p1;
wire   [2:0] line_buffer_2D_fu_1770_p3;
wire   [2:0] line_buffer_2D_fu_1770_p5;
wire   [2:0] line_buffer_2D_fu_1770_p7;
wire  signed [2:0] line_buffer_2D_fu_1770_p9;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 phi_urem_fu_392 = 6'd0;
#0 phi_mul_fu_396 = 13'd0;
#0 j_fu_400 = 6'd0;
#0 mux_case_114_fu_404 = 32'd0;
#0 mux_case_321_fu_408 = 32'd0;
#0 mux_case_528_fu_412 = 32'd0;
#0 mux_case_735_fu_416 = 32'd0;
#0 mux_case_942_fu_420 = 32'd0;
#0 mux_case_1149_fu_424 = 32'd0;
#0 mux_case_1356_fu_428 = 32'd0;
#0 mux_case_1563_fu_432 = 32'd0;
#0 mux_case_1770_fu_436 = 32'd0;
#0 mux_case_1977_fu_440 = 32'd0;
#0 mux_case_2184_fu_444 = 32'd0;
#0 mux_case_2391_fu_448 = 32'd0;
#0 mux_case_2598_fu_452 = 32'd0;
#0 mux_case_27105_fu_456 = 32'd0;
#0 mux_case_29112_fu_460 = 32'd0;
#0 mux_case_31119_fu_464 = 32'd0;
#0 mux_case_33126_fu_468 = 32'd0;
#0 mux_case_35133_fu_472 = 32'd0;
#0 mux_case_37140_fu_476 = 32'd0;
#0 mux_case_39147_fu_480 = 32'd0;
#0 mux_case_41154_fu_484 = 32'd0;
#0 mux_case_43161_fu_488 = 32'd0;
#0 mux_case_45168_fu_492 = 32'd0;
#0 mux_case_47175_fu_496 = 32'd0;
#0 mux_case_49182_fu_500 = 32'd0;
#0 mux_case_51189_fu_504 = 32'd0;
#0 mux_case_53196_fu_508 = 32'd0;
#0 mux_case_2203_fu_512 = 32'd0;
#0 mux_case_4210_fu_516 = 32'd0;
#0 mux_case_6217_fu_520 = 32'd0;
#0 mux_case_8224_fu_524 = 32'd0;
#0 mux_case_10231_fu_528 = 32'd0;
#0 mux_case_12238_fu_532 = 32'd0;
#0 mux_case_14245_fu_536 = 32'd0;
#0 mux_case_16252_fu_540 = 32'd0;
#0 mux_case_18259_fu_544 = 32'd0;
#0 mux_case_20266_fu_548 = 32'd0;
#0 mux_case_22273_fu_552 = 32'd0;
#0 mux_case_24280_fu_556 = 32'd0;
#0 mux_case_26287_fu_560 = 32'd0;
#0 mux_case_28294_fu_564 = 32'd0;
#0 mux_case_30301_fu_568 = 32'd0;
#0 mux_case_32308_fu_572 = 32'd0;
#0 mux_case_34315_fu_576 = 32'd0;
#0 mux_case_36322_fu_580 = 32'd0;
#0 mux_case_38329_fu_584 = 32'd0;
#0 mux_case_40336_fu_588 = 32'd0;
#0 mux_case_42343_fu_592 = 32'd0;
#0 mux_case_44350_fu_596 = 32'd0;
#0 mux_case_46357_fu_600 = 32'd0;
#0 mux_case_48364_fu_604 = 32'd0;
#0 mux_case_50371_fu_608 = 32'd0;
#0 mux_case_52378_fu_612 = 32'd0;
#0 mux_case_54385_fu_616 = 32'd0;
#0 empty_108_fu_620 = 32'd0;
#0 ap_done_reg = 1'b0;
end

(* dissolve_hierarchy = "yes" *) NN_sparsemux_11_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 3'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 3'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 3'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 3'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 3'h4 ),
    .din4_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
sparsemux_11_3_32_1_1_U2706(
    .din0(inp_img_0_q0),
    .din1(inp_img_1_q0),
    .din2(inp_img_2_q0),
    .din3(inp_img_3_q0),
    .din4(inp_img_4_q0),
    .def(line_buffer_2D_fu_1770_p11),
    .sel(line_buffer_2D_fu_1770_p12),
    .dout(line_buffer_2D_fu_1770_p13)
);

NN_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            empty_108_fu_620 <= empty;
        end else if (((j_3_reg_2728 == 6'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            empty_108_fu_620 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln57_fu_1703_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_400 <= add_ln57_fu_1709_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_400 <= 6'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_10231_fu_528 <= mux_case_10232;
        end else if (((j_3_reg_2728 == 6'd10) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_10231_fu_528 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_1149_fu_424 <= mux_case_1150;
        end else if (((j_3_reg_2728 == 6'd11) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_1149_fu_424 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_114_fu_404 <= mux_case_115;
        end else if (((j_3_reg_2728 == 6'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_114_fu_404 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_12238_fu_532 <= mux_case_12239;
        end else if (((j_3_reg_2728 == 6'd12) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_12238_fu_532 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_1356_fu_428 <= mux_case_1357;
        end else if (((j_3_reg_2728 == 6'd13) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_1356_fu_428 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_14245_fu_536 <= mux_case_14246;
        end else if (((j_3_reg_2728 == 6'd14) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_14245_fu_536 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_1563_fu_432 <= mux_case_1564;
        end else if (((j_3_reg_2728 == 6'd15) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_1563_fu_432 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_16252_fu_540 <= mux_case_16253;
        end else if (((j_3_reg_2728 == 6'd16) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_16252_fu_540 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_1770_fu_436 <= mux_case_1771;
        end else if (((j_3_reg_2728 == 6'd17) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_1770_fu_436 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_18259_fu_544 <= mux_case_18260;
        end else if (((j_3_reg_2728 == 6'd18) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_18259_fu_544 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_1977_fu_440 <= mux_case_1978;
        end else if (((j_3_reg_2728 == 6'd19) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_1977_fu_440 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_20266_fu_548 <= mux_case_20267;
        end else if (((j_3_reg_2728 == 6'd20) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_20266_fu_548 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_2184_fu_444 <= mux_case_2185;
        end else if (((j_3_reg_2728 == 6'd21) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_2184_fu_444 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_2203_fu_512 <= mux_case_2204;
        end else if (((j_3_reg_2728 == 6'd2) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_2203_fu_512 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_22273_fu_552 <= mux_case_22274;
        end else if (((j_3_reg_2728 == 6'd22) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_22273_fu_552 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_2391_fu_448 <= mux_case_2392;
        end else if (((j_3_reg_2728 == 6'd23) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_2391_fu_448 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_24280_fu_556 <= mux_case_24281;
        end else if (((j_3_reg_2728 == 6'd24) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_24280_fu_556 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_2598_fu_452 <= mux_case_2599;
        end else if (((j_3_reg_2728 == 6'd25) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_2598_fu_452 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_26287_fu_560 <= mux_case_26288;
        end else if (((j_3_reg_2728 == 6'd26) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_26287_fu_560 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_27105_fu_456 <= mux_case_27106;
        end else if (((j_3_reg_2728 == 6'd27) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_27105_fu_456 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_28294_fu_564 <= mux_case_28295;
        end else if (((j_3_reg_2728 == 6'd28) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_28294_fu_564 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_29112_fu_460 <= mux_case_29113;
        end else if (((j_3_reg_2728 == 6'd29) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_29112_fu_460 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_30301_fu_568 <= mux_case_30302;
        end else if (((j_3_reg_2728 == 6'd30) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_30301_fu_568 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_31119_fu_464 <= mux_case_31120;
        end else if (((j_3_reg_2728 == 6'd31) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_31119_fu_464 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_321_fu_408 <= mux_case_322;
        end else if (((j_3_reg_2728 == 6'd3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_321_fu_408 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_32308_fu_572 <= mux_case_32309;
        end else if (((j_3_reg_2728 == 6'd32) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_32308_fu_572 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_33126_fu_468 <= mux_case_33127;
        end else if (((j_3_reg_2728 == 6'd33) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_33126_fu_468 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_34315_fu_576 <= mux_case_34316;
        end else if (((j_3_reg_2728 == 6'd34) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_34315_fu_576 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_35133_fu_472 <= mux_case_35134;
        end else if (((j_3_reg_2728 == 6'd35) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_35133_fu_472 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_36322_fu_580 <= mux_case_36323;
        end else if (((j_3_reg_2728 == 6'd36) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_36322_fu_580 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_37140_fu_476 <= mux_case_37141;
        end else if (((j_3_reg_2728 == 6'd37) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_37140_fu_476 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_38329_fu_584 <= mux_case_38330;
        end else if (((j_3_reg_2728 == 6'd38) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_38329_fu_584 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_39147_fu_480 <= mux_case_39148;
        end else if (((j_3_reg_2728 == 6'd39) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_39147_fu_480 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_40336_fu_588 <= mux_case_40337;
        end else if (((j_3_reg_2728 == 6'd40) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_40336_fu_588 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_41154_fu_484 <= mux_case_41155;
        end else if (((j_3_reg_2728 == 6'd41) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_41154_fu_484 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_4210_fu_516 <= mux_case_4211;
        end else if (((j_3_reg_2728 == 6'd4) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_4210_fu_516 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_42343_fu_592 <= mux_case_42344;
        end else if (((j_3_reg_2728 == 6'd42) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_42343_fu_592 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_43161_fu_488 <= mux_case_43162;
        end else if (((j_3_reg_2728 == 6'd43) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_43161_fu_488 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_44350_fu_596 <= mux_case_44351;
        end else if (((j_3_reg_2728 == 6'd44) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_44350_fu_596 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_45168_fu_492 <= mux_case_45169;
        end else if (((j_3_reg_2728 == 6'd45) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_45168_fu_492 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_46357_fu_600 <= mux_case_46358;
        end else if (((j_3_reg_2728 == 6'd46) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_46357_fu_600 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_47175_fu_496 <= mux_case_47176;
        end else if (((j_3_reg_2728 == 6'd47) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_47175_fu_496 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_48364_fu_604 <= mux_case_48365;
        end else if (((j_3_reg_2728 == 6'd48) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_48364_fu_604 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_49182_fu_500 <= mux_case_49183;
        end else if (((j_3_reg_2728 == 6'd49) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_49182_fu_500 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_50371_fu_608 <= mux_case_50372;
        end else if (((j_3_reg_2728 == 6'd50) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_50371_fu_608 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_51189_fu_504 <= mux_case_51190;
        end else if (((j_3_reg_2728 == 6'd51) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_51189_fu_504 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_52378_fu_612 <= mux_case_52379;
        end else if (((j_3_reg_2728 == 6'd52) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_52378_fu_612 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_528_fu_412 <= mux_case_529;
        end else if (((j_3_reg_2728 == 6'd5) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_528_fu_412 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_53196_fu_508 <= mux_case_53197;
        end else if (((j_3_reg_2728 == 6'd53) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_53196_fu_508 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_54385_fu_616 <= mux_case_54386;
        end else if ((1'b1 == ap_condition_1018)) begin
            mux_case_54385_fu_616 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_6217_fu_520 <= mux_case_6218;
        end else if (((j_3_reg_2728 == 6'd6) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_6217_fu_520 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_735_fu_416 <= mux_case_736;
        end else if (((j_3_reg_2728 == 6'd7) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_735_fu_416 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_8224_fu_524 <= mux_case_8225;
        end else if (((j_3_reg_2728 == 6'd8) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_8224_fu_524 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            mux_case_942_fu_420 <= mux_case_943;
        end else if (((j_3_reg_2728 == 6'd9) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            mux_case_942_fu_420 <= line_buffer_2D_fu_1770_p13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln57_fu_1703_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            phi_mul_fu_396 <= add_ln63_1_fu_1718_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            phi_mul_fu_396 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            phi_urem_fu_392 <= 6'd0;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            phi_urem_fu_392 <= select_ln57_fu_2088_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_3_reg_2728 <= ap_sig_allocacmp_j_3;
    end
end

always @ (*) begin
    if (((icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_3 = 6'd0;
    end else begin
        ap_sig_allocacmp_j_3 = j_fu_400;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_phi_mul_load = 13'd0;
    end else begin
        ap_sig_allocacmp_phi_mul_load = phi_mul_fu_396;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inp_img_0_ce0_local = 1'b1;
    end else begin
        inp_img_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inp_img_1_ce0_local = 1'b1;
    end else begin
        inp_img_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inp_img_2_ce0_local = 1'b1;
    end else begin
        inp_img_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inp_img_3_ce0_local = 1'b1;
    end else begin
        inp_img_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inp_img_4_ce0_local = 1'b1;
    end else begin
        inp_img_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_10231_out_ap_vld = 1'b1;
    end else begin
        mux_case_10231_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_1149_out_ap_vld = 1'b1;
    end else begin
        mux_case_1149_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_114_out_ap_vld = 1'b1;
    end else begin
        mux_case_114_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_12238_out_ap_vld = 1'b1;
    end else begin
        mux_case_12238_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_1356_out_ap_vld = 1'b1;
    end else begin
        mux_case_1356_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_14245_out_ap_vld = 1'b1;
    end else begin
        mux_case_14245_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_1563_out_ap_vld = 1'b1;
    end else begin
        mux_case_1563_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_16252_out_ap_vld = 1'b1;
    end else begin
        mux_case_16252_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_1770_out_ap_vld = 1'b1;
    end else begin
        mux_case_1770_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_18259_out_ap_vld = 1'b1;
    end else begin
        mux_case_18259_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_1977_out_ap_vld = 1'b1;
    end else begin
        mux_case_1977_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_20266_out_ap_vld = 1'b1;
    end else begin
        mux_case_20266_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_2184_out_ap_vld = 1'b1;
    end else begin
        mux_case_2184_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_2203_out_ap_vld = 1'b1;
    end else begin
        mux_case_2203_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_22273_out_ap_vld = 1'b1;
    end else begin
        mux_case_22273_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_2391_out_ap_vld = 1'b1;
    end else begin
        mux_case_2391_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_24280_out_ap_vld = 1'b1;
    end else begin
        mux_case_24280_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_2598_out_ap_vld = 1'b1;
    end else begin
        mux_case_2598_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_26287_out_ap_vld = 1'b1;
    end else begin
        mux_case_26287_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_27105_out_ap_vld = 1'b1;
    end else begin
        mux_case_27105_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_28294_out_ap_vld = 1'b1;
    end else begin
        mux_case_28294_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_29112_out_ap_vld = 1'b1;
    end else begin
        mux_case_29112_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_30301_out_ap_vld = 1'b1;
    end else begin
        mux_case_30301_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_31119_out_ap_vld = 1'b1;
    end else begin
        mux_case_31119_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_321_out_ap_vld = 1'b1;
    end else begin
        mux_case_321_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_32308_out_ap_vld = 1'b1;
    end else begin
        mux_case_32308_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_33126_out_ap_vld = 1'b1;
    end else begin
        mux_case_33126_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_34315_out_ap_vld = 1'b1;
    end else begin
        mux_case_34315_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_35133_out_ap_vld = 1'b1;
    end else begin
        mux_case_35133_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_36322_out_ap_vld = 1'b1;
    end else begin
        mux_case_36322_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_37140_out_ap_vld = 1'b1;
    end else begin
        mux_case_37140_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_38329_out_ap_vld = 1'b1;
    end else begin
        mux_case_38329_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_39147_out_ap_vld = 1'b1;
    end else begin
        mux_case_39147_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_40336_out_ap_vld = 1'b1;
    end else begin
        mux_case_40336_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_41154_out_ap_vld = 1'b1;
    end else begin
        mux_case_41154_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_4210_out_ap_vld = 1'b1;
    end else begin
        mux_case_4210_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_42343_out_ap_vld = 1'b1;
    end else begin
        mux_case_42343_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_43161_out_ap_vld = 1'b1;
    end else begin
        mux_case_43161_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_44350_out_ap_vld = 1'b1;
    end else begin
        mux_case_44350_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_45168_out_ap_vld = 1'b1;
    end else begin
        mux_case_45168_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_46357_out_ap_vld = 1'b1;
    end else begin
        mux_case_46357_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_47175_out_ap_vld = 1'b1;
    end else begin
        mux_case_47175_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_48364_out_ap_vld = 1'b1;
    end else begin
        mux_case_48364_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_49182_out_ap_vld = 1'b1;
    end else begin
        mux_case_49182_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_50371_out_ap_vld = 1'b1;
    end else begin
        mux_case_50371_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_51189_out_ap_vld = 1'b1;
    end else begin
        mux_case_51189_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_52378_out_ap_vld = 1'b1;
    end else begin
        mux_case_52378_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_528_out_ap_vld = 1'b1;
    end else begin
        mux_case_528_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_53196_out_ap_vld = 1'b1;
    end else begin
        mux_case_53196_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_54385_out_ap_vld = 1'b1;
    end else begin
        mux_case_54385_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_6217_out_ap_vld = 1'b1;
    end else begin
        mux_case_6217_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_735_out_ap_vld = 1'b1;
    end else begin
        mux_case_735_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_8224_out_ap_vld = 1'b1;
    end else begin
        mux_case_8224_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_942_out_ap_vld = 1'b1;
    end else begin
        mux_case_942_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1703_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out_ap_vld = 1'b1;
    end else begin
        p_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln57_1_fu_2076_p2 = (phi_urem_fu_392 + 6'd1);

assign add_ln57_fu_1709_p2 = (ap_sig_allocacmp_j_3 + 6'd1);

assign add_ln63_1_fu_1718_p2 = (ap_sig_allocacmp_phi_mul_load + 13'd103);

assign add_ln63_fu_1738_p2 = (zext_ln63_fu_1734_p1 + phi_mul20);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1018 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((j_3_reg_2728 == 6'd54) | ((j_3_reg_2728 == 6'd55) | ((j_3_reg_2728 == 6'd56) | ((j_3_reg_2728 == 6'd57) | ((j_3_reg_2728 == 6'd58) | ((j_3_reg_2728 == 6'd59) | ((j_3_reg_2728 == 6'd60) | ((j_3_reg_2728 == 6'd61) | ((j_3_reg_2728 == 6'd62) | (j_3_reg_2728 == 6'd63)))))))))));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign icmp_ln57_1_fu_2082_p2 = ((phi_urem_fu_392 == 6'd4) ? 1'b1 : 1'b0);

assign icmp_ln57_fu_1703_p2 = ((ap_sig_allocacmp_j_3 == 6'd55) ? 1'b1 : 1'b0);

assign inp_img_0_address0 = zext_ln63_1_fu_1744_p1;

assign inp_img_0_ce0 = inp_img_0_ce0_local;

assign inp_img_1_address0 = zext_ln63_1_fu_1744_p1;

assign inp_img_1_ce0 = inp_img_1_ce0_local;

assign inp_img_2_address0 = zext_ln63_1_fu_1744_p1;

assign inp_img_2_ce0 = inp_img_2_ce0_local;

assign inp_img_3_address0 = zext_ln63_1_fu_1744_p1;

assign inp_img_3_ce0 = inp_img_3_ce0_local;

assign inp_img_4_address0 = zext_ln63_1_fu_1744_p1;

assign inp_img_4_ce0 = inp_img_4_ce0_local;

assign line_buffer_2D_fu_1770_p11 = 'bx;

assign line_buffer_2D_fu_1770_p12 = phi_urem_fu_392[2:0];

assign mux_case_10231_out = mux_case_10231_fu_528;

assign mux_case_1149_out = mux_case_1149_fu_424;

assign mux_case_114_out = mux_case_114_fu_404;

assign mux_case_12238_out = mux_case_12238_fu_532;

assign mux_case_1356_out = mux_case_1356_fu_428;

assign mux_case_14245_out = mux_case_14245_fu_536;

assign mux_case_1563_out = mux_case_1563_fu_432;

assign mux_case_16252_out = mux_case_16252_fu_540;

assign mux_case_1770_out = mux_case_1770_fu_436;

assign mux_case_18259_out = mux_case_18259_fu_544;

assign mux_case_1977_out = mux_case_1977_fu_440;

assign mux_case_20266_out = mux_case_20266_fu_548;

assign mux_case_2184_out = mux_case_2184_fu_444;

assign mux_case_2203_out = mux_case_2203_fu_512;

assign mux_case_22273_out = mux_case_22273_fu_552;

assign mux_case_2391_out = mux_case_2391_fu_448;

assign mux_case_24280_out = mux_case_24280_fu_556;

assign mux_case_2598_out = mux_case_2598_fu_452;

assign mux_case_26287_out = mux_case_26287_fu_560;

assign mux_case_27105_out = mux_case_27105_fu_456;

assign mux_case_28294_out = mux_case_28294_fu_564;

assign mux_case_29112_out = mux_case_29112_fu_460;

assign mux_case_30301_out = mux_case_30301_fu_568;

assign mux_case_31119_out = mux_case_31119_fu_464;

assign mux_case_321_out = mux_case_321_fu_408;

assign mux_case_32308_out = mux_case_32308_fu_572;

assign mux_case_33126_out = mux_case_33126_fu_468;

assign mux_case_34315_out = mux_case_34315_fu_576;

assign mux_case_35133_out = mux_case_35133_fu_472;

assign mux_case_36322_out = mux_case_36322_fu_580;

assign mux_case_37140_out = mux_case_37140_fu_476;

assign mux_case_38329_out = mux_case_38329_fu_584;

assign mux_case_39147_out = mux_case_39147_fu_480;

assign mux_case_40336_out = mux_case_40336_fu_588;

assign mux_case_41154_out = mux_case_41154_fu_484;

assign mux_case_4210_out = mux_case_4210_fu_516;

assign mux_case_42343_out = mux_case_42343_fu_592;

assign mux_case_43161_out = mux_case_43161_fu_488;

assign mux_case_44350_out = mux_case_44350_fu_596;

assign mux_case_45168_out = mux_case_45168_fu_492;

assign mux_case_46357_out = mux_case_46357_fu_600;

assign mux_case_47175_out = mux_case_47175_fu_496;

assign mux_case_48364_out = mux_case_48364_fu_604;

assign mux_case_49182_out = mux_case_49182_fu_500;

assign mux_case_50371_out = mux_case_50371_fu_608;

assign mux_case_51189_out = mux_case_51189_fu_504;

assign mux_case_52378_out = mux_case_52378_fu_612;

assign mux_case_528_out = mux_case_528_fu_412;

assign mux_case_53196_out = mux_case_53196_fu_508;

assign mux_case_54385_out = mux_case_54385_fu_616;

assign mux_case_6217_out = mux_case_6217_fu_520;

assign mux_case_735_out = mux_case_735_fu_416;

assign mux_case_8224_out = mux_case_8224_fu_524;

assign mux_case_942_out = mux_case_942_fu_420;

assign p_out = empty_108_fu_620;

assign select_ln57_fu_2088_p3 = ((icmp_ln57_1_fu_2082_p2[0:0] == 1'b1) ? 6'd0 : add_ln57_1_fu_2076_p2);

assign tmp_105_fu_1724_p4 = {{ap_sig_allocacmp_phi_mul_load[12:9]}};

assign zext_ln63_1_fu_1744_p1 = add_ln63_fu_1738_p2;

assign zext_ln63_fu_1734_p1 = tmp_105_fu_1724_p4;

endmodule //NN_pool1_Pipeline_L4
