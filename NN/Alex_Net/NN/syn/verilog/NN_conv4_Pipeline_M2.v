// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module NN_conv4_Pipeline_M2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        out_img_12_address0,
        out_img_12_ce0,
        out_img_12_we0,
        out_img_12_d0,
        out_img_11_address0,
        out_img_11_ce0,
        out_img_11_we0,
        out_img_11_d0,
        out_img_10_address0,
        out_img_10_ce0,
        out_img_10_we0,
        out_img_10_d0,
        out_img_9_address0,
        out_img_9_ce0,
        out_img_9_we0,
        out_img_9_d0,
        out_img_8_address0,
        out_img_8_ce0,
        out_img_8_we0,
        out_img_8_d0,
        out_img_7_address0,
        out_img_7_ce0,
        out_img_7_we0,
        out_img_7_d0,
        out_img_6_address0,
        out_img_6_ce0,
        out_img_6_we0,
        out_img_6_d0,
        out_img_5_address0,
        out_img_5_ce0,
        out_img_5_we0,
        out_img_5_d0,
        out_img_4_address0,
        out_img_4_ce0,
        out_img_4_we0,
        out_img_4_d0,
        out_img_3_address0,
        out_img_3_ce0,
        out_img_3_we0,
        out_img_3_d0,
        out_img_2_address0,
        out_img_2_ce0,
        out_img_2_we0,
        out_img_2_d0,
        out_img_1_address0,
        out_img_1_ce0,
        out_img_1_we0,
        out_img_1_d0,
        out_img_0_address0,
        out_img_0_ce0,
        out_img_0_we0,
        out_img_0_d0,
        p_udiv83,
        p_reload539,
        p_reload526,
        p_reload513,
        p_reload500,
        p_reload487,
        p_reload474,
        p_reload461,
        p_reload448,
        p_reload435,
        p_reload422,
        p_reload409,
        p_reload396,
        p_reload383,
        bias_conv4_load_1,
        p_reload538,
        p_reload525,
        p_reload512,
        p_reload499,
        p_reload486,
        p_reload473,
        p_reload460,
        p_reload447,
        p_reload434,
        p_reload421,
        p_reload408,
        p_reload395,
        p_reload382,
        p_reload537,
        p_reload524,
        p_reload511,
        p_reload498,
        p_reload485,
        p_reload472,
        p_reload459,
        p_reload446,
        p_reload433,
        p_reload420,
        p_reload407,
        p_reload394,
        p_reload381,
        p_reload536,
        p_reload523,
        p_reload510,
        p_reload497,
        p_reload484,
        p_reload471,
        p_reload458,
        p_reload445,
        p_reload432,
        p_reload419,
        p_reload406,
        p_reload393,
        p_reload380,
        p_reload535,
        p_reload522,
        p_reload509,
        p_reload496,
        p_reload483,
        p_reload470,
        p_reload457,
        p_reload444,
        p_reload431,
        p_reload418,
        p_reload405,
        p_reload392,
        p_reload379,
        p_reload534,
        p_reload521,
        p_reload508,
        p_reload495,
        p_reload482,
        p_reload469,
        p_reload456,
        p_reload443,
        p_reload430,
        p_reload417,
        p_reload404,
        p_reload391,
        p_reload378,
        p_reload533,
        p_reload520,
        p_reload507,
        p_reload494,
        p_reload481,
        p_reload468,
        p_reload455,
        p_reload442,
        p_reload429,
        p_reload416,
        p_reload403,
        p_reload390,
        p_reload377,
        p_reload532,
        p_reload519,
        p_reload506,
        p_reload493,
        p_reload480,
        p_reload467,
        p_reload454,
        p_reload441,
        p_reload428,
        p_reload415,
        p_reload402,
        p_reload389,
        p_reload376,
        p_reload531,
        p_reload518,
        p_reload505,
        p_reload492,
        p_reload479,
        p_reload466,
        p_reload453,
        p_reload440,
        p_reload427,
        p_reload414,
        p_reload401,
        p_reload388,
        p_reload375,
        p_reload530,
        p_reload517,
        p_reload504,
        p_reload491,
        p_reload478,
        p_reload465,
        p_reload452,
        p_reload439,
        p_reload426,
        p_reload413,
        p_reload400,
        p_reload387,
        p_reload374,
        p_reload529,
        p_reload516,
        p_reload503,
        p_reload490,
        p_reload477,
        p_reload464,
        p_reload451,
        p_reload438,
        p_reload425,
        p_reload412,
        p_reload399,
        p_reload386,
        p_reload373,
        p_reload528,
        p_reload515,
        p_reload502,
        p_reload489,
        p_reload476,
        p_reload463,
        p_reload450,
        p_reload437,
        p_reload424,
        p_reload411,
        p_reload398,
        p_reload385,
        p_reload372,
        p_reload527,
        p_reload514,
        p_reload501,
        p_reload488,
        p_reload475,
        p_reload462,
        p_reload449,
        p_reload436,
        p_reload423,
        p_reload410,
        p_reload397,
        p_reload384,
        p_reload,
        grp_fu_22647_p_din0,
        grp_fu_22647_p_din1,
        grp_fu_22647_p_opcode,
        grp_fu_22647_p_dout0,
        grp_fu_22647_p_ce,
        grp_fu_22651_p_din0,
        grp_fu_22651_p_din1,
        grp_fu_22651_p_opcode,
        grp_fu_22651_p_dout0,
        grp_fu_22651_p_ce,
        grp_fu_22655_p_din0,
        grp_fu_22655_p_din1,
        grp_fu_22655_p_opcode,
        grp_fu_22655_p_dout0,
        grp_fu_22655_p_ce,
        grp_fu_22659_p_din0,
        grp_fu_22659_p_din1,
        grp_fu_22659_p_opcode,
        grp_fu_22659_p_dout0,
        grp_fu_22659_p_ce,
        grp_fu_22663_p_din0,
        grp_fu_22663_p_din1,
        grp_fu_22663_p_opcode,
        grp_fu_22663_p_dout0,
        grp_fu_22663_p_ce,
        grp_fu_22667_p_din0,
        grp_fu_22667_p_din1,
        grp_fu_22667_p_opcode,
        grp_fu_22667_p_dout0,
        grp_fu_22667_p_ce,
        grp_fu_22671_p_din0,
        grp_fu_22671_p_din1,
        grp_fu_22671_p_opcode,
        grp_fu_22671_p_dout0,
        grp_fu_22671_p_ce,
        grp_fu_22675_p_din0,
        grp_fu_22675_p_din1,
        grp_fu_22675_p_opcode,
        grp_fu_22675_p_dout0,
        grp_fu_22675_p_ce,
        grp_fu_22679_p_din0,
        grp_fu_22679_p_din1,
        grp_fu_22679_p_opcode,
        grp_fu_22679_p_dout0,
        grp_fu_22679_p_ce,
        grp_fu_22683_p_din0,
        grp_fu_22683_p_din1,
        grp_fu_22683_p_opcode,
        grp_fu_22683_p_dout0,
        grp_fu_22683_p_ce,
        grp_fu_22687_p_din0,
        grp_fu_22687_p_din1,
        grp_fu_22687_p_opcode,
        grp_fu_22687_p_dout0,
        grp_fu_22687_p_ce,
        grp_fu_22691_p_din0,
        grp_fu_22691_p_din1,
        grp_fu_22691_p_opcode,
        grp_fu_22691_p_dout0,
        grp_fu_22691_p_ce,
        grp_fu_22695_p_din0,
        grp_fu_22695_p_din1,
        grp_fu_22695_p_opcode,
        grp_fu_22695_p_dout0,
        grp_fu_22695_p_ce,
        grp_fu_26659_p_din0,
        grp_fu_26659_p_din1,
        grp_fu_26659_p_opcode,
        grp_fu_26659_p_dout0,
        grp_fu_26659_p_ce,
        grp_fu_26663_p_din0,
        grp_fu_26663_p_din1,
        grp_fu_26663_p_opcode,
        grp_fu_26663_p_dout0,
        grp_fu_26663_p_ce,
        grp_fu_26667_p_din0,
        grp_fu_26667_p_din1,
        grp_fu_26667_p_opcode,
        grp_fu_26667_p_dout0,
        grp_fu_26667_p_ce,
        grp_fu_26671_p_din0,
        grp_fu_26671_p_din1,
        grp_fu_26671_p_opcode,
        grp_fu_26671_p_dout0,
        grp_fu_26671_p_ce,
        grp_fu_26675_p_din0,
        grp_fu_26675_p_din1,
        grp_fu_26675_p_opcode,
        grp_fu_26675_p_dout0,
        grp_fu_26675_p_ce,
        grp_fu_26679_p_din0,
        grp_fu_26679_p_din1,
        grp_fu_26679_p_opcode,
        grp_fu_26679_p_dout0,
        grp_fu_26679_p_ce,
        grp_fu_26683_p_din0,
        grp_fu_26683_p_din1,
        grp_fu_26683_p_opcode,
        grp_fu_26683_p_dout0,
        grp_fu_26683_p_ce,
        grp_fu_26687_p_din0,
        grp_fu_26687_p_din1,
        grp_fu_26687_p_opcode,
        grp_fu_26687_p_dout0,
        grp_fu_26687_p_ce,
        grp_fu_26691_p_din0,
        grp_fu_26691_p_din1,
        grp_fu_26691_p_opcode,
        grp_fu_26691_p_dout0,
        grp_fu_26691_p_ce,
        grp_fu_26695_p_din0,
        grp_fu_26695_p_din1,
        grp_fu_26695_p_opcode,
        grp_fu_26695_p_dout0,
        grp_fu_26695_p_ce,
        grp_fu_26699_p_din0,
        grp_fu_26699_p_din1,
        grp_fu_26699_p_opcode,
        grp_fu_26699_p_dout0,
        grp_fu_26699_p_ce,
        grp_fu_26703_p_din0,
        grp_fu_26703_p_din1,
        grp_fu_26703_p_opcode,
        grp_fu_26703_p_dout0,
        grp_fu_26703_p_ce,
        grp_fu_26707_p_din0,
        grp_fu_26707_p_din1,
        grp_fu_26707_p_opcode,
        grp_fu_26707_p_dout0,
        grp_fu_26707_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] out_img_12_address0;
output   out_img_12_ce0;
output   out_img_12_we0;
output  [31:0] out_img_12_d0;
output  [12:0] out_img_11_address0;
output   out_img_11_ce0;
output   out_img_11_we0;
output  [31:0] out_img_11_d0;
output  [12:0] out_img_10_address0;
output   out_img_10_ce0;
output   out_img_10_we0;
output  [31:0] out_img_10_d0;
output  [12:0] out_img_9_address0;
output   out_img_9_ce0;
output   out_img_9_we0;
output  [31:0] out_img_9_d0;
output  [12:0] out_img_8_address0;
output   out_img_8_ce0;
output   out_img_8_we0;
output  [31:0] out_img_8_d0;
output  [12:0] out_img_7_address0;
output   out_img_7_ce0;
output   out_img_7_we0;
output  [31:0] out_img_7_d0;
output  [12:0] out_img_6_address0;
output   out_img_6_ce0;
output   out_img_6_we0;
output  [31:0] out_img_6_d0;
output  [12:0] out_img_5_address0;
output   out_img_5_ce0;
output   out_img_5_we0;
output  [31:0] out_img_5_d0;
output  [12:0] out_img_4_address0;
output   out_img_4_ce0;
output   out_img_4_we0;
output  [31:0] out_img_4_d0;
output  [12:0] out_img_3_address0;
output   out_img_3_ce0;
output   out_img_3_we0;
output  [31:0] out_img_3_d0;
output  [12:0] out_img_2_address0;
output   out_img_2_ce0;
output   out_img_2_we0;
output  [31:0] out_img_2_d0;
output  [12:0] out_img_1_address0;
output   out_img_1_ce0;
output   out_img_1_we0;
output  [31:0] out_img_1_d0;
output  [12:0] out_img_0_address0;
output   out_img_0_ce0;
output   out_img_0_we0;
output  [31:0] out_img_0_d0;
input  [12:0] p_udiv83;
input  [31:0] p_reload539;
input  [31:0] p_reload526;
input  [31:0] p_reload513;
input  [31:0] p_reload500;
input  [31:0] p_reload487;
input  [31:0] p_reload474;
input  [31:0] p_reload461;
input  [31:0] p_reload448;
input  [31:0] p_reload435;
input  [31:0] p_reload422;
input  [31:0] p_reload409;
input  [31:0] p_reload396;
input  [31:0] p_reload383;
input  [31:0] bias_conv4_load_1;
input  [31:0] p_reload538;
input  [31:0] p_reload525;
input  [31:0] p_reload512;
input  [31:0] p_reload499;
input  [31:0] p_reload486;
input  [31:0] p_reload473;
input  [31:0] p_reload460;
input  [31:0] p_reload447;
input  [31:0] p_reload434;
input  [31:0] p_reload421;
input  [31:0] p_reload408;
input  [31:0] p_reload395;
input  [31:0] p_reload382;
input  [31:0] p_reload537;
input  [31:0] p_reload524;
input  [31:0] p_reload511;
input  [31:0] p_reload498;
input  [31:0] p_reload485;
input  [31:0] p_reload472;
input  [31:0] p_reload459;
input  [31:0] p_reload446;
input  [31:0] p_reload433;
input  [31:0] p_reload420;
input  [31:0] p_reload407;
input  [31:0] p_reload394;
input  [31:0] p_reload381;
input  [31:0] p_reload536;
input  [31:0] p_reload523;
input  [31:0] p_reload510;
input  [31:0] p_reload497;
input  [31:0] p_reload484;
input  [31:0] p_reload471;
input  [31:0] p_reload458;
input  [31:0] p_reload445;
input  [31:0] p_reload432;
input  [31:0] p_reload419;
input  [31:0] p_reload406;
input  [31:0] p_reload393;
input  [31:0] p_reload380;
input  [31:0] p_reload535;
input  [31:0] p_reload522;
input  [31:0] p_reload509;
input  [31:0] p_reload496;
input  [31:0] p_reload483;
input  [31:0] p_reload470;
input  [31:0] p_reload457;
input  [31:0] p_reload444;
input  [31:0] p_reload431;
input  [31:0] p_reload418;
input  [31:0] p_reload405;
input  [31:0] p_reload392;
input  [31:0] p_reload379;
input  [31:0] p_reload534;
input  [31:0] p_reload521;
input  [31:0] p_reload508;
input  [31:0] p_reload495;
input  [31:0] p_reload482;
input  [31:0] p_reload469;
input  [31:0] p_reload456;
input  [31:0] p_reload443;
input  [31:0] p_reload430;
input  [31:0] p_reload417;
input  [31:0] p_reload404;
input  [31:0] p_reload391;
input  [31:0] p_reload378;
input  [31:0] p_reload533;
input  [31:0] p_reload520;
input  [31:0] p_reload507;
input  [31:0] p_reload494;
input  [31:0] p_reload481;
input  [31:0] p_reload468;
input  [31:0] p_reload455;
input  [31:0] p_reload442;
input  [31:0] p_reload429;
input  [31:0] p_reload416;
input  [31:0] p_reload403;
input  [31:0] p_reload390;
input  [31:0] p_reload377;
input  [31:0] p_reload532;
input  [31:0] p_reload519;
input  [31:0] p_reload506;
input  [31:0] p_reload493;
input  [31:0] p_reload480;
input  [31:0] p_reload467;
input  [31:0] p_reload454;
input  [31:0] p_reload441;
input  [31:0] p_reload428;
input  [31:0] p_reload415;
input  [31:0] p_reload402;
input  [31:0] p_reload389;
input  [31:0] p_reload376;
input  [31:0] p_reload531;
input  [31:0] p_reload518;
input  [31:0] p_reload505;
input  [31:0] p_reload492;
input  [31:0] p_reload479;
input  [31:0] p_reload466;
input  [31:0] p_reload453;
input  [31:0] p_reload440;
input  [31:0] p_reload427;
input  [31:0] p_reload414;
input  [31:0] p_reload401;
input  [31:0] p_reload388;
input  [31:0] p_reload375;
input  [31:0] p_reload530;
input  [31:0] p_reload517;
input  [31:0] p_reload504;
input  [31:0] p_reload491;
input  [31:0] p_reload478;
input  [31:0] p_reload465;
input  [31:0] p_reload452;
input  [31:0] p_reload439;
input  [31:0] p_reload426;
input  [31:0] p_reload413;
input  [31:0] p_reload400;
input  [31:0] p_reload387;
input  [31:0] p_reload374;
input  [31:0] p_reload529;
input  [31:0] p_reload516;
input  [31:0] p_reload503;
input  [31:0] p_reload490;
input  [31:0] p_reload477;
input  [31:0] p_reload464;
input  [31:0] p_reload451;
input  [31:0] p_reload438;
input  [31:0] p_reload425;
input  [31:0] p_reload412;
input  [31:0] p_reload399;
input  [31:0] p_reload386;
input  [31:0] p_reload373;
input  [31:0] p_reload528;
input  [31:0] p_reload515;
input  [31:0] p_reload502;
input  [31:0] p_reload489;
input  [31:0] p_reload476;
input  [31:0] p_reload463;
input  [31:0] p_reload450;
input  [31:0] p_reload437;
input  [31:0] p_reload424;
input  [31:0] p_reload411;
input  [31:0] p_reload398;
input  [31:0] p_reload385;
input  [31:0] p_reload372;
input  [31:0] p_reload527;
input  [31:0] p_reload514;
input  [31:0] p_reload501;
input  [31:0] p_reload488;
input  [31:0] p_reload475;
input  [31:0] p_reload462;
input  [31:0] p_reload449;
input  [31:0] p_reload436;
input  [31:0] p_reload423;
input  [31:0] p_reload410;
input  [31:0] p_reload397;
input  [31:0] p_reload384;
input  [31:0] p_reload;
output  [31:0] grp_fu_22647_p_din0;
output  [31:0] grp_fu_22647_p_din1;
output  [1:0] grp_fu_22647_p_opcode;
input  [31:0] grp_fu_22647_p_dout0;
output   grp_fu_22647_p_ce;
output  [31:0] grp_fu_22651_p_din0;
output  [31:0] grp_fu_22651_p_din1;
output  [1:0] grp_fu_22651_p_opcode;
input  [31:0] grp_fu_22651_p_dout0;
output   grp_fu_22651_p_ce;
output  [31:0] grp_fu_22655_p_din0;
output  [31:0] grp_fu_22655_p_din1;
output  [1:0] grp_fu_22655_p_opcode;
input  [31:0] grp_fu_22655_p_dout0;
output   grp_fu_22655_p_ce;
output  [31:0] grp_fu_22659_p_din0;
output  [31:0] grp_fu_22659_p_din1;
output  [1:0] grp_fu_22659_p_opcode;
input  [31:0] grp_fu_22659_p_dout0;
output   grp_fu_22659_p_ce;
output  [31:0] grp_fu_22663_p_din0;
output  [31:0] grp_fu_22663_p_din1;
output  [1:0] grp_fu_22663_p_opcode;
input  [31:0] grp_fu_22663_p_dout0;
output   grp_fu_22663_p_ce;
output  [31:0] grp_fu_22667_p_din0;
output  [31:0] grp_fu_22667_p_din1;
output  [1:0] grp_fu_22667_p_opcode;
input  [31:0] grp_fu_22667_p_dout0;
output   grp_fu_22667_p_ce;
output  [31:0] grp_fu_22671_p_din0;
output  [31:0] grp_fu_22671_p_din1;
output  [1:0] grp_fu_22671_p_opcode;
input  [31:0] grp_fu_22671_p_dout0;
output   grp_fu_22671_p_ce;
output  [31:0] grp_fu_22675_p_din0;
output  [31:0] grp_fu_22675_p_din1;
output  [1:0] grp_fu_22675_p_opcode;
input  [31:0] grp_fu_22675_p_dout0;
output   grp_fu_22675_p_ce;
output  [31:0] grp_fu_22679_p_din0;
output  [31:0] grp_fu_22679_p_din1;
output  [1:0] grp_fu_22679_p_opcode;
input  [31:0] grp_fu_22679_p_dout0;
output   grp_fu_22679_p_ce;
output  [31:0] grp_fu_22683_p_din0;
output  [31:0] grp_fu_22683_p_din1;
output  [1:0] grp_fu_22683_p_opcode;
input  [31:0] grp_fu_22683_p_dout0;
output   grp_fu_22683_p_ce;
output  [31:0] grp_fu_22687_p_din0;
output  [31:0] grp_fu_22687_p_din1;
output  [1:0] grp_fu_22687_p_opcode;
input  [31:0] grp_fu_22687_p_dout0;
output   grp_fu_22687_p_ce;
output  [31:0] grp_fu_22691_p_din0;
output  [31:0] grp_fu_22691_p_din1;
output  [1:0] grp_fu_22691_p_opcode;
input  [31:0] grp_fu_22691_p_dout0;
output   grp_fu_22691_p_ce;
output  [31:0] grp_fu_22695_p_din0;
output  [31:0] grp_fu_22695_p_din1;
output  [1:0] grp_fu_22695_p_opcode;
input  [31:0] grp_fu_22695_p_dout0;
output   grp_fu_22695_p_ce;
output  [31:0] grp_fu_26659_p_din0;
output  [31:0] grp_fu_26659_p_din1;
output  [4:0] grp_fu_26659_p_opcode;
input  [0:0] grp_fu_26659_p_dout0;
output   grp_fu_26659_p_ce;
output  [31:0] grp_fu_26663_p_din0;
output  [31:0] grp_fu_26663_p_din1;
output  [4:0] grp_fu_26663_p_opcode;
input  [0:0] grp_fu_26663_p_dout0;
output   grp_fu_26663_p_ce;
output  [31:0] grp_fu_26667_p_din0;
output  [31:0] grp_fu_26667_p_din1;
output  [4:0] grp_fu_26667_p_opcode;
input  [0:0] grp_fu_26667_p_dout0;
output   grp_fu_26667_p_ce;
output  [31:0] grp_fu_26671_p_din0;
output  [31:0] grp_fu_26671_p_din1;
output  [4:0] grp_fu_26671_p_opcode;
input  [0:0] grp_fu_26671_p_dout0;
output   grp_fu_26671_p_ce;
output  [31:0] grp_fu_26675_p_din0;
output  [31:0] grp_fu_26675_p_din1;
output  [4:0] grp_fu_26675_p_opcode;
input  [0:0] grp_fu_26675_p_dout0;
output   grp_fu_26675_p_ce;
output  [31:0] grp_fu_26679_p_din0;
output  [31:0] grp_fu_26679_p_din1;
output  [4:0] grp_fu_26679_p_opcode;
input  [0:0] grp_fu_26679_p_dout0;
output   grp_fu_26679_p_ce;
output  [31:0] grp_fu_26683_p_din0;
output  [31:0] grp_fu_26683_p_din1;
output  [4:0] grp_fu_26683_p_opcode;
input  [0:0] grp_fu_26683_p_dout0;
output   grp_fu_26683_p_ce;
output  [31:0] grp_fu_26687_p_din0;
output  [31:0] grp_fu_26687_p_din1;
output  [4:0] grp_fu_26687_p_opcode;
input  [0:0] grp_fu_26687_p_dout0;
output   grp_fu_26687_p_ce;
output  [31:0] grp_fu_26691_p_din0;
output  [31:0] grp_fu_26691_p_din1;
output  [4:0] grp_fu_26691_p_opcode;
input  [0:0] grp_fu_26691_p_dout0;
output   grp_fu_26691_p_ce;
output  [31:0] grp_fu_26695_p_din0;
output  [31:0] grp_fu_26695_p_din1;
output  [4:0] grp_fu_26695_p_opcode;
input  [0:0] grp_fu_26695_p_dout0;
output   grp_fu_26695_p_ce;
output  [31:0] grp_fu_26699_p_din0;
output  [31:0] grp_fu_26699_p_din1;
output  [4:0] grp_fu_26699_p_opcode;
input  [0:0] grp_fu_26699_p_dout0;
output   grp_fu_26699_p_ce;
output  [31:0] grp_fu_26703_p_din0;
output  [31:0] grp_fu_26703_p_din1;
output  [4:0] grp_fu_26703_p_opcode;
input  [0:0] grp_fu_26703_p_dout0;
output   grp_fu_26703_p_ce;
output  [31:0] grp_fu_26707_p_din0;
output  [31:0] grp_fu_26707_p_din1;
output  [4:0] grp_fu_26707_p_opcode;
input  [0:0] grp_fu_26707_p_dout0;
output   grp_fu_26707_p_ce;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln229_fu_1760_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [3:0] i_7_reg_3248;
reg   [3:0] i_7_reg_3248_pp0_iter1_reg;
reg   [3:0] i_7_reg_3248_pp0_iter2_reg;
reg   [3:0] i_7_reg_3248_pp0_iter3_reg;
reg   [3:0] i_7_reg_3248_pp0_iter4_reg;
reg   [3:0] i_7_reg_3248_pp0_iter5_reg;
wire   [31:0] tmp_90_fu_1772_p29;
reg   [31:0] tmp_90_reg_3257;
wire   [31:0] tmp_91_fu_1832_p29;
reg   [31:0] tmp_91_reg_3262;
wire   [31:0] tmp_92_fu_1892_p29;
reg   [31:0] tmp_92_reg_3267;
wire   [31:0] tmp_93_fu_1952_p29;
reg   [31:0] tmp_93_reg_3272;
wire   [31:0] tmp_94_fu_2012_p29;
reg   [31:0] tmp_94_reg_3277;
wire   [31:0] tmp_95_fu_2072_p29;
reg   [31:0] tmp_95_reg_3282;
wire   [31:0] tmp_96_fu_2132_p29;
reg   [31:0] tmp_96_reg_3287;
wire   [31:0] tmp_97_fu_2192_p29;
reg   [31:0] tmp_97_reg_3292;
wire   [31:0] tmp_98_fu_2252_p29;
reg   [31:0] tmp_98_reg_3297;
wire   [31:0] tmp_99_fu_2312_p29;
reg   [31:0] tmp_99_reg_3302;
wire   [31:0] tmp_100_fu_2372_p29;
reg   [31:0] tmp_100_reg_3307;
wire   [31:0] tmp_101_fu_2432_p29;
reg   [31:0] tmp_101_reg_3312;
wire   [31:0] tmp_102_fu_2492_p29;
reg   [31:0] tmp_102_reg_3317;
reg   [31:0] out_reg_3322;
reg   [31:0] out_reg_3322_pp0_iter5_reg;
reg   [31:0] out_16_reg_3329;
reg   [31:0] out_16_reg_3329_pp0_iter5_reg;
reg   [31:0] out_17_reg_3336;
reg   [31:0] out_17_reg_3336_pp0_iter5_reg;
reg   [31:0] out_18_reg_3343;
reg   [31:0] out_18_reg_3343_pp0_iter5_reg;
reg   [31:0] out_19_reg_3350;
reg   [31:0] out_19_reg_3350_pp0_iter5_reg;
reg   [31:0] out_20_reg_3357;
reg   [31:0] out_20_reg_3357_pp0_iter5_reg;
reg   [31:0] out_21_reg_3364;
reg   [31:0] out_21_reg_3364_pp0_iter5_reg;
reg   [31:0] out_22_reg_3371;
reg   [31:0] out_22_reg_3371_pp0_iter5_reg;
reg   [31:0] out_23_reg_3378;
reg   [31:0] out_23_reg_3378_pp0_iter5_reg;
reg   [31:0] out_24_reg_3385;
reg   [31:0] out_24_reg_3385_pp0_iter5_reg;
reg   [31:0] out_25_reg_3392;
reg   [31:0] out_25_reg_3392_pp0_iter5_reg;
reg   [31:0] out_26_reg_3399;
reg   [31:0] out_26_reg_3399_pp0_iter5_reg;
reg   [31:0] out_27_reg_3406;
reg   [31:0] out_27_reg_3406_pp0_iter5_reg;
wire   [63:0] zext_ln232_fu_2565_p1;
wire    ap_block_pp0_stage0;
reg   [3:0] i_fu_436;
wire   [3:0] add_ln229_fu_1766_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i_7;
reg    out_img_0_we0_local;
wire   [31:0] select_ln234_fu_2623_p3;
reg    out_img_0_ce0_local;
reg    out_img_1_we0_local;
wire   [31:0] select_ln234_1_fu_2672_p3;
reg    out_img_1_ce0_local;
reg    out_img_2_we0_local;
wire   [31:0] select_ln234_2_fu_2721_p3;
reg    out_img_2_ce0_local;
reg    out_img_3_we0_local;
wire   [31:0] select_ln234_3_fu_2770_p3;
reg    out_img_3_ce0_local;
reg    out_img_4_we0_local;
wire   [31:0] select_ln234_4_fu_2819_p3;
reg    out_img_4_ce0_local;
reg    out_img_5_we0_local;
wire   [31:0] select_ln234_5_fu_2868_p3;
reg    out_img_5_ce0_local;
reg    out_img_6_we0_local;
wire   [31:0] select_ln234_6_fu_2917_p3;
reg    out_img_6_ce0_local;
reg    out_img_7_we0_local;
wire   [31:0] select_ln234_7_fu_2966_p3;
reg    out_img_7_ce0_local;
reg    out_img_8_we0_local;
wire   [31:0] select_ln234_8_fu_3015_p3;
reg    out_img_8_ce0_local;
reg    out_img_9_we0_local;
wire   [31:0] select_ln234_9_fu_3064_p3;
reg    out_img_9_ce0_local;
reg    out_img_10_we0_local;
wire   [31:0] select_ln234_10_fu_3113_p3;
reg    out_img_10_ce0_local;
reg    out_img_11_we0_local;
wire   [31:0] select_ln234_11_fu_3162_p3;
reg    out_img_11_ce0_local;
reg    out_img_12_we0_local;
wire   [31:0] select_ln234_12_fu_3211_p3;
reg    out_img_12_ce0_local;
wire   [31:0] tmp_90_fu_1772_p27;
wire   [31:0] tmp_91_fu_1832_p27;
wire   [31:0] tmp_92_fu_1892_p27;
wire   [31:0] tmp_93_fu_1952_p27;
wire   [31:0] tmp_94_fu_2012_p27;
wire   [31:0] tmp_95_fu_2072_p27;
wire   [31:0] tmp_96_fu_2132_p27;
wire   [31:0] tmp_97_fu_2192_p27;
wire   [31:0] tmp_98_fu_2252_p27;
wire   [31:0] tmp_99_fu_2312_p27;
wire   [31:0] tmp_100_fu_2372_p27;
wire   [31:0] tmp_101_fu_2432_p27;
wire   [31:0] tmp_102_fu_2492_p27;
wire   [12:0] zext_ln229_fu_2557_p1;
wire   [12:0] add_ln232_fu_2560_p2;
wire   [31:0] bitcast_ln234_fu_2582_p1;
wire   [7:0] tmp_s_fu_2585_p4;
wire   [22:0] trunc_ln234_fu_2595_p1;
wire   [0:0] icmp_ln234_1_fu_2605_p2;
wire   [0:0] icmp_ln234_fu_2599_p2;
wire   [0:0] or_ln234_fu_2611_p2;
wire   [0:0] and_ln234_fu_2617_p2;
wire   [31:0] bitcast_ln234_1_fu_2631_p1;
wire   [7:0] tmp_120_fu_2634_p4;
wire   [22:0] trunc_ln234_1_fu_2644_p1;
wire   [0:0] icmp_ln234_3_fu_2654_p2;
wire   [0:0] icmp_ln234_2_fu_2648_p2;
wire   [0:0] or_ln234_1_fu_2660_p2;
wire   [0:0] and_ln234_1_fu_2666_p2;
wire   [31:0] bitcast_ln234_2_fu_2680_p1;
wire   [7:0] tmp_122_fu_2683_p4;
wire   [22:0] trunc_ln234_2_fu_2693_p1;
wire   [0:0] icmp_ln234_5_fu_2703_p2;
wire   [0:0] icmp_ln234_4_fu_2697_p2;
wire   [0:0] or_ln234_2_fu_2709_p2;
wire   [0:0] and_ln234_2_fu_2715_p2;
wire   [31:0] bitcast_ln234_3_fu_2729_p1;
wire   [7:0] tmp_124_fu_2732_p4;
wire   [22:0] trunc_ln234_3_fu_2742_p1;
wire   [0:0] icmp_ln234_7_fu_2752_p2;
wire   [0:0] icmp_ln234_6_fu_2746_p2;
wire   [0:0] or_ln234_3_fu_2758_p2;
wire   [0:0] and_ln234_3_fu_2764_p2;
wire   [31:0] bitcast_ln234_4_fu_2778_p1;
wire   [7:0] tmp_126_fu_2781_p4;
wire   [22:0] trunc_ln234_4_fu_2791_p1;
wire   [0:0] icmp_ln234_9_fu_2801_p2;
wire   [0:0] icmp_ln234_8_fu_2795_p2;
wire   [0:0] or_ln234_4_fu_2807_p2;
wire   [0:0] and_ln234_4_fu_2813_p2;
wire   [31:0] bitcast_ln234_5_fu_2827_p1;
wire   [7:0] tmp_128_fu_2830_p4;
wire   [22:0] trunc_ln234_5_fu_2840_p1;
wire   [0:0] icmp_ln234_11_fu_2850_p2;
wire   [0:0] icmp_ln234_10_fu_2844_p2;
wire   [0:0] or_ln234_5_fu_2856_p2;
wire   [0:0] and_ln234_5_fu_2862_p2;
wire   [31:0] bitcast_ln234_6_fu_2876_p1;
wire   [7:0] tmp_130_fu_2879_p4;
wire   [22:0] trunc_ln234_6_fu_2889_p1;
wire   [0:0] icmp_ln234_13_fu_2899_p2;
wire   [0:0] icmp_ln234_12_fu_2893_p2;
wire   [0:0] or_ln234_6_fu_2905_p2;
wire   [0:0] and_ln234_6_fu_2911_p2;
wire   [31:0] bitcast_ln234_7_fu_2925_p1;
wire   [7:0] tmp_132_fu_2928_p4;
wire   [22:0] trunc_ln234_7_fu_2938_p1;
wire   [0:0] icmp_ln234_15_fu_2948_p2;
wire   [0:0] icmp_ln234_14_fu_2942_p2;
wire   [0:0] or_ln234_7_fu_2954_p2;
wire   [0:0] and_ln234_7_fu_2960_p2;
wire   [31:0] bitcast_ln234_8_fu_2974_p1;
wire   [7:0] tmp_134_fu_2977_p4;
wire   [22:0] trunc_ln234_8_fu_2987_p1;
wire   [0:0] icmp_ln234_17_fu_2997_p2;
wire   [0:0] icmp_ln234_16_fu_2991_p2;
wire   [0:0] or_ln234_8_fu_3003_p2;
wire   [0:0] and_ln234_8_fu_3009_p2;
wire   [31:0] bitcast_ln234_9_fu_3023_p1;
wire   [7:0] tmp_136_fu_3026_p4;
wire   [22:0] trunc_ln234_9_fu_3036_p1;
wire   [0:0] icmp_ln234_19_fu_3046_p2;
wire   [0:0] icmp_ln234_18_fu_3040_p2;
wire   [0:0] or_ln234_9_fu_3052_p2;
wire   [0:0] and_ln234_9_fu_3058_p2;
wire   [31:0] bitcast_ln234_10_fu_3072_p1;
wire   [7:0] tmp_138_fu_3075_p4;
wire   [22:0] trunc_ln234_10_fu_3085_p1;
wire   [0:0] icmp_ln234_21_fu_3095_p2;
wire   [0:0] icmp_ln234_20_fu_3089_p2;
wire   [0:0] or_ln234_10_fu_3101_p2;
wire   [0:0] and_ln234_10_fu_3107_p2;
wire   [31:0] bitcast_ln234_11_fu_3121_p1;
wire   [7:0] tmp_140_fu_3124_p4;
wire   [22:0] trunc_ln234_11_fu_3134_p1;
wire   [0:0] icmp_ln234_23_fu_3144_p2;
wire   [0:0] icmp_ln234_22_fu_3138_p2;
wire   [0:0] or_ln234_11_fu_3150_p2;
wire   [0:0] and_ln234_11_fu_3156_p2;
wire   [31:0] bitcast_ln234_12_fu_3170_p1;
wire   [7:0] tmp_142_fu_3173_p4;
wire   [22:0] trunc_ln234_12_fu_3183_p1;
wire   [0:0] icmp_ln234_25_fu_3193_p2;
wire   [0:0] icmp_ln234_24_fu_3187_p2;
wire   [0:0] or_ln234_12_fu_3199_p2;
wire   [0:0] and_ln234_12_fu_3205_p2;
wire    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [3:0] tmp_90_fu_1772_p1;
wire   [3:0] tmp_90_fu_1772_p3;
wire   [3:0] tmp_90_fu_1772_p5;
wire   [3:0] tmp_90_fu_1772_p7;
wire   [3:0] tmp_90_fu_1772_p9;
wire   [3:0] tmp_90_fu_1772_p11;
wire   [3:0] tmp_90_fu_1772_p13;
wire   [3:0] tmp_90_fu_1772_p15;
wire  signed [3:0] tmp_90_fu_1772_p17;
wire  signed [3:0] tmp_90_fu_1772_p19;
wire  signed [3:0] tmp_90_fu_1772_p21;
wire  signed [3:0] tmp_90_fu_1772_p23;
wire  signed [3:0] tmp_90_fu_1772_p25;
wire   [3:0] tmp_91_fu_1832_p1;
wire   [3:0] tmp_91_fu_1832_p3;
wire   [3:0] tmp_91_fu_1832_p5;
wire   [3:0] tmp_91_fu_1832_p7;
wire   [3:0] tmp_91_fu_1832_p9;
wire   [3:0] tmp_91_fu_1832_p11;
wire   [3:0] tmp_91_fu_1832_p13;
wire   [3:0] tmp_91_fu_1832_p15;
wire  signed [3:0] tmp_91_fu_1832_p17;
wire  signed [3:0] tmp_91_fu_1832_p19;
wire  signed [3:0] tmp_91_fu_1832_p21;
wire  signed [3:0] tmp_91_fu_1832_p23;
wire  signed [3:0] tmp_91_fu_1832_p25;
wire   [3:0] tmp_92_fu_1892_p1;
wire   [3:0] tmp_92_fu_1892_p3;
wire   [3:0] tmp_92_fu_1892_p5;
wire   [3:0] tmp_92_fu_1892_p7;
wire   [3:0] tmp_92_fu_1892_p9;
wire   [3:0] tmp_92_fu_1892_p11;
wire   [3:0] tmp_92_fu_1892_p13;
wire   [3:0] tmp_92_fu_1892_p15;
wire  signed [3:0] tmp_92_fu_1892_p17;
wire  signed [3:0] tmp_92_fu_1892_p19;
wire  signed [3:0] tmp_92_fu_1892_p21;
wire  signed [3:0] tmp_92_fu_1892_p23;
wire  signed [3:0] tmp_92_fu_1892_p25;
wire   [3:0] tmp_93_fu_1952_p1;
wire   [3:0] tmp_93_fu_1952_p3;
wire   [3:0] tmp_93_fu_1952_p5;
wire   [3:0] tmp_93_fu_1952_p7;
wire   [3:0] tmp_93_fu_1952_p9;
wire   [3:0] tmp_93_fu_1952_p11;
wire   [3:0] tmp_93_fu_1952_p13;
wire   [3:0] tmp_93_fu_1952_p15;
wire  signed [3:0] tmp_93_fu_1952_p17;
wire  signed [3:0] tmp_93_fu_1952_p19;
wire  signed [3:0] tmp_93_fu_1952_p21;
wire  signed [3:0] tmp_93_fu_1952_p23;
wire  signed [3:0] tmp_93_fu_1952_p25;
wire   [3:0] tmp_94_fu_2012_p1;
wire   [3:0] tmp_94_fu_2012_p3;
wire   [3:0] tmp_94_fu_2012_p5;
wire   [3:0] tmp_94_fu_2012_p7;
wire   [3:0] tmp_94_fu_2012_p9;
wire   [3:0] tmp_94_fu_2012_p11;
wire   [3:0] tmp_94_fu_2012_p13;
wire   [3:0] tmp_94_fu_2012_p15;
wire  signed [3:0] tmp_94_fu_2012_p17;
wire  signed [3:0] tmp_94_fu_2012_p19;
wire  signed [3:0] tmp_94_fu_2012_p21;
wire  signed [3:0] tmp_94_fu_2012_p23;
wire  signed [3:0] tmp_94_fu_2012_p25;
wire   [3:0] tmp_95_fu_2072_p1;
wire   [3:0] tmp_95_fu_2072_p3;
wire   [3:0] tmp_95_fu_2072_p5;
wire   [3:0] tmp_95_fu_2072_p7;
wire   [3:0] tmp_95_fu_2072_p9;
wire   [3:0] tmp_95_fu_2072_p11;
wire   [3:0] tmp_95_fu_2072_p13;
wire   [3:0] tmp_95_fu_2072_p15;
wire  signed [3:0] tmp_95_fu_2072_p17;
wire  signed [3:0] tmp_95_fu_2072_p19;
wire  signed [3:0] tmp_95_fu_2072_p21;
wire  signed [3:0] tmp_95_fu_2072_p23;
wire  signed [3:0] tmp_95_fu_2072_p25;
wire   [3:0] tmp_96_fu_2132_p1;
wire   [3:0] tmp_96_fu_2132_p3;
wire   [3:0] tmp_96_fu_2132_p5;
wire   [3:0] tmp_96_fu_2132_p7;
wire   [3:0] tmp_96_fu_2132_p9;
wire   [3:0] tmp_96_fu_2132_p11;
wire   [3:0] tmp_96_fu_2132_p13;
wire   [3:0] tmp_96_fu_2132_p15;
wire  signed [3:0] tmp_96_fu_2132_p17;
wire  signed [3:0] tmp_96_fu_2132_p19;
wire  signed [3:0] tmp_96_fu_2132_p21;
wire  signed [3:0] tmp_96_fu_2132_p23;
wire  signed [3:0] tmp_96_fu_2132_p25;
wire   [3:0] tmp_97_fu_2192_p1;
wire   [3:0] tmp_97_fu_2192_p3;
wire   [3:0] tmp_97_fu_2192_p5;
wire   [3:0] tmp_97_fu_2192_p7;
wire   [3:0] tmp_97_fu_2192_p9;
wire   [3:0] tmp_97_fu_2192_p11;
wire   [3:0] tmp_97_fu_2192_p13;
wire   [3:0] tmp_97_fu_2192_p15;
wire  signed [3:0] tmp_97_fu_2192_p17;
wire  signed [3:0] tmp_97_fu_2192_p19;
wire  signed [3:0] tmp_97_fu_2192_p21;
wire  signed [3:0] tmp_97_fu_2192_p23;
wire  signed [3:0] tmp_97_fu_2192_p25;
wire   [3:0] tmp_98_fu_2252_p1;
wire   [3:0] tmp_98_fu_2252_p3;
wire   [3:0] tmp_98_fu_2252_p5;
wire   [3:0] tmp_98_fu_2252_p7;
wire   [3:0] tmp_98_fu_2252_p9;
wire   [3:0] tmp_98_fu_2252_p11;
wire   [3:0] tmp_98_fu_2252_p13;
wire   [3:0] tmp_98_fu_2252_p15;
wire  signed [3:0] tmp_98_fu_2252_p17;
wire  signed [3:0] tmp_98_fu_2252_p19;
wire  signed [3:0] tmp_98_fu_2252_p21;
wire  signed [3:0] tmp_98_fu_2252_p23;
wire  signed [3:0] tmp_98_fu_2252_p25;
wire   [3:0] tmp_99_fu_2312_p1;
wire   [3:0] tmp_99_fu_2312_p3;
wire   [3:0] tmp_99_fu_2312_p5;
wire   [3:0] tmp_99_fu_2312_p7;
wire   [3:0] tmp_99_fu_2312_p9;
wire   [3:0] tmp_99_fu_2312_p11;
wire   [3:0] tmp_99_fu_2312_p13;
wire   [3:0] tmp_99_fu_2312_p15;
wire  signed [3:0] tmp_99_fu_2312_p17;
wire  signed [3:0] tmp_99_fu_2312_p19;
wire  signed [3:0] tmp_99_fu_2312_p21;
wire  signed [3:0] tmp_99_fu_2312_p23;
wire  signed [3:0] tmp_99_fu_2312_p25;
wire   [3:0] tmp_100_fu_2372_p1;
wire   [3:0] tmp_100_fu_2372_p3;
wire   [3:0] tmp_100_fu_2372_p5;
wire   [3:0] tmp_100_fu_2372_p7;
wire   [3:0] tmp_100_fu_2372_p9;
wire   [3:0] tmp_100_fu_2372_p11;
wire   [3:0] tmp_100_fu_2372_p13;
wire   [3:0] tmp_100_fu_2372_p15;
wire  signed [3:0] tmp_100_fu_2372_p17;
wire  signed [3:0] tmp_100_fu_2372_p19;
wire  signed [3:0] tmp_100_fu_2372_p21;
wire  signed [3:0] tmp_100_fu_2372_p23;
wire  signed [3:0] tmp_100_fu_2372_p25;
wire   [3:0] tmp_101_fu_2432_p1;
wire   [3:0] tmp_101_fu_2432_p3;
wire   [3:0] tmp_101_fu_2432_p5;
wire   [3:0] tmp_101_fu_2432_p7;
wire   [3:0] tmp_101_fu_2432_p9;
wire   [3:0] tmp_101_fu_2432_p11;
wire   [3:0] tmp_101_fu_2432_p13;
wire   [3:0] tmp_101_fu_2432_p15;
wire  signed [3:0] tmp_101_fu_2432_p17;
wire  signed [3:0] tmp_101_fu_2432_p19;
wire  signed [3:0] tmp_101_fu_2432_p21;
wire  signed [3:0] tmp_101_fu_2432_p23;
wire  signed [3:0] tmp_101_fu_2432_p25;
wire   [3:0] tmp_102_fu_2492_p1;
wire   [3:0] tmp_102_fu_2492_p3;
wire   [3:0] tmp_102_fu_2492_p5;
wire   [3:0] tmp_102_fu_2492_p7;
wire   [3:0] tmp_102_fu_2492_p9;
wire   [3:0] tmp_102_fu_2492_p11;
wire   [3:0] tmp_102_fu_2492_p13;
wire   [3:0] tmp_102_fu_2492_p15;
wire  signed [3:0] tmp_102_fu_2492_p17;
wire  signed [3:0] tmp_102_fu_2492_p19;
wire  signed [3:0] tmp_102_fu_2492_p21;
wire  signed [3:0] tmp_102_fu_2492_p23;
wire  signed [3:0] tmp_102_fu_2492_p25;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 i_fu_436 = 4'd0;
#0 ap_done_reg = 1'b0;
end

(* dissolve_hierarchy = "yes" *) NN_sparsemux_27_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_27_4_32_1_1_U18841(
    .din0(p_reload539),
    .din1(p_reload526),
    .din2(p_reload513),
    .din3(p_reload500),
    .din4(p_reload487),
    .din5(p_reload474),
    .din6(p_reload461),
    .din7(p_reload448),
    .din8(p_reload435),
    .din9(p_reload422),
    .din10(p_reload409),
    .din11(p_reload396),
    .din12(p_reload383),
    .def(tmp_90_fu_1772_p27),
    .sel(ap_sig_allocacmp_i_7),
    .dout(tmp_90_fu_1772_p29)
);

(* dissolve_hierarchy = "yes" *) NN_sparsemux_27_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_27_4_32_1_1_U18842(
    .din0(p_reload538),
    .din1(p_reload525),
    .din2(p_reload512),
    .din3(p_reload499),
    .din4(p_reload486),
    .din5(p_reload473),
    .din6(p_reload460),
    .din7(p_reload447),
    .din8(p_reload434),
    .din9(p_reload421),
    .din10(p_reload408),
    .din11(p_reload395),
    .din12(p_reload382),
    .def(tmp_91_fu_1832_p27),
    .sel(ap_sig_allocacmp_i_7),
    .dout(tmp_91_fu_1832_p29)
);

(* dissolve_hierarchy = "yes" *) NN_sparsemux_27_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_27_4_32_1_1_U18843(
    .din0(p_reload537),
    .din1(p_reload524),
    .din2(p_reload511),
    .din3(p_reload498),
    .din4(p_reload485),
    .din5(p_reload472),
    .din6(p_reload459),
    .din7(p_reload446),
    .din8(p_reload433),
    .din9(p_reload420),
    .din10(p_reload407),
    .din11(p_reload394),
    .din12(p_reload381),
    .def(tmp_92_fu_1892_p27),
    .sel(ap_sig_allocacmp_i_7),
    .dout(tmp_92_fu_1892_p29)
);

(* dissolve_hierarchy = "yes" *) NN_sparsemux_27_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_27_4_32_1_1_U18844(
    .din0(p_reload536),
    .din1(p_reload523),
    .din2(p_reload510),
    .din3(p_reload497),
    .din4(p_reload484),
    .din5(p_reload471),
    .din6(p_reload458),
    .din7(p_reload445),
    .din8(p_reload432),
    .din9(p_reload419),
    .din10(p_reload406),
    .din11(p_reload393),
    .din12(p_reload380),
    .def(tmp_93_fu_1952_p27),
    .sel(ap_sig_allocacmp_i_7),
    .dout(tmp_93_fu_1952_p29)
);

(* dissolve_hierarchy = "yes" *) NN_sparsemux_27_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_27_4_32_1_1_U18845(
    .din0(p_reload535),
    .din1(p_reload522),
    .din2(p_reload509),
    .din3(p_reload496),
    .din4(p_reload483),
    .din5(p_reload470),
    .din6(p_reload457),
    .din7(p_reload444),
    .din8(p_reload431),
    .din9(p_reload418),
    .din10(p_reload405),
    .din11(p_reload392),
    .din12(p_reload379),
    .def(tmp_94_fu_2012_p27),
    .sel(ap_sig_allocacmp_i_7),
    .dout(tmp_94_fu_2012_p29)
);

(* dissolve_hierarchy = "yes" *) NN_sparsemux_27_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_27_4_32_1_1_U18846(
    .din0(p_reload534),
    .din1(p_reload521),
    .din2(p_reload508),
    .din3(p_reload495),
    .din4(p_reload482),
    .din5(p_reload469),
    .din6(p_reload456),
    .din7(p_reload443),
    .din8(p_reload430),
    .din9(p_reload417),
    .din10(p_reload404),
    .din11(p_reload391),
    .din12(p_reload378),
    .def(tmp_95_fu_2072_p27),
    .sel(ap_sig_allocacmp_i_7),
    .dout(tmp_95_fu_2072_p29)
);

(* dissolve_hierarchy = "yes" *) NN_sparsemux_27_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_27_4_32_1_1_U18847(
    .din0(p_reload533),
    .din1(p_reload520),
    .din2(p_reload507),
    .din3(p_reload494),
    .din4(p_reload481),
    .din5(p_reload468),
    .din6(p_reload455),
    .din7(p_reload442),
    .din8(p_reload429),
    .din9(p_reload416),
    .din10(p_reload403),
    .din11(p_reload390),
    .din12(p_reload377),
    .def(tmp_96_fu_2132_p27),
    .sel(ap_sig_allocacmp_i_7),
    .dout(tmp_96_fu_2132_p29)
);

(* dissolve_hierarchy = "yes" *) NN_sparsemux_27_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_27_4_32_1_1_U18848(
    .din0(p_reload532),
    .din1(p_reload519),
    .din2(p_reload506),
    .din3(p_reload493),
    .din4(p_reload480),
    .din5(p_reload467),
    .din6(p_reload454),
    .din7(p_reload441),
    .din8(p_reload428),
    .din9(p_reload415),
    .din10(p_reload402),
    .din11(p_reload389),
    .din12(p_reload376),
    .def(tmp_97_fu_2192_p27),
    .sel(ap_sig_allocacmp_i_7),
    .dout(tmp_97_fu_2192_p29)
);

(* dissolve_hierarchy = "yes" *) NN_sparsemux_27_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_27_4_32_1_1_U18849(
    .din0(p_reload531),
    .din1(p_reload518),
    .din2(p_reload505),
    .din3(p_reload492),
    .din4(p_reload479),
    .din5(p_reload466),
    .din6(p_reload453),
    .din7(p_reload440),
    .din8(p_reload427),
    .din9(p_reload414),
    .din10(p_reload401),
    .din11(p_reload388),
    .din12(p_reload375),
    .def(tmp_98_fu_2252_p27),
    .sel(ap_sig_allocacmp_i_7),
    .dout(tmp_98_fu_2252_p29)
);

(* dissolve_hierarchy = "yes" *) NN_sparsemux_27_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_27_4_32_1_1_U18850(
    .din0(p_reload530),
    .din1(p_reload517),
    .din2(p_reload504),
    .din3(p_reload491),
    .din4(p_reload478),
    .din5(p_reload465),
    .din6(p_reload452),
    .din7(p_reload439),
    .din8(p_reload426),
    .din9(p_reload413),
    .din10(p_reload400),
    .din11(p_reload387),
    .din12(p_reload374),
    .def(tmp_99_fu_2312_p27),
    .sel(ap_sig_allocacmp_i_7),
    .dout(tmp_99_fu_2312_p29)
);

(* dissolve_hierarchy = "yes" *) NN_sparsemux_27_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_27_4_32_1_1_U18851(
    .din0(p_reload529),
    .din1(p_reload516),
    .din2(p_reload503),
    .din3(p_reload490),
    .din4(p_reload477),
    .din5(p_reload464),
    .din6(p_reload451),
    .din7(p_reload438),
    .din8(p_reload425),
    .din9(p_reload412),
    .din10(p_reload399),
    .din11(p_reload386),
    .din12(p_reload373),
    .def(tmp_100_fu_2372_p27),
    .sel(ap_sig_allocacmp_i_7),
    .dout(tmp_100_fu_2372_p29)
);

(* dissolve_hierarchy = "yes" *) NN_sparsemux_27_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_27_4_32_1_1_U18852(
    .din0(p_reload528),
    .din1(p_reload515),
    .din2(p_reload502),
    .din3(p_reload489),
    .din4(p_reload476),
    .din5(p_reload463),
    .din6(p_reload450),
    .din7(p_reload437),
    .din8(p_reload424),
    .din9(p_reload411),
    .din10(p_reload398),
    .din11(p_reload385),
    .din12(p_reload372),
    .def(tmp_101_fu_2432_p27),
    .sel(ap_sig_allocacmp_i_7),
    .dout(tmp_101_fu_2432_p29)
);

(* dissolve_hierarchy = "yes" *) NN_sparsemux_27_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_27_4_32_1_1_U18853(
    .din0(p_reload527),
    .din1(p_reload514),
    .din2(p_reload501),
    .din3(p_reload488),
    .din4(p_reload475),
    .din5(p_reload462),
    .din6(p_reload449),
    .din7(p_reload436),
    .din8(p_reload423),
    .din9(p_reload410),
    .din10(p_reload397),
    .din11(p_reload384),
    .din12(p_reload),
    .def(tmp_102_fu_2492_p27),
    .sel(ap_sig_allocacmp_i_7),
    .dout(tmp_102_fu_2492_p29)
);

NN_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln229_fu_1760_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_436 <= add_ln229_fu_1766_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_436 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        i_7_reg_3248 <= ap_sig_allocacmp_i_7;
        i_7_reg_3248_pp0_iter1_reg <= i_7_reg_3248;
        tmp_100_reg_3307 <= tmp_100_fu_2372_p29;
        tmp_101_reg_3312 <= tmp_101_fu_2432_p29;
        tmp_102_reg_3317 <= tmp_102_fu_2492_p29;
        tmp_90_reg_3257 <= tmp_90_fu_1772_p29;
        tmp_91_reg_3262 <= tmp_91_fu_1832_p29;
        tmp_92_reg_3267 <= tmp_92_fu_1892_p29;
        tmp_93_reg_3272 <= tmp_93_fu_1952_p29;
        tmp_94_reg_3277 <= tmp_94_fu_2012_p29;
        tmp_95_reg_3282 <= tmp_95_fu_2072_p29;
        tmp_96_reg_3287 <= tmp_96_fu_2132_p29;
        tmp_97_reg_3292 <= tmp_97_fu_2192_p29;
        tmp_98_reg_3297 <= tmp_98_fu_2252_p29;
        tmp_99_reg_3302 <= tmp_99_fu_2312_p29;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        i_7_reg_3248_pp0_iter2_reg <= i_7_reg_3248_pp0_iter1_reg;
        i_7_reg_3248_pp0_iter3_reg <= i_7_reg_3248_pp0_iter2_reg;
        i_7_reg_3248_pp0_iter4_reg <= i_7_reg_3248_pp0_iter3_reg;
        i_7_reg_3248_pp0_iter5_reg <= i_7_reg_3248_pp0_iter4_reg;
        out_16_reg_3329 <= grp_fu_22651_p_dout0;
        out_16_reg_3329_pp0_iter5_reg <= out_16_reg_3329;
        out_17_reg_3336 <= grp_fu_22655_p_dout0;
        out_17_reg_3336_pp0_iter5_reg <= out_17_reg_3336;
        out_18_reg_3343 <= grp_fu_22659_p_dout0;
        out_18_reg_3343_pp0_iter5_reg <= out_18_reg_3343;
        out_19_reg_3350 <= grp_fu_22663_p_dout0;
        out_19_reg_3350_pp0_iter5_reg <= out_19_reg_3350;
        out_20_reg_3357 <= grp_fu_22667_p_dout0;
        out_20_reg_3357_pp0_iter5_reg <= out_20_reg_3357;
        out_21_reg_3364 <= grp_fu_22671_p_dout0;
        out_21_reg_3364_pp0_iter5_reg <= out_21_reg_3364;
        out_22_reg_3371 <= grp_fu_22675_p_dout0;
        out_22_reg_3371_pp0_iter5_reg <= out_22_reg_3371;
        out_23_reg_3378 <= grp_fu_22679_p_dout0;
        out_23_reg_3378_pp0_iter5_reg <= out_23_reg_3378;
        out_24_reg_3385 <= grp_fu_22683_p_dout0;
        out_24_reg_3385_pp0_iter5_reg <= out_24_reg_3385;
        out_25_reg_3392 <= grp_fu_22687_p_dout0;
        out_25_reg_3392_pp0_iter5_reg <= out_25_reg_3392;
        out_26_reg_3399 <= grp_fu_22691_p_dout0;
        out_26_reg_3399_pp0_iter5_reg <= out_26_reg_3399;
        out_27_reg_3406 <= grp_fu_22695_p_dout0;
        out_27_reg_3406_pp0_iter5_reg <= out_27_reg_3406;
        out_reg_3322 <= grp_fu_22647_p_dout0;
        out_reg_3322_pp0_iter5_reg <= out_reg_3322;
    end
end

always @ (*) begin
    if (((icmp_ln229_fu_1760_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_7 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_7 = i_fu_436;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_0_ce0_local = 1'b1;
    end else begin
        out_img_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_0_we0_local = 1'b1;
    end else begin
        out_img_0_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_10_ce0_local = 1'b1;
    end else begin
        out_img_10_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_10_we0_local = 1'b1;
    end else begin
        out_img_10_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_11_ce0_local = 1'b1;
    end else begin
        out_img_11_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_11_we0_local = 1'b1;
    end else begin
        out_img_11_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_12_ce0_local = 1'b1;
    end else begin
        out_img_12_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_12_we0_local = 1'b1;
    end else begin
        out_img_12_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_1_ce0_local = 1'b1;
    end else begin
        out_img_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_1_we0_local = 1'b1;
    end else begin
        out_img_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_2_ce0_local = 1'b1;
    end else begin
        out_img_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_2_we0_local = 1'b1;
    end else begin
        out_img_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_3_ce0_local = 1'b1;
    end else begin
        out_img_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_3_we0_local = 1'b1;
    end else begin
        out_img_3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_4_ce0_local = 1'b1;
    end else begin
        out_img_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_4_we0_local = 1'b1;
    end else begin
        out_img_4_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_5_ce0_local = 1'b1;
    end else begin
        out_img_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_5_we0_local = 1'b1;
    end else begin
        out_img_5_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_6_ce0_local = 1'b1;
    end else begin
        out_img_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_6_we0_local = 1'b1;
    end else begin
        out_img_6_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_7_ce0_local = 1'b1;
    end else begin
        out_img_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_7_we0_local = 1'b1;
    end else begin
        out_img_7_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_8_ce0_local = 1'b1;
    end else begin
        out_img_8_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_8_we0_local = 1'b1;
    end else begin
        out_img_8_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_9_ce0_local = 1'b1;
    end else begin
        out_img_9_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_9_we0_local = 1'b1;
    end else begin
        out_img_9_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln229_fu_1766_p2 = (ap_sig_allocacmp_i_7 + 4'd1);

assign add_ln232_fu_2560_p2 = (zext_ln229_fu_2557_p1 + p_udiv83);

assign and_ln234_10_fu_3107_p2 = (or_ln234_10_fu_3101_p2 & grp_fu_26699_p_dout0);

assign and_ln234_11_fu_3156_p2 = (or_ln234_11_fu_3150_p2 & grp_fu_26703_p_dout0);

assign and_ln234_12_fu_3205_p2 = (or_ln234_12_fu_3199_p2 & grp_fu_26707_p_dout0);

assign and_ln234_1_fu_2666_p2 = (or_ln234_1_fu_2660_p2 & grp_fu_26663_p_dout0);

assign and_ln234_2_fu_2715_p2 = (or_ln234_2_fu_2709_p2 & grp_fu_26667_p_dout0);

assign and_ln234_3_fu_2764_p2 = (or_ln234_3_fu_2758_p2 & grp_fu_26671_p_dout0);

assign and_ln234_4_fu_2813_p2 = (or_ln234_4_fu_2807_p2 & grp_fu_26675_p_dout0);

assign and_ln234_5_fu_2862_p2 = (or_ln234_5_fu_2856_p2 & grp_fu_26679_p_dout0);

assign and_ln234_6_fu_2911_p2 = (or_ln234_6_fu_2905_p2 & grp_fu_26683_p_dout0);

assign and_ln234_7_fu_2960_p2 = (or_ln234_7_fu_2954_p2 & grp_fu_26687_p_dout0);

assign and_ln234_8_fu_3009_p2 = (or_ln234_8_fu_3003_p2 & grp_fu_26691_p_dout0);

assign and_ln234_9_fu_3058_p2 = (or_ln234_9_fu_3052_p2 & grp_fu_26695_p_dout0);

assign and_ln234_fu_2617_p2 = (or_ln234_fu_2611_p2 & grp_fu_26659_p_dout0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign bitcast_ln234_10_fu_3072_p1 = out_25_reg_3392_pp0_iter5_reg;

assign bitcast_ln234_11_fu_3121_p1 = out_26_reg_3399_pp0_iter5_reg;

assign bitcast_ln234_12_fu_3170_p1 = out_27_reg_3406_pp0_iter5_reg;

assign bitcast_ln234_1_fu_2631_p1 = out_16_reg_3329_pp0_iter5_reg;

assign bitcast_ln234_2_fu_2680_p1 = out_17_reg_3336_pp0_iter5_reg;

assign bitcast_ln234_3_fu_2729_p1 = out_18_reg_3343_pp0_iter5_reg;

assign bitcast_ln234_4_fu_2778_p1 = out_19_reg_3350_pp0_iter5_reg;

assign bitcast_ln234_5_fu_2827_p1 = out_20_reg_3357_pp0_iter5_reg;

assign bitcast_ln234_6_fu_2876_p1 = out_21_reg_3364_pp0_iter5_reg;

assign bitcast_ln234_7_fu_2925_p1 = out_22_reg_3371_pp0_iter5_reg;

assign bitcast_ln234_8_fu_2974_p1 = out_23_reg_3378_pp0_iter5_reg;

assign bitcast_ln234_9_fu_3023_p1 = out_24_reg_3385_pp0_iter5_reg;

assign bitcast_ln234_fu_2582_p1 = out_reg_3322_pp0_iter5_reg;

assign grp_fu_22647_p_ce = 1'b1;

assign grp_fu_22647_p_din0 = tmp_90_reg_3257;

assign grp_fu_22647_p_din1 = bias_conv4_load_1;

assign grp_fu_22647_p_opcode = 2'd0;

assign grp_fu_22651_p_ce = 1'b1;

assign grp_fu_22651_p_din0 = tmp_91_reg_3262;

assign grp_fu_22651_p_din1 = bias_conv4_load_1;

assign grp_fu_22651_p_opcode = 2'd0;

assign grp_fu_22655_p_ce = 1'b1;

assign grp_fu_22655_p_din0 = tmp_92_reg_3267;

assign grp_fu_22655_p_din1 = bias_conv4_load_1;

assign grp_fu_22655_p_opcode = 2'd0;

assign grp_fu_22659_p_ce = 1'b1;

assign grp_fu_22659_p_din0 = tmp_93_reg_3272;

assign grp_fu_22659_p_din1 = bias_conv4_load_1;

assign grp_fu_22659_p_opcode = 2'd0;

assign grp_fu_22663_p_ce = 1'b1;

assign grp_fu_22663_p_din0 = tmp_94_reg_3277;

assign grp_fu_22663_p_din1 = bias_conv4_load_1;

assign grp_fu_22663_p_opcode = 2'd0;

assign grp_fu_22667_p_ce = 1'b1;

assign grp_fu_22667_p_din0 = tmp_95_reg_3282;

assign grp_fu_22667_p_din1 = bias_conv4_load_1;

assign grp_fu_22667_p_opcode = 2'd0;

assign grp_fu_22671_p_ce = 1'b1;

assign grp_fu_22671_p_din0 = tmp_96_reg_3287;

assign grp_fu_22671_p_din1 = bias_conv4_load_1;

assign grp_fu_22671_p_opcode = 2'd0;

assign grp_fu_22675_p_ce = 1'b1;

assign grp_fu_22675_p_din0 = tmp_97_reg_3292;

assign grp_fu_22675_p_din1 = bias_conv4_load_1;

assign grp_fu_22675_p_opcode = 2'd0;

assign grp_fu_22679_p_ce = 1'b1;

assign grp_fu_22679_p_din0 = tmp_98_reg_3297;

assign grp_fu_22679_p_din1 = bias_conv4_load_1;

assign grp_fu_22679_p_opcode = 2'd0;

assign grp_fu_22683_p_ce = 1'b1;

assign grp_fu_22683_p_din0 = tmp_99_reg_3302;

assign grp_fu_22683_p_din1 = bias_conv4_load_1;

assign grp_fu_22683_p_opcode = 2'd0;

assign grp_fu_22687_p_ce = 1'b1;

assign grp_fu_22687_p_din0 = tmp_100_reg_3307;

assign grp_fu_22687_p_din1 = bias_conv4_load_1;

assign grp_fu_22687_p_opcode = 2'd0;

assign grp_fu_22691_p_ce = 1'b1;

assign grp_fu_22691_p_din0 = tmp_101_reg_3312;

assign grp_fu_22691_p_din1 = bias_conv4_load_1;

assign grp_fu_22691_p_opcode = 2'd0;

assign grp_fu_22695_p_ce = 1'b1;

assign grp_fu_22695_p_din0 = tmp_102_reg_3317;

assign grp_fu_22695_p_din1 = bias_conv4_load_1;

assign grp_fu_22695_p_opcode = 2'd0;

assign grp_fu_26659_p_ce = 1'b1;

assign grp_fu_26659_p_din0 = out_reg_3322;

assign grp_fu_26659_p_din1 = 32'd0;

assign grp_fu_26659_p_opcode = 5'd2;

assign grp_fu_26663_p_ce = 1'b1;

assign grp_fu_26663_p_din0 = out_16_reg_3329;

assign grp_fu_26663_p_din1 = 32'd0;

assign grp_fu_26663_p_opcode = 5'd2;

assign grp_fu_26667_p_ce = 1'b1;

assign grp_fu_26667_p_din0 = out_17_reg_3336;

assign grp_fu_26667_p_din1 = 32'd0;

assign grp_fu_26667_p_opcode = 5'd2;

assign grp_fu_26671_p_ce = 1'b1;

assign grp_fu_26671_p_din0 = out_18_reg_3343;

assign grp_fu_26671_p_din1 = 32'd0;

assign grp_fu_26671_p_opcode = 5'd2;

assign grp_fu_26675_p_ce = 1'b1;

assign grp_fu_26675_p_din0 = out_19_reg_3350;

assign grp_fu_26675_p_din1 = 32'd0;

assign grp_fu_26675_p_opcode = 5'd2;

assign grp_fu_26679_p_ce = 1'b1;

assign grp_fu_26679_p_din0 = out_20_reg_3357;

assign grp_fu_26679_p_din1 = 32'd0;

assign grp_fu_26679_p_opcode = 5'd2;

assign grp_fu_26683_p_ce = 1'b1;

assign grp_fu_26683_p_din0 = out_21_reg_3364;

assign grp_fu_26683_p_din1 = 32'd0;

assign grp_fu_26683_p_opcode = 5'd2;

assign grp_fu_26687_p_ce = 1'b1;

assign grp_fu_26687_p_din0 = out_22_reg_3371;

assign grp_fu_26687_p_din1 = 32'd0;

assign grp_fu_26687_p_opcode = 5'd2;

assign grp_fu_26691_p_ce = 1'b1;

assign grp_fu_26691_p_din0 = out_23_reg_3378;

assign grp_fu_26691_p_din1 = 32'd0;

assign grp_fu_26691_p_opcode = 5'd2;

assign grp_fu_26695_p_ce = 1'b1;

assign grp_fu_26695_p_din0 = out_24_reg_3385;

assign grp_fu_26695_p_din1 = 32'd0;

assign grp_fu_26695_p_opcode = 5'd2;

assign grp_fu_26699_p_ce = 1'b1;

assign grp_fu_26699_p_din0 = out_25_reg_3392;

assign grp_fu_26699_p_din1 = 32'd0;

assign grp_fu_26699_p_opcode = 5'd2;

assign grp_fu_26703_p_ce = 1'b1;

assign grp_fu_26703_p_din0 = out_26_reg_3399;

assign grp_fu_26703_p_din1 = 32'd0;

assign grp_fu_26703_p_opcode = 5'd2;

assign grp_fu_26707_p_ce = 1'b1;

assign grp_fu_26707_p_din0 = out_27_reg_3406;

assign grp_fu_26707_p_din1 = 32'd0;

assign grp_fu_26707_p_opcode = 5'd2;

assign icmp_ln229_fu_1760_p2 = ((ap_sig_allocacmp_i_7 == 4'd13) ? 1'b1 : 1'b0);

assign icmp_ln234_10_fu_2844_p2 = ((tmp_128_fu_2830_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln234_11_fu_2850_p2 = ((trunc_ln234_5_fu_2840_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln234_12_fu_2893_p2 = ((tmp_130_fu_2879_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln234_13_fu_2899_p2 = ((trunc_ln234_6_fu_2889_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln234_14_fu_2942_p2 = ((tmp_132_fu_2928_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln234_15_fu_2948_p2 = ((trunc_ln234_7_fu_2938_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln234_16_fu_2991_p2 = ((tmp_134_fu_2977_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln234_17_fu_2997_p2 = ((trunc_ln234_8_fu_2987_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln234_18_fu_3040_p2 = ((tmp_136_fu_3026_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln234_19_fu_3046_p2 = ((trunc_ln234_9_fu_3036_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln234_1_fu_2605_p2 = ((trunc_ln234_fu_2595_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln234_20_fu_3089_p2 = ((tmp_138_fu_3075_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln234_21_fu_3095_p2 = ((trunc_ln234_10_fu_3085_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln234_22_fu_3138_p2 = ((tmp_140_fu_3124_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln234_23_fu_3144_p2 = ((trunc_ln234_11_fu_3134_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln234_24_fu_3187_p2 = ((tmp_142_fu_3173_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln234_25_fu_3193_p2 = ((trunc_ln234_12_fu_3183_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln234_2_fu_2648_p2 = ((tmp_120_fu_2634_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln234_3_fu_2654_p2 = ((trunc_ln234_1_fu_2644_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln234_4_fu_2697_p2 = ((tmp_122_fu_2683_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln234_5_fu_2703_p2 = ((trunc_ln234_2_fu_2693_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln234_6_fu_2746_p2 = ((tmp_124_fu_2732_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln234_7_fu_2752_p2 = ((trunc_ln234_3_fu_2742_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln234_8_fu_2795_p2 = ((tmp_126_fu_2781_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln234_9_fu_2801_p2 = ((trunc_ln234_4_fu_2791_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln234_fu_2599_p2 = ((tmp_s_fu_2585_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln234_10_fu_3101_p2 = (icmp_ln234_21_fu_3095_p2 | icmp_ln234_20_fu_3089_p2);

assign or_ln234_11_fu_3150_p2 = (icmp_ln234_23_fu_3144_p2 | icmp_ln234_22_fu_3138_p2);

assign or_ln234_12_fu_3199_p2 = (icmp_ln234_25_fu_3193_p2 | icmp_ln234_24_fu_3187_p2);

assign or_ln234_1_fu_2660_p2 = (icmp_ln234_3_fu_2654_p2 | icmp_ln234_2_fu_2648_p2);

assign or_ln234_2_fu_2709_p2 = (icmp_ln234_5_fu_2703_p2 | icmp_ln234_4_fu_2697_p2);

assign or_ln234_3_fu_2758_p2 = (icmp_ln234_7_fu_2752_p2 | icmp_ln234_6_fu_2746_p2);

assign or_ln234_4_fu_2807_p2 = (icmp_ln234_9_fu_2801_p2 | icmp_ln234_8_fu_2795_p2);

assign or_ln234_5_fu_2856_p2 = (icmp_ln234_11_fu_2850_p2 | icmp_ln234_10_fu_2844_p2);

assign or_ln234_6_fu_2905_p2 = (icmp_ln234_13_fu_2899_p2 | icmp_ln234_12_fu_2893_p2);

assign or_ln234_7_fu_2954_p2 = (icmp_ln234_15_fu_2948_p2 | icmp_ln234_14_fu_2942_p2);

assign or_ln234_8_fu_3003_p2 = (icmp_ln234_17_fu_2997_p2 | icmp_ln234_16_fu_2991_p2);

assign or_ln234_9_fu_3052_p2 = (icmp_ln234_19_fu_3046_p2 | icmp_ln234_18_fu_3040_p2);

assign or_ln234_fu_2611_p2 = (icmp_ln234_fu_2599_p2 | icmp_ln234_1_fu_2605_p2);

assign out_img_0_address0 = zext_ln232_fu_2565_p1;

assign out_img_0_ce0 = out_img_0_ce0_local;

assign out_img_0_d0 = select_ln234_fu_2623_p3;

assign out_img_0_we0 = out_img_0_we0_local;

assign out_img_10_address0 = zext_ln232_fu_2565_p1;

assign out_img_10_ce0 = out_img_10_ce0_local;

assign out_img_10_d0 = select_ln234_10_fu_3113_p3;

assign out_img_10_we0 = out_img_10_we0_local;

assign out_img_11_address0 = zext_ln232_fu_2565_p1;

assign out_img_11_ce0 = out_img_11_ce0_local;

assign out_img_11_d0 = select_ln234_11_fu_3162_p3;

assign out_img_11_we0 = out_img_11_we0_local;

assign out_img_12_address0 = zext_ln232_fu_2565_p1;

assign out_img_12_ce0 = out_img_12_ce0_local;

assign out_img_12_d0 = select_ln234_12_fu_3211_p3;

assign out_img_12_we0 = out_img_12_we0_local;

assign out_img_1_address0 = zext_ln232_fu_2565_p1;

assign out_img_1_ce0 = out_img_1_ce0_local;

assign out_img_1_d0 = select_ln234_1_fu_2672_p3;

assign out_img_1_we0 = out_img_1_we0_local;

assign out_img_2_address0 = zext_ln232_fu_2565_p1;

assign out_img_2_ce0 = out_img_2_ce0_local;

assign out_img_2_d0 = select_ln234_2_fu_2721_p3;

assign out_img_2_we0 = out_img_2_we0_local;

assign out_img_3_address0 = zext_ln232_fu_2565_p1;

assign out_img_3_ce0 = out_img_3_ce0_local;

assign out_img_3_d0 = select_ln234_3_fu_2770_p3;

assign out_img_3_we0 = out_img_3_we0_local;

assign out_img_4_address0 = zext_ln232_fu_2565_p1;

assign out_img_4_ce0 = out_img_4_ce0_local;

assign out_img_4_d0 = select_ln234_4_fu_2819_p3;

assign out_img_4_we0 = out_img_4_we0_local;

assign out_img_5_address0 = zext_ln232_fu_2565_p1;

assign out_img_5_ce0 = out_img_5_ce0_local;

assign out_img_5_d0 = select_ln234_5_fu_2868_p3;

assign out_img_5_we0 = out_img_5_we0_local;

assign out_img_6_address0 = zext_ln232_fu_2565_p1;

assign out_img_6_ce0 = out_img_6_ce0_local;

assign out_img_6_d0 = select_ln234_6_fu_2917_p3;

assign out_img_6_we0 = out_img_6_we0_local;

assign out_img_7_address0 = zext_ln232_fu_2565_p1;

assign out_img_7_ce0 = out_img_7_ce0_local;

assign out_img_7_d0 = select_ln234_7_fu_2966_p3;

assign out_img_7_we0 = out_img_7_we0_local;

assign out_img_8_address0 = zext_ln232_fu_2565_p1;

assign out_img_8_ce0 = out_img_8_ce0_local;

assign out_img_8_d0 = select_ln234_8_fu_3015_p3;

assign out_img_8_we0 = out_img_8_we0_local;

assign out_img_9_address0 = zext_ln232_fu_2565_p1;

assign out_img_9_ce0 = out_img_9_ce0_local;

assign out_img_9_d0 = select_ln234_9_fu_3064_p3;

assign out_img_9_we0 = out_img_9_we0_local;

assign select_ln234_10_fu_3113_p3 = ((and_ln234_10_fu_3107_p2[0:0] == 1'b1) ? out_25_reg_3392_pp0_iter5_reg : 32'd0);

assign select_ln234_11_fu_3162_p3 = ((and_ln234_11_fu_3156_p2[0:0] == 1'b1) ? out_26_reg_3399_pp0_iter5_reg : 32'd0);

assign select_ln234_12_fu_3211_p3 = ((and_ln234_12_fu_3205_p2[0:0] == 1'b1) ? out_27_reg_3406_pp0_iter5_reg : 32'd0);

assign select_ln234_1_fu_2672_p3 = ((and_ln234_1_fu_2666_p2[0:0] == 1'b1) ? out_16_reg_3329_pp0_iter5_reg : 32'd0);

assign select_ln234_2_fu_2721_p3 = ((and_ln234_2_fu_2715_p2[0:0] == 1'b1) ? out_17_reg_3336_pp0_iter5_reg : 32'd0);

assign select_ln234_3_fu_2770_p3 = ((and_ln234_3_fu_2764_p2[0:0] == 1'b1) ? out_18_reg_3343_pp0_iter5_reg : 32'd0);

assign select_ln234_4_fu_2819_p3 = ((and_ln234_4_fu_2813_p2[0:0] == 1'b1) ? out_19_reg_3350_pp0_iter5_reg : 32'd0);

assign select_ln234_5_fu_2868_p3 = ((and_ln234_5_fu_2862_p2[0:0] == 1'b1) ? out_20_reg_3357_pp0_iter5_reg : 32'd0);

assign select_ln234_6_fu_2917_p3 = ((and_ln234_6_fu_2911_p2[0:0] == 1'b1) ? out_21_reg_3364_pp0_iter5_reg : 32'd0);

assign select_ln234_7_fu_2966_p3 = ((and_ln234_7_fu_2960_p2[0:0] == 1'b1) ? out_22_reg_3371_pp0_iter5_reg : 32'd0);

assign select_ln234_8_fu_3015_p3 = ((and_ln234_8_fu_3009_p2[0:0] == 1'b1) ? out_23_reg_3378_pp0_iter5_reg : 32'd0);

assign select_ln234_9_fu_3064_p3 = ((and_ln234_9_fu_3058_p2[0:0] == 1'b1) ? out_24_reg_3385_pp0_iter5_reg : 32'd0);

assign select_ln234_fu_2623_p3 = ((and_ln234_fu_2617_p2[0:0] == 1'b1) ? out_reg_3322_pp0_iter5_reg : 32'd0);

assign tmp_100_fu_2372_p27 = 'bx;

assign tmp_101_fu_2432_p27 = 'bx;

assign tmp_102_fu_2492_p27 = 'bx;

assign tmp_120_fu_2634_p4 = {{bitcast_ln234_1_fu_2631_p1[30:23]}};

assign tmp_122_fu_2683_p4 = {{bitcast_ln234_2_fu_2680_p1[30:23]}};

assign tmp_124_fu_2732_p4 = {{bitcast_ln234_3_fu_2729_p1[30:23]}};

assign tmp_126_fu_2781_p4 = {{bitcast_ln234_4_fu_2778_p1[30:23]}};

assign tmp_128_fu_2830_p4 = {{bitcast_ln234_5_fu_2827_p1[30:23]}};

assign tmp_130_fu_2879_p4 = {{bitcast_ln234_6_fu_2876_p1[30:23]}};

assign tmp_132_fu_2928_p4 = {{bitcast_ln234_7_fu_2925_p1[30:23]}};

assign tmp_134_fu_2977_p4 = {{bitcast_ln234_8_fu_2974_p1[30:23]}};

assign tmp_136_fu_3026_p4 = {{bitcast_ln234_9_fu_3023_p1[30:23]}};

assign tmp_138_fu_3075_p4 = {{bitcast_ln234_10_fu_3072_p1[30:23]}};

assign tmp_140_fu_3124_p4 = {{bitcast_ln234_11_fu_3121_p1[30:23]}};

assign tmp_142_fu_3173_p4 = {{bitcast_ln234_12_fu_3170_p1[30:23]}};

assign tmp_90_fu_1772_p27 = 'bx;

assign tmp_91_fu_1832_p27 = 'bx;

assign tmp_92_fu_1892_p27 = 'bx;

assign tmp_93_fu_1952_p27 = 'bx;

assign tmp_94_fu_2012_p27 = 'bx;

assign tmp_95_fu_2072_p27 = 'bx;

assign tmp_96_fu_2132_p27 = 'bx;

assign tmp_97_fu_2192_p27 = 'bx;

assign tmp_98_fu_2252_p27 = 'bx;

assign tmp_99_fu_2312_p27 = 'bx;

assign tmp_s_fu_2585_p4 = {{bitcast_ln234_fu_2582_p1[30:23]}};

assign trunc_ln234_10_fu_3085_p1 = bitcast_ln234_10_fu_3072_p1[22:0];

assign trunc_ln234_11_fu_3134_p1 = bitcast_ln234_11_fu_3121_p1[22:0];

assign trunc_ln234_12_fu_3183_p1 = bitcast_ln234_12_fu_3170_p1[22:0];

assign trunc_ln234_1_fu_2644_p1 = bitcast_ln234_1_fu_2631_p1[22:0];

assign trunc_ln234_2_fu_2693_p1 = bitcast_ln234_2_fu_2680_p1[22:0];

assign trunc_ln234_3_fu_2742_p1 = bitcast_ln234_3_fu_2729_p1[22:0];

assign trunc_ln234_4_fu_2791_p1 = bitcast_ln234_4_fu_2778_p1[22:0];

assign trunc_ln234_5_fu_2840_p1 = bitcast_ln234_5_fu_2827_p1[22:0];

assign trunc_ln234_6_fu_2889_p1 = bitcast_ln234_6_fu_2876_p1[22:0];

assign trunc_ln234_7_fu_2938_p1 = bitcast_ln234_7_fu_2925_p1[22:0];

assign trunc_ln234_8_fu_2987_p1 = bitcast_ln234_8_fu_2974_p1[22:0];

assign trunc_ln234_9_fu_3036_p1 = bitcast_ln234_9_fu_3023_p1[22:0];

assign trunc_ln234_fu_2595_p1 = bitcast_ln234_fu_2582_p1[22:0];

assign zext_ln229_fu_2557_p1 = i_7_reg_3248_pp0_iter5_reg;

assign zext_ln232_fu_2565_p1 = add_ln232_fu_2560_p2;

endmodule //NN_conv4_Pipeline_M2
