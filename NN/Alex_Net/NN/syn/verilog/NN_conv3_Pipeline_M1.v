// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module NN_conv3_Pipeline_M1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        out_img_12_address0,
        out_img_12_ce0,
        out_img_12_we0,
        out_img_12_d0,
        out_img_11_address0,
        out_img_11_ce0,
        out_img_11_we0,
        out_img_11_d0,
        out_img_10_address0,
        out_img_10_ce0,
        out_img_10_we0,
        out_img_10_d0,
        out_img_9_address0,
        out_img_9_ce0,
        out_img_9_we0,
        out_img_9_d0,
        out_img_8_address0,
        out_img_8_ce0,
        out_img_8_we0,
        out_img_8_d0,
        out_img_7_address0,
        out_img_7_ce0,
        out_img_7_we0,
        out_img_7_d0,
        out_img_6_address0,
        out_img_6_ce0,
        out_img_6_we0,
        out_img_6_d0,
        out_img_5_address0,
        out_img_5_ce0,
        out_img_5_we0,
        out_img_5_d0,
        out_img_4_address0,
        out_img_4_ce0,
        out_img_4_we0,
        out_img_4_d0,
        out_img_3_address0,
        out_img_3_ce0,
        out_img_3_we0,
        out_img_3_d0,
        out_img_2_address0,
        out_img_2_ce0,
        out_img_2_we0,
        out_img_2_d0,
        out_img_1_address0,
        out_img_1_ce0,
        out_img_1_we0,
        out_img_1_d0,
        out_img_0_address0,
        out_img_0_ce0,
        out_img_0_we0,
        out_img_0_d0,
        phi_mul9,
        add1804614_reload,
        add180_14627_reload,
        add180_24640_reload,
        add180_34653_reload,
        add180_44666_reload,
        add180_54679_reload,
        add180_64692_reload,
        add180_74705_reload,
        add180_84718_reload,
        add180_94731_reload,
        add180_104744_reload,
        add180_114757_reload,
        add180_124770_reload,
        bias_conv3_load,
        add180_138794615_reload,
        add180_1_14628_reload,
        add180_2_14641_reload,
        add180_3_14654_reload,
        add180_4_14667_reload,
        add180_5_14680_reload,
        add180_6_14693_reload,
        add180_7_14706_reload,
        add180_8_14719_reload,
        add180_9_14732_reload,
        add180_10_14745_reload,
        add180_11_14758_reload,
        add180_12_14771_reload,
        add180_238964616_reload,
        add180_1_24629_reload,
        add180_2_24642_reload,
        add180_3_24655_reload,
        add180_4_24668_reload,
        add180_5_24681_reload,
        add180_6_24694_reload,
        add180_7_24707_reload,
        add180_8_24720_reload,
        add180_9_24733_reload,
        add180_10_24746_reload,
        add180_11_24759_reload,
        add180_12_24772_reload,
        add180_339134617_reload,
        add180_1_34630_reload,
        add180_2_34643_reload,
        add180_3_34656_reload,
        add180_4_34669_reload,
        add180_5_34682_reload,
        add180_6_34695_reload,
        add180_7_34708_reload,
        add180_8_34721_reload,
        add180_9_34734_reload,
        add180_10_34747_reload,
        add180_11_34760_reload,
        add180_12_34773_reload,
        add180_439304618_reload,
        add180_1_44631_reload,
        add180_2_44644_reload,
        add180_3_44657_reload,
        add180_4_44670_reload,
        add180_5_44683_reload,
        add180_6_44696_reload,
        add180_7_44709_reload,
        add180_8_44722_reload,
        add180_9_44735_reload,
        add180_10_44748_reload,
        add180_11_44761_reload,
        add180_12_44774_reload,
        add180_539474619_reload,
        add180_1_54632_reload,
        add180_2_54645_reload,
        add180_3_54658_reload,
        add180_4_54671_reload,
        add180_5_54684_reload,
        add180_6_54697_reload,
        add180_7_54710_reload,
        add180_8_54723_reload,
        add180_9_54736_reload,
        add180_10_54749_reload,
        add180_11_54762_reload,
        add180_12_54775_reload,
        add180_639644620_reload,
        add180_1_64633_reload,
        add180_2_64646_reload,
        add180_3_64659_reload,
        add180_4_64672_reload,
        add180_5_64685_reload,
        add180_6_64698_reload,
        add180_7_64711_reload,
        add180_8_64724_reload,
        add180_9_64737_reload,
        add180_10_64750_reload,
        add180_11_64763_reload,
        add180_12_64776_reload,
        add180_739814621_reload,
        add180_1_74634_reload,
        add180_2_74647_reload,
        add180_3_74660_reload,
        add180_4_74673_reload,
        add180_5_74686_reload,
        add180_6_74699_reload,
        add180_7_74712_reload,
        add180_8_74725_reload,
        add180_9_74738_reload,
        add180_10_74751_reload,
        add180_11_74764_reload,
        add180_12_74777_reload,
        add180_839984622_reload,
        add180_1_84635_reload,
        add180_2_84648_reload,
        add180_3_84661_reload,
        add180_4_84674_reload,
        add180_5_84687_reload,
        add180_6_84700_reload,
        add180_7_84713_reload,
        add180_8_84726_reload,
        add180_9_84739_reload,
        add180_10_84752_reload,
        add180_11_84765_reload,
        add180_12_84778_reload,
        add180_940154623_reload,
        add180_1_94636_reload,
        add180_2_94649_reload,
        add180_3_94662_reload,
        add180_4_94675_reload,
        add180_5_94688_reload,
        add180_6_94701_reload,
        add180_7_94714_reload,
        add180_8_94727_reload,
        add180_9_94740_reload,
        add180_10_94753_reload,
        add180_11_94766_reload,
        add180_12_94779_reload,
        add180_1040324624_reload,
        add180_1_104637_reload,
        add180_2_104650_reload,
        add180_3_104663_reload,
        add180_4_104676_reload,
        add180_5_104689_reload,
        add180_6_104702_reload,
        add180_7_104715_reload,
        add180_8_104728_reload,
        add180_9_104741_reload,
        add180_10_104754_reload,
        add180_11_104767_reload,
        add180_12_104780_reload,
        add180_1140494625_reload,
        add180_1_114638_reload,
        add180_2_114651_reload,
        add180_3_114664_reload,
        add180_4_114677_reload,
        add180_5_114690_reload,
        add180_6_114703_reload,
        add180_7_114716_reload,
        add180_8_114729_reload,
        add180_9_114742_reload,
        add180_10_114755_reload,
        add180_11_114768_reload,
        add180_12_114781_reload,
        add180_1240664626_reload,
        add180_1_124639_reload,
        add180_2_124652_reload,
        add180_3_124665_reload,
        add180_4_124678_reload,
        add180_5_124691_reload,
        add180_6_124704_reload,
        add180_7_124717_reload,
        add180_8_124730_reload,
        add180_9_124743_reload,
        add180_10_124756_reload,
        add180_11_124769_reload,
        add180_12_124791_reload,
        grp_fu_11086_p_din0,
        grp_fu_11086_p_din1,
        grp_fu_11086_p_opcode,
        grp_fu_11086_p_dout0,
        grp_fu_11086_p_ce,
        grp_fu_11090_p_din0,
        grp_fu_11090_p_din1,
        grp_fu_11090_p_opcode,
        grp_fu_11090_p_dout0,
        grp_fu_11090_p_ce,
        grp_fu_11094_p_din0,
        grp_fu_11094_p_din1,
        grp_fu_11094_p_opcode,
        grp_fu_11094_p_dout0,
        grp_fu_11094_p_ce,
        grp_fu_11098_p_din0,
        grp_fu_11098_p_din1,
        grp_fu_11098_p_opcode,
        grp_fu_11098_p_dout0,
        grp_fu_11098_p_ce,
        grp_fu_11102_p_din0,
        grp_fu_11102_p_din1,
        grp_fu_11102_p_opcode,
        grp_fu_11102_p_dout0,
        grp_fu_11102_p_ce,
        grp_fu_11106_p_din0,
        grp_fu_11106_p_din1,
        grp_fu_11106_p_opcode,
        grp_fu_11106_p_dout0,
        grp_fu_11106_p_ce,
        grp_fu_11110_p_din0,
        grp_fu_11110_p_din1,
        grp_fu_11110_p_opcode,
        grp_fu_11110_p_dout0,
        grp_fu_11110_p_ce,
        grp_fu_11114_p_din0,
        grp_fu_11114_p_din1,
        grp_fu_11114_p_opcode,
        grp_fu_11114_p_dout0,
        grp_fu_11114_p_ce,
        grp_fu_11118_p_din0,
        grp_fu_11118_p_din1,
        grp_fu_11118_p_opcode,
        grp_fu_11118_p_dout0,
        grp_fu_11118_p_ce,
        grp_fu_11122_p_din0,
        grp_fu_11122_p_din1,
        grp_fu_11122_p_opcode,
        grp_fu_11122_p_dout0,
        grp_fu_11122_p_ce,
        grp_fu_11126_p_din0,
        grp_fu_11126_p_din1,
        grp_fu_11126_p_opcode,
        grp_fu_11126_p_dout0,
        grp_fu_11126_p_ce,
        grp_fu_11130_p_din0,
        grp_fu_11130_p_din1,
        grp_fu_11130_p_opcode,
        grp_fu_11130_p_dout0,
        grp_fu_11130_p_ce,
        grp_fu_11134_p_din0,
        grp_fu_11134_p_din1,
        grp_fu_11134_p_opcode,
        grp_fu_11134_p_dout0,
        grp_fu_11134_p_ce,
        grp_fu_15098_p_din0,
        grp_fu_15098_p_din1,
        grp_fu_15098_p_opcode,
        grp_fu_15098_p_dout0,
        grp_fu_15098_p_ce,
        grp_fu_15102_p_din0,
        grp_fu_15102_p_din1,
        grp_fu_15102_p_opcode,
        grp_fu_15102_p_dout0,
        grp_fu_15102_p_ce,
        grp_fu_15106_p_din0,
        grp_fu_15106_p_din1,
        grp_fu_15106_p_opcode,
        grp_fu_15106_p_dout0,
        grp_fu_15106_p_ce,
        grp_fu_15110_p_din0,
        grp_fu_15110_p_din1,
        grp_fu_15110_p_opcode,
        grp_fu_15110_p_dout0,
        grp_fu_15110_p_ce,
        grp_fu_15114_p_din0,
        grp_fu_15114_p_din1,
        grp_fu_15114_p_opcode,
        grp_fu_15114_p_dout0,
        grp_fu_15114_p_ce,
        grp_fu_15118_p_din0,
        grp_fu_15118_p_din1,
        grp_fu_15118_p_opcode,
        grp_fu_15118_p_dout0,
        grp_fu_15118_p_ce,
        grp_fu_15122_p_din0,
        grp_fu_15122_p_din1,
        grp_fu_15122_p_opcode,
        grp_fu_15122_p_dout0,
        grp_fu_15122_p_ce,
        grp_fu_15126_p_din0,
        grp_fu_15126_p_din1,
        grp_fu_15126_p_opcode,
        grp_fu_15126_p_dout0,
        grp_fu_15126_p_ce,
        grp_fu_15130_p_din0,
        grp_fu_15130_p_din1,
        grp_fu_15130_p_opcode,
        grp_fu_15130_p_dout0,
        grp_fu_15130_p_ce,
        grp_fu_15134_p_din0,
        grp_fu_15134_p_din1,
        grp_fu_15134_p_opcode,
        grp_fu_15134_p_dout0,
        grp_fu_15134_p_ce,
        grp_fu_15138_p_din0,
        grp_fu_15138_p_din1,
        grp_fu_15138_p_opcode,
        grp_fu_15138_p_dout0,
        grp_fu_15138_p_ce,
        grp_fu_15142_p_din0,
        grp_fu_15142_p_din1,
        grp_fu_15142_p_opcode,
        grp_fu_15142_p_dout0,
        grp_fu_15142_p_ce,
        grp_fu_15146_p_din0,
        grp_fu_15146_p_din1,
        grp_fu_15146_p_opcode,
        grp_fu_15146_p_dout0,
        grp_fu_15146_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] out_img_12_address0;
output   out_img_12_ce0;
output   out_img_12_we0;
output  [31:0] out_img_12_d0;
output  [12:0] out_img_11_address0;
output   out_img_11_ce0;
output   out_img_11_we0;
output  [31:0] out_img_11_d0;
output  [12:0] out_img_10_address0;
output   out_img_10_ce0;
output   out_img_10_we0;
output  [31:0] out_img_10_d0;
output  [12:0] out_img_9_address0;
output   out_img_9_ce0;
output   out_img_9_we0;
output  [31:0] out_img_9_d0;
output  [12:0] out_img_8_address0;
output   out_img_8_ce0;
output   out_img_8_we0;
output  [31:0] out_img_8_d0;
output  [12:0] out_img_7_address0;
output   out_img_7_ce0;
output   out_img_7_we0;
output  [31:0] out_img_7_d0;
output  [12:0] out_img_6_address0;
output   out_img_6_ce0;
output   out_img_6_we0;
output  [31:0] out_img_6_d0;
output  [12:0] out_img_5_address0;
output   out_img_5_ce0;
output   out_img_5_we0;
output  [31:0] out_img_5_d0;
output  [12:0] out_img_4_address0;
output   out_img_4_ce0;
output   out_img_4_we0;
output  [31:0] out_img_4_d0;
output  [12:0] out_img_3_address0;
output   out_img_3_ce0;
output   out_img_3_we0;
output  [31:0] out_img_3_d0;
output  [12:0] out_img_2_address0;
output   out_img_2_ce0;
output   out_img_2_we0;
output  [31:0] out_img_2_d0;
output  [12:0] out_img_1_address0;
output   out_img_1_ce0;
output   out_img_1_we0;
output  [31:0] out_img_1_d0;
output  [12:0] out_img_0_address0;
output   out_img_0_ce0;
output   out_img_0_we0;
output  [31:0] out_img_0_d0;
input  [12:0] phi_mul9;
input  [31:0] add1804614_reload;
input  [31:0] add180_14627_reload;
input  [31:0] add180_24640_reload;
input  [31:0] add180_34653_reload;
input  [31:0] add180_44666_reload;
input  [31:0] add180_54679_reload;
input  [31:0] add180_64692_reload;
input  [31:0] add180_74705_reload;
input  [31:0] add180_84718_reload;
input  [31:0] add180_94731_reload;
input  [31:0] add180_104744_reload;
input  [31:0] add180_114757_reload;
input  [31:0] add180_124770_reload;
input  [31:0] bias_conv3_load;
input  [31:0] add180_138794615_reload;
input  [31:0] add180_1_14628_reload;
input  [31:0] add180_2_14641_reload;
input  [31:0] add180_3_14654_reload;
input  [31:0] add180_4_14667_reload;
input  [31:0] add180_5_14680_reload;
input  [31:0] add180_6_14693_reload;
input  [31:0] add180_7_14706_reload;
input  [31:0] add180_8_14719_reload;
input  [31:0] add180_9_14732_reload;
input  [31:0] add180_10_14745_reload;
input  [31:0] add180_11_14758_reload;
input  [31:0] add180_12_14771_reload;
input  [31:0] add180_238964616_reload;
input  [31:0] add180_1_24629_reload;
input  [31:0] add180_2_24642_reload;
input  [31:0] add180_3_24655_reload;
input  [31:0] add180_4_24668_reload;
input  [31:0] add180_5_24681_reload;
input  [31:0] add180_6_24694_reload;
input  [31:0] add180_7_24707_reload;
input  [31:0] add180_8_24720_reload;
input  [31:0] add180_9_24733_reload;
input  [31:0] add180_10_24746_reload;
input  [31:0] add180_11_24759_reload;
input  [31:0] add180_12_24772_reload;
input  [31:0] add180_339134617_reload;
input  [31:0] add180_1_34630_reload;
input  [31:0] add180_2_34643_reload;
input  [31:0] add180_3_34656_reload;
input  [31:0] add180_4_34669_reload;
input  [31:0] add180_5_34682_reload;
input  [31:0] add180_6_34695_reload;
input  [31:0] add180_7_34708_reload;
input  [31:0] add180_8_34721_reload;
input  [31:0] add180_9_34734_reload;
input  [31:0] add180_10_34747_reload;
input  [31:0] add180_11_34760_reload;
input  [31:0] add180_12_34773_reload;
input  [31:0] add180_439304618_reload;
input  [31:0] add180_1_44631_reload;
input  [31:0] add180_2_44644_reload;
input  [31:0] add180_3_44657_reload;
input  [31:0] add180_4_44670_reload;
input  [31:0] add180_5_44683_reload;
input  [31:0] add180_6_44696_reload;
input  [31:0] add180_7_44709_reload;
input  [31:0] add180_8_44722_reload;
input  [31:0] add180_9_44735_reload;
input  [31:0] add180_10_44748_reload;
input  [31:0] add180_11_44761_reload;
input  [31:0] add180_12_44774_reload;
input  [31:0] add180_539474619_reload;
input  [31:0] add180_1_54632_reload;
input  [31:0] add180_2_54645_reload;
input  [31:0] add180_3_54658_reload;
input  [31:0] add180_4_54671_reload;
input  [31:0] add180_5_54684_reload;
input  [31:0] add180_6_54697_reload;
input  [31:0] add180_7_54710_reload;
input  [31:0] add180_8_54723_reload;
input  [31:0] add180_9_54736_reload;
input  [31:0] add180_10_54749_reload;
input  [31:0] add180_11_54762_reload;
input  [31:0] add180_12_54775_reload;
input  [31:0] add180_639644620_reload;
input  [31:0] add180_1_64633_reload;
input  [31:0] add180_2_64646_reload;
input  [31:0] add180_3_64659_reload;
input  [31:0] add180_4_64672_reload;
input  [31:0] add180_5_64685_reload;
input  [31:0] add180_6_64698_reload;
input  [31:0] add180_7_64711_reload;
input  [31:0] add180_8_64724_reload;
input  [31:0] add180_9_64737_reload;
input  [31:0] add180_10_64750_reload;
input  [31:0] add180_11_64763_reload;
input  [31:0] add180_12_64776_reload;
input  [31:0] add180_739814621_reload;
input  [31:0] add180_1_74634_reload;
input  [31:0] add180_2_74647_reload;
input  [31:0] add180_3_74660_reload;
input  [31:0] add180_4_74673_reload;
input  [31:0] add180_5_74686_reload;
input  [31:0] add180_6_74699_reload;
input  [31:0] add180_7_74712_reload;
input  [31:0] add180_8_74725_reload;
input  [31:0] add180_9_74738_reload;
input  [31:0] add180_10_74751_reload;
input  [31:0] add180_11_74764_reload;
input  [31:0] add180_12_74777_reload;
input  [31:0] add180_839984622_reload;
input  [31:0] add180_1_84635_reload;
input  [31:0] add180_2_84648_reload;
input  [31:0] add180_3_84661_reload;
input  [31:0] add180_4_84674_reload;
input  [31:0] add180_5_84687_reload;
input  [31:0] add180_6_84700_reload;
input  [31:0] add180_7_84713_reload;
input  [31:0] add180_8_84726_reload;
input  [31:0] add180_9_84739_reload;
input  [31:0] add180_10_84752_reload;
input  [31:0] add180_11_84765_reload;
input  [31:0] add180_12_84778_reload;
input  [31:0] add180_940154623_reload;
input  [31:0] add180_1_94636_reload;
input  [31:0] add180_2_94649_reload;
input  [31:0] add180_3_94662_reload;
input  [31:0] add180_4_94675_reload;
input  [31:0] add180_5_94688_reload;
input  [31:0] add180_6_94701_reload;
input  [31:0] add180_7_94714_reload;
input  [31:0] add180_8_94727_reload;
input  [31:0] add180_9_94740_reload;
input  [31:0] add180_10_94753_reload;
input  [31:0] add180_11_94766_reload;
input  [31:0] add180_12_94779_reload;
input  [31:0] add180_1040324624_reload;
input  [31:0] add180_1_104637_reload;
input  [31:0] add180_2_104650_reload;
input  [31:0] add180_3_104663_reload;
input  [31:0] add180_4_104676_reload;
input  [31:0] add180_5_104689_reload;
input  [31:0] add180_6_104702_reload;
input  [31:0] add180_7_104715_reload;
input  [31:0] add180_8_104728_reload;
input  [31:0] add180_9_104741_reload;
input  [31:0] add180_10_104754_reload;
input  [31:0] add180_11_104767_reload;
input  [31:0] add180_12_104780_reload;
input  [31:0] add180_1140494625_reload;
input  [31:0] add180_1_114638_reload;
input  [31:0] add180_2_114651_reload;
input  [31:0] add180_3_114664_reload;
input  [31:0] add180_4_114677_reload;
input  [31:0] add180_5_114690_reload;
input  [31:0] add180_6_114703_reload;
input  [31:0] add180_7_114716_reload;
input  [31:0] add180_8_114729_reload;
input  [31:0] add180_9_114742_reload;
input  [31:0] add180_10_114755_reload;
input  [31:0] add180_11_114768_reload;
input  [31:0] add180_12_114781_reload;
input  [31:0] add180_1240664626_reload;
input  [31:0] add180_1_124639_reload;
input  [31:0] add180_2_124652_reload;
input  [31:0] add180_3_124665_reload;
input  [31:0] add180_4_124678_reload;
input  [31:0] add180_5_124691_reload;
input  [31:0] add180_6_124704_reload;
input  [31:0] add180_7_124717_reload;
input  [31:0] add180_8_124730_reload;
input  [31:0] add180_9_124743_reload;
input  [31:0] add180_10_124756_reload;
input  [31:0] add180_11_124769_reload;
input  [31:0] add180_12_124791_reload;
output  [31:0] grp_fu_11086_p_din0;
output  [31:0] grp_fu_11086_p_din1;
output  [1:0] grp_fu_11086_p_opcode;
input  [31:0] grp_fu_11086_p_dout0;
output   grp_fu_11086_p_ce;
output  [31:0] grp_fu_11090_p_din0;
output  [31:0] grp_fu_11090_p_din1;
output  [1:0] grp_fu_11090_p_opcode;
input  [31:0] grp_fu_11090_p_dout0;
output   grp_fu_11090_p_ce;
output  [31:0] grp_fu_11094_p_din0;
output  [31:0] grp_fu_11094_p_din1;
output  [1:0] grp_fu_11094_p_opcode;
input  [31:0] grp_fu_11094_p_dout0;
output   grp_fu_11094_p_ce;
output  [31:0] grp_fu_11098_p_din0;
output  [31:0] grp_fu_11098_p_din1;
output  [1:0] grp_fu_11098_p_opcode;
input  [31:0] grp_fu_11098_p_dout0;
output   grp_fu_11098_p_ce;
output  [31:0] grp_fu_11102_p_din0;
output  [31:0] grp_fu_11102_p_din1;
output  [1:0] grp_fu_11102_p_opcode;
input  [31:0] grp_fu_11102_p_dout0;
output   grp_fu_11102_p_ce;
output  [31:0] grp_fu_11106_p_din0;
output  [31:0] grp_fu_11106_p_din1;
output  [1:0] grp_fu_11106_p_opcode;
input  [31:0] grp_fu_11106_p_dout0;
output   grp_fu_11106_p_ce;
output  [31:0] grp_fu_11110_p_din0;
output  [31:0] grp_fu_11110_p_din1;
output  [1:0] grp_fu_11110_p_opcode;
input  [31:0] grp_fu_11110_p_dout0;
output   grp_fu_11110_p_ce;
output  [31:0] grp_fu_11114_p_din0;
output  [31:0] grp_fu_11114_p_din1;
output  [1:0] grp_fu_11114_p_opcode;
input  [31:0] grp_fu_11114_p_dout0;
output   grp_fu_11114_p_ce;
output  [31:0] grp_fu_11118_p_din0;
output  [31:0] grp_fu_11118_p_din1;
output  [1:0] grp_fu_11118_p_opcode;
input  [31:0] grp_fu_11118_p_dout0;
output   grp_fu_11118_p_ce;
output  [31:0] grp_fu_11122_p_din0;
output  [31:0] grp_fu_11122_p_din1;
output  [1:0] grp_fu_11122_p_opcode;
input  [31:0] grp_fu_11122_p_dout0;
output   grp_fu_11122_p_ce;
output  [31:0] grp_fu_11126_p_din0;
output  [31:0] grp_fu_11126_p_din1;
output  [1:0] grp_fu_11126_p_opcode;
input  [31:0] grp_fu_11126_p_dout0;
output   grp_fu_11126_p_ce;
output  [31:0] grp_fu_11130_p_din0;
output  [31:0] grp_fu_11130_p_din1;
output  [1:0] grp_fu_11130_p_opcode;
input  [31:0] grp_fu_11130_p_dout0;
output   grp_fu_11130_p_ce;
output  [31:0] grp_fu_11134_p_din0;
output  [31:0] grp_fu_11134_p_din1;
output  [1:0] grp_fu_11134_p_opcode;
input  [31:0] grp_fu_11134_p_dout0;
output   grp_fu_11134_p_ce;
output  [31:0] grp_fu_15098_p_din0;
output  [31:0] grp_fu_15098_p_din1;
output  [4:0] grp_fu_15098_p_opcode;
input  [0:0] grp_fu_15098_p_dout0;
output   grp_fu_15098_p_ce;
output  [31:0] grp_fu_15102_p_din0;
output  [31:0] grp_fu_15102_p_din1;
output  [4:0] grp_fu_15102_p_opcode;
input  [0:0] grp_fu_15102_p_dout0;
output   grp_fu_15102_p_ce;
output  [31:0] grp_fu_15106_p_din0;
output  [31:0] grp_fu_15106_p_din1;
output  [4:0] grp_fu_15106_p_opcode;
input  [0:0] grp_fu_15106_p_dout0;
output   grp_fu_15106_p_ce;
output  [31:0] grp_fu_15110_p_din0;
output  [31:0] grp_fu_15110_p_din1;
output  [4:0] grp_fu_15110_p_opcode;
input  [0:0] grp_fu_15110_p_dout0;
output   grp_fu_15110_p_ce;
output  [31:0] grp_fu_15114_p_din0;
output  [31:0] grp_fu_15114_p_din1;
output  [4:0] grp_fu_15114_p_opcode;
input  [0:0] grp_fu_15114_p_dout0;
output   grp_fu_15114_p_ce;
output  [31:0] grp_fu_15118_p_din0;
output  [31:0] grp_fu_15118_p_din1;
output  [4:0] grp_fu_15118_p_opcode;
input  [0:0] grp_fu_15118_p_dout0;
output   grp_fu_15118_p_ce;
output  [31:0] grp_fu_15122_p_din0;
output  [31:0] grp_fu_15122_p_din1;
output  [4:0] grp_fu_15122_p_opcode;
input  [0:0] grp_fu_15122_p_dout0;
output   grp_fu_15122_p_ce;
output  [31:0] grp_fu_15126_p_din0;
output  [31:0] grp_fu_15126_p_din1;
output  [4:0] grp_fu_15126_p_opcode;
input  [0:0] grp_fu_15126_p_dout0;
output   grp_fu_15126_p_ce;
output  [31:0] grp_fu_15130_p_din0;
output  [31:0] grp_fu_15130_p_din1;
output  [4:0] grp_fu_15130_p_opcode;
input  [0:0] grp_fu_15130_p_dout0;
output   grp_fu_15130_p_ce;
output  [31:0] grp_fu_15134_p_din0;
output  [31:0] grp_fu_15134_p_din1;
output  [4:0] grp_fu_15134_p_opcode;
input  [0:0] grp_fu_15134_p_dout0;
output   grp_fu_15134_p_ce;
output  [31:0] grp_fu_15138_p_din0;
output  [31:0] grp_fu_15138_p_din1;
output  [4:0] grp_fu_15138_p_opcode;
input  [0:0] grp_fu_15138_p_dout0;
output   grp_fu_15138_p_ce;
output  [31:0] grp_fu_15142_p_din0;
output  [31:0] grp_fu_15142_p_din1;
output  [4:0] grp_fu_15142_p_opcode;
input  [0:0] grp_fu_15142_p_dout0;
output   grp_fu_15142_p_ce;
output  [31:0] grp_fu_15146_p_din0;
output  [31:0] grp_fu_15146_p_din1;
output  [4:0] grp_fu_15146_p_opcode;
input  [0:0] grp_fu_15146_p_dout0;
output   grp_fu_15146_p_ce;

reg ap_idle;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln144_fu_1760_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [3:0] i_9_reg_3248;
reg   [3:0] i_9_reg_3248_pp0_iter1_reg;
reg   [3:0] i_9_reg_3248_pp0_iter2_reg;
reg   [3:0] i_9_reg_3248_pp0_iter3_reg;
reg   [3:0] i_9_reg_3248_pp0_iter4_reg;
reg   [3:0] i_9_reg_3248_pp0_iter5_reg;
wire   [31:0] tmp_fu_1772_p29;
reg   [31:0] tmp_reg_3257;
wire   [31:0] tmp_s_fu_1832_p29;
reg   [31:0] tmp_s_reg_3262;
wire   [31:0] tmp_103_fu_1892_p29;
reg   [31:0] tmp_103_reg_3267;
wire   [31:0] tmp_104_fu_1952_p29;
reg   [31:0] tmp_104_reg_3272;
wire   [31:0] tmp_105_fu_2012_p29;
reg   [31:0] tmp_105_reg_3277;
wire   [31:0] tmp_106_fu_2072_p29;
reg   [31:0] tmp_106_reg_3282;
wire   [31:0] tmp_107_fu_2132_p29;
reg   [31:0] tmp_107_reg_3287;
wire   [31:0] tmp_108_fu_2192_p29;
reg   [31:0] tmp_108_reg_3292;
wire   [31:0] tmp_109_fu_2252_p29;
reg   [31:0] tmp_109_reg_3297;
wire   [31:0] tmp_110_fu_2312_p29;
reg   [31:0] tmp_110_reg_3302;
wire   [31:0] tmp_111_fu_2372_p29;
reg   [31:0] tmp_111_reg_3307;
wire   [31:0] tmp_112_fu_2432_p29;
reg   [31:0] tmp_112_reg_3312;
wire   [31:0] tmp_113_fu_2492_p29;
reg   [31:0] tmp_113_reg_3317;
reg   [31:0] out_reg_3322;
reg   [31:0] out_reg_3322_pp0_iter5_reg;
reg   [31:0] out_50_reg_3329;
reg   [31:0] out_50_reg_3329_pp0_iter5_reg;
reg   [31:0] out_51_reg_3336;
reg   [31:0] out_51_reg_3336_pp0_iter5_reg;
reg   [31:0] out_52_reg_3343;
reg   [31:0] out_52_reg_3343_pp0_iter5_reg;
reg   [31:0] out_53_reg_3350;
reg   [31:0] out_53_reg_3350_pp0_iter5_reg;
reg   [31:0] out_54_reg_3357;
reg   [31:0] out_54_reg_3357_pp0_iter5_reg;
reg   [31:0] out_55_reg_3364;
reg   [31:0] out_55_reg_3364_pp0_iter5_reg;
reg   [31:0] out_56_reg_3371;
reg   [31:0] out_56_reg_3371_pp0_iter5_reg;
reg   [31:0] out_57_reg_3378;
reg   [31:0] out_57_reg_3378_pp0_iter5_reg;
reg   [31:0] out_58_reg_3385;
reg   [31:0] out_58_reg_3385_pp0_iter5_reg;
reg   [31:0] out_59_reg_3392;
reg   [31:0] out_59_reg_3392_pp0_iter5_reg;
reg   [31:0] out_60_reg_3399;
reg   [31:0] out_60_reg_3399_pp0_iter5_reg;
reg   [31:0] out_61_reg_3406;
reg   [31:0] out_61_reg_3406_pp0_iter5_reg;
wire   [63:0] zext_ln148_fu_2565_p1;
wire    ap_block_pp0_stage0;
reg   [3:0] i_fu_436;
wire   [3:0] add_ln144_fu_1766_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i_9;
reg    out_img_0_we0_local;
wire   [31:0] select_ln151_fu_2623_p3;
reg    out_img_0_ce0_local;
reg    out_img_1_we0_local;
wire   [31:0] select_ln151_1_fu_2672_p3;
reg    out_img_1_ce0_local;
reg    out_img_2_we0_local;
wire   [31:0] select_ln151_2_fu_2721_p3;
reg    out_img_2_ce0_local;
reg    out_img_3_we0_local;
wire   [31:0] select_ln151_3_fu_2770_p3;
reg    out_img_3_ce0_local;
reg    out_img_4_we0_local;
wire   [31:0] select_ln151_4_fu_2819_p3;
reg    out_img_4_ce0_local;
reg    out_img_5_we0_local;
wire   [31:0] select_ln151_5_fu_2868_p3;
reg    out_img_5_ce0_local;
reg    out_img_6_we0_local;
wire   [31:0] select_ln151_6_fu_2917_p3;
reg    out_img_6_ce0_local;
reg    out_img_7_we0_local;
wire   [31:0] select_ln151_7_fu_2966_p3;
reg    out_img_7_ce0_local;
reg    out_img_8_we0_local;
wire   [31:0] select_ln151_8_fu_3015_p3;
reg    out_img_8_ce0_local;
reg    out_img_9_we0_local;
wire   [31:0] select_ln151_9_fu_3064_p3;
reg    out_img_9_ce0_local;
reg    out_img_10_we0_local;
wire   [31:0] select_ln151_10_fu_3113_p3;
reg    out_img_10_ce0_local;
reg    out_img_11_we0_local;
wire   [31:0] select_ln151_11_fu_3162_p3;
reg    out_img_11_ce0_local;
reg    out_img_12_we0_local;
wire   [31:0] select_ln151_12_fu_3211_p3;
reg    out_img_12_ce0_local;
wire   [31:0] tmp_fu_1772_p27;
wire   [31:0] tmp_s_fu_1832_p27;
wire   [31:0] tmp_103_fu_1892_p27;
wire   [31:0] tmp_104_fu_1952_p27;
wire   [31:0] tmp_105_fu_2012_p27;
wire   [31:0] tmp_106_fu_2072_p27;
wire   [31:0] tmp_107_fu_2132_p27;
wire   [31:0] tmp_108_fu_2192_p27;
wire   [31:0] tmp_109_fu_2252_p27;
wire   [31:0] tmp_110_fu_2312_p27;
wire   [31:0] tmp_111_fu_2372_p27;
wire   [31:0] tmp_112_fu_2432_p27;
wire   [31:0] tmp_113_fu_2492_p27;
wire   [12:0] zext_ln144_fu_2557_p1;
wire   [12:0] add_ln148_fu_2560_p2;
wire   [31:0] bitcast_ln151_fu_2582_p1;
wire   [7:0] tmp_168_fu_2585_p4;
wire   [22:0] trunc_ln151_fu_2595_p1;
wire   [0:0] icmp_ln151_1_fu_2605_p2;
wire   [0:0] icmp_ln151_fu_2599_p2;
wire   [0:0] or_ln151_fu_2611_p2;
wire   [0:0] and_ln151_fu_2617_p2;
wire   [31:0] bitcast_ln151_1_fu_2631_p1;
wire   [7:0] tmp_170_fu_2634_p4;
wire   [22:0] trunc_ln151_1_fu_2644_p1;
wire   [0:0] icmp_ln151_3_fu_2654_p2;
wire   [0:0] icmp_ln151_2_fu_2648_p2;
wire   [0:0] or_ln151_1_fu_2660_p2;
wire   [0:0] and_ln151_1_fu_2666_p2;
wire   [31:0] bitcast_ln151_2_fu_2680_p1;
wire   [7:0] tmp_172_fu_2683_p4;
wire   [22:0] trunc_ln151_2_fu_2693_p1;
wire   [0:0] icmp_ln151_5_fu_2703_p2;
wire   [0:0] icmp_ln151_4_fu_2697_p2;
wire   [0:0] or_ln151_2_fu_2709_p2;
wire   [0:0] and_ln151_2_fu_2715_p2;
wire   [31:0] bitcast_ln151_3_fu_2729_p1;
wire   [7:0] tmp_174_fu_2732_p4;
wire   [22:0] trunc_ln151_3_fu_2742_p1;
wire   [0:0] icmp_ln151_7_fu_2752_p2;
wire   [0:0] icmp_ln151_6_fu_2746_p2;
wire   [0:0] or_ln151_3_fu_2758_p2;
wire   [0:0] and_ln151_3_fu_2764_p2;
wire   [31:0] bitcast_ln151_4_fu_2778_p1;
wire   [7:0] tmp_176_fu_2781_p4;
wire   [22:0] trunc_ln151_4_fu_2791_p1;
wire   [0:0] icmp_ln151_9_fu_2801_p2;
wire   [0:0] icmp_ln151_8_fu_2795_p2;
wire   [0:0] or_ln151_4_fu_2807_p2;
wire   [0:0] and_ln151_4_fu_2813_p2;
wire   [31:0] bitcast_ln151_5_fu_2827_p1;
wire   [7:0] tmp_178_fu_2830_p4;
wire   [22:0] trunc_ln151_5_fu_2840_p1;
wire   [0:0] icmp_ln151_11_fu_2850_p2;
wire   [0:0] icmp_ln151_10_fu_2844_p2;
wire   [0:0] or_ln151_5_fu_2856_p2;
wire   [0:0] and_ln151_5_fu_2862_p2;
wire   [31:0] bitcast_ln151_6_fu_2876_p1;
wire   [7:0] tmp_180_fu_2879_p4;
wire   [22:0] trunc_ln151_6_fu_2889_p1;
wire   [0:0] icmp_ln151_13_fu_2899_p2;
wire   [0:0] icmp_ln151_12_fu_2893_p2;
wire   [0:0] or_ln151_6_fu_2905_p2;
wire   [0:0] and_ln151_6_fu_2911_p2;
wire   [31:0] bitcast_ln151_7_fu_2925_p1;
wire   [7:0] tmp_182_fu_2928_p4;
wire   [22:0] trunc_ln151_7_fu_2938_p1;
wire   [0:0] icmp_ln151_15_fu_2948_p2;
wire   [0:0] icmp_ln151_14_fu_2942_p2;
wire   [0:0] or_ln151_7_fu_2954_p2;
wire   [0:0] and_ln151_7_fu_2960_p2;
wire   [31:0] bitcast_ln151_8_fu_2974_p1;
wire   [7:0] tmp_184_fu_2977_p4;
wire   [22:0] trunc_ln151_8_fu_2987_p1;
wire   [0:0] icmp_ln151_17_fu_2997_p2;
wire   [0:0] icmp_ln151_16_fu_2991_p2;
wire   [0:0] or_ln151_8_fu_3003_p2;
wire   [0:0] and_ln151_8_fu_3009_p2;
wire   [31:0] bitcast_ln151_9_fu_3023_p1;
wire   [7:0] tmp_186_fu_3026_p4;
wire   [22:0] trunc_ln151_9_fu_3036_p1;
wire   [0:0] icmp_ln151_19_fu_3046_p2;
wire   [0:0] icmp_ln151_18_fu_3040_p2;
wire   [0:0] or_ln151_9_fu_3052_p2;
wire   [0:0] and_ln151_9_fu_3058_p2;
wire   [31:0] bitcast_ln151_10_fu_3072_p1;
wire   [7:0] tmp_188_fu_3075_p4;
wire   [22:0] trunc_ln151_10_fu_3085_p1;
wire   [0:0] icmp_ln151_21_fu_3095_p2;
wire   [0:0] icmp_ln151_20_fu_3089_p2;
wire   [0:0] or_ln151_10_fu_3101_p2;
wire   [0:0] and_ln151_10_fu_3107_p2;
wire   [31:0] bitcast_ln151_11_fu_3121_p1;
wire   [7:0] tmp_190_fu_3124_p4;
wire   [22:0] trunc_ln151_11_fu_3134_p1;
wire   [0:0] icmp_ln151_23_fu_3144_p2;
wire   [0:0] icmp_ln151_22_fu_3138_p2;
wire   [0:0] or_ln151_11_fu_3150_p2;
wire   [0:0] and_ln151_11_fu_3156_p2;
wire   [31:0] bitcast_ln151_12_fu_3170_p1;
wire   [7:0] tmp_192_fu_3173_p4;
wire   [22:0] trunc_ln151_12_fu_3183_p1;
wire   [0:0] icmp_ln151_25_fu_3193_p2;
wire   [0:0] icmp_ln151_24_fu_3187_p2;
wire   [0:0] or_ln151_12_fu_3199_p2;
wire   [0:0] and_ln151_12_fu_3205_p2;
wire    ap_block_pp0_stage0_00001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [3:0] tmp_fu_1772_p1;
wire   [3:0] tmp_fu_1772_p3;
wire   [3:0] tmp_fu_1772_p5;
wire   [3:0] tmp_fu_1772_p7;
wire   [3:0] tmp_fu_1772_p9;
wire   [3:0] tmp_fu_1772_p11;
wire   [3:0] tmp_fu_1772_p13;
wire   [3:0] tmp_fu_1772_p15;
wire  signed [3:0] tmp_fu_1772_p17;
wire  signed [3:0] tmp_fu_1772_p19;
wire  signed [3:0] tmp_fu_1772_p21;
wire  signed [3:0] tmp_fu_1772_p23;
wire  signed [3:0] tmp_fu_1772_p25;
wire   [3:0] tmp_s_fu_1832_p1;
wire   [3:0] tmp_s_fu_1832_p3;
wire   [3:0] tmp_s_fu_1832_p5;
wire   [3:0] tmp_s_fu_1832_p7;
wire   [3:0] tmp_s_fu_1832_p9;
wire   [3:0] tmp_s_fu_1832_p11;
wire   [3:0] tmp_s_fu_1832_p13;
wire   [3:0] tmp_s_fu_1832_p15;
wire  signed [3:0] tmp_s_fu_1832_p17;
wire  signed [3:0] tmp_s_fu_1832_p19;
wire  signed [3:0] tmp_s_fu_1832_p21;
wire  signed [3:0] tmp_s_fu_1832_p23;
wire  signed [3:0] tmp_s_fu_1832_p25;
wire   [3:0] tmp_103_fu_1892_p1;
wire   [3:0] tmp_103_fu_1892_p3;
wire   [3:0] tmp_103_fu_1892_p5;
wire   [3:0] tmp_103_fu_1892_p7;
wire   [3:0] tmp_103_fu_1892_p9;
wire   [3:0] tmp_103_fu_1892_p11;
wire   [3:0] tmp_103_fu_1892_p13;
wire   [3:0] tmp_103_fu_1892_p15;
wire  signed [3:0] tmp_103_fu_1892_p17;
wire  signed [3:0] tmp_103_fu_1892_p19;
wire  signed [3:0] tmp_103_fu_1892_p21;
wire  signed [3:0] tmp_103_fu_1892_p23;
wire  signed [3:0] tmp_103_fu_1892_p25;
wire   [3:0] tmp_104_fu_1952_p1;
wire   [3:0] tmp_104_fu_1952_p3;
wire   [3:0] tmp_104_fu_1952_p5;
wire   [3:0] tmp_104_fu_1952_p7;
wire   [3:0] tmp_104_fu_1952_p9;
wire   [3:0] tmp_104_fu_1952_p11;
wire   [3:0] tmp_104_fu_1952_p13;
wire   [3:0] tmp_104_fu_1952_p15;
wire  signed [3:0] tmp_104_fu_1952_p17;
wire  signed [3:0] tmp_104_fu_1952_p19;
wire  signed [3:0] tmp_104_fu_1952_p21;
wire  signed [3:0] tmp_104_fu_1952_p23;
wire  signed [3:0] tmp_104_fu_1952_p25;
wire   [3:0] tmp_105_fu_2012_p1;
wire   [3:0] tmp_105_fu_2012_p3;
wire   [3:0] tmp_105_fu_2012_p5;
wire   [3:0] tmp_105_fu_2012_p7;
wire   [3:0] tmp_105_fu_2012_p9;
wire   [3:0] tmp_105_fu_2012_p11;
wire   [3:0] tmp_105_fu_2012_p13;
wire   [3:0] tmp_105_fu_2012_p15;
wire  signed [3:0] tmp_105_fu_2012_p17;
wire  signed [3:0] tmp_105_fu_2012_p19;
wire  signed [3:0] tmp_105_fu_2012_p21;
wire  signed [3:0] tmp_105_fu_2012_p23;
wire  signed [3:0] tmp_105_fu_2012_p25;
wire   [3:0] tmp_106_fu_2072_p1;
wire   [3:0] tmp_106_fu_2072_p3;
wire   [3:0] tmp_106_fu_2072_p5;
wire   [3:0] tmp_106_fu_2072_p7;
wire   [3:0] tmp_106_fu_2072_p9;
wire   [3:0] tmp_106_fu_2072_p11;
wire   [3:0] tmp_106_fu_2072_p13;
wire   [3:0] tmp_106_fu_2072_p15;
wire  signed [3:0] tmp_106_fu_2072_p17;
wire  signed [3:0] tmp_106_fu_2072_p19;
wire  signed [3:0] tmp_106_fu_2072_p21;
wire  signed [3:0] tmp_106_fu_2072_p23;
wire  signed [3:0] tmp_106_fu_2072_p25;
wire   [3:0] tmp_107_fu_2132_p1;
wire   [3:0] tmp_107_fu_2132_p3;
wire   [3:0] tmp_107_fu_2132_p5;
wire   [3:0] tmp_107_fu_2132_p7;
wire   [3:0] tmp_107_fu_2132_p9;
wire   [3:0] tmp_107_fu_2132_p11;
wire   [3:0] tmp_107_fu_2132_p13;
wire   [3:0] tmp_107_fu_2132_p15;
wire  signed [3:0] tmp_107_fu_2132_p17;
wire  signed [3:0] tmp_107_fu_2132_p19;
wire  signed [3:0] tmp_107_fu_2132_p21;
wire  signed [3:0] tmp_107_fu_2132_p23;
wire  signed [3:0] tmp_107_fu_2132_p25;
wire   [3:0] tmp_108_fu_2192_p1;
wire   [3:0] tmp_108_fu_2192_p3;
wire   [3:0] tmp_108_fu_2192_p5;
wire   [3:0] tmp_108_fu_2192_p7;
wire   [3:0] tmp_108_fu_2192_p9;
wire   [3:0] tmp_108_fu_2192_p11;
wire   [3:0] tmp_108_fu_2192_p13;
wire   [3:0] tmp_108_fu_2192_p15;
wire  signed [3:0] tmp_108_fu_2192_p17;
wire  signed [3:0] tmp_108_fu_2192_p19;
wire  signed [3:0] tmp_108_fu_2192_p21;
wire  signed [3:0] tmp_108_fu_2192_p23;
wire  signed [3:0] tmp_108_fu_2192_p25;
wire   [3:0] tmp_109_fu_2252_p1;
wire   [3:0] tmp_109_fu_2252_p3;
wire   [3:0] tmp_109_fu_2252_p5;
wire   [3:0] tmp_109_fu_2252_p7;
wire   [3:0] tmp_109_fu_2252_p9;
wire   [3:0] tmp_109_fu_2252_p11;
wire   [3:0] tmp_109_fu_2252_p13;
wire   [3:0] tmp_109_fu_2252_p15;
wire  signed [3:0] tmp_109_fu_2252_p17;
wire  signed [3:0] tmp_109_fu_2252_p19;
wire  signed [3:0] tmp_109_fu_2252_p21;
wire  signed [3:0] tmp_109_fu_2252_p23;
wire  signed [3:0] tmp_109_fu_2252_p25;
wire   [3:0] tmp_110_fu_2312_p1;
wire   [3:0] tmp_110_fu_2312_p3;
wire   [3:0] tmp_110_fu_2312_p5;
wire   [3:0] tmp_110_fu_2312_p7;
wire   [3:0] tmp_110_fu_2312_p9;
wire   [3:0] tmp_110_fu_2312_p11;
wire   [3:0] tmp_110_fu_2312_p13;
wire   [3:0] tmp_110_fu_2312_p15;
wire  signed [3:0] tmp_110_fu_2312_p17;
wire  signed [3:0] tmp_110_fu_2312_p19;
wire  signed [3:0] tmp_110_fu_2312_p21;
wire  signed [3:0] tmp_110_fu_2312_p23;
wire  signed [3:0] tmp_110_fu_2312_p25;
wire   [3:0] tmp_111_fu_2372_p1;
wire   [3:0] tmp_111_fu_2372_p3;
wire   [3:0] tmp_111_fu_2372_p5;
wire   [3:0] tmp_111_fu_2372_p7;
wire   [3:0] tmp_111_fu_2372_p9;
wire   [3:0] tmp_111_fu_2372_p11;
wire   [3:0] tmp_111_fu_2372_p13;
wire   [3:0] tmp_111_fu_2372_p15;
wire  signed [3:0] tmp_111_fu_2372_p17;
wire  signed [3:0] tmp_111_fu_2372_p19;
wire  signed [3:0] tmp_111_fu_2372_p21;
wire  signed [3:0] tmp_111_fu_2372_p23;
wire  signed [3:0] tmp_111_fu_2372_p25;
wire   [3:0] tmp_112_fu_2432_p1;
wire   [3:0] tmp_112_fu_2432_p3;
wire   [3:0] tmp_112_fu_2432_p5;
wire   [3:0] tmp_112_fu_2432_p7;
wire   [3:0] tmp_112_fu_2432_p9;
wire   [3:0] tmp_112_fu_2432_p11;
wire   [3:0] tmp_112_fu_2432_p13;
wire   [3:0] tmp_112_fu_2432_p15;
wire  signed [3:0] tmp_112_fu_2432_p17;
wire  signed [3:0] tmp_112_fu_2432_p19;
wire  signed [3:0] tmp_112_fu_2432_p21;
wire  signed [3:0] tmp_112_fu_2432_p23;
wire  signed [3:0] tmp_112_fu_2432_p25;
wire   [3:0] tmp_113_fu_2492_p1;
wire   [3:0] tmp_113_fu_2492_p3;
wire   [3:0] tmp_113_fu_2492_p5;
wire   [3:0] tmp_113_fu_2492_p7;
wire   [3:0] tmp_113_fu_2492_p9;
wire   [3:0] tmp_113_fu_2492_p11;
wire   [3:0] tmp_113_fu_2492_p13;
wire   [3:0] tmp_113_fu_2492_p15;
wire  signed [3:0] tmp_113_fu_2492_p17;
wire  signed [3:0] tmp_113_fu_2492_p19;
wire  signed [3:0] tmp_113_fu_2492_p21;
wire  signed [3:0] tmp_113_fu_2492_p23;
wire  signed [3:0] tmp_113_fu_2492_p25;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 i_fu_436 = 4'd0;
#0 ap_done_reg = 1'b0;
end

(* dissolve_hierarchy = "yes" *) NN_sparsemux_27_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_27_4_32_1_1_U13634(
    .din0(add1804614_reload),
    .din1(add180_14627_reload),
    .din2(add180_24640_reload),
    .din3(add180_34653_reload),
    .din4(add180_44666_reload),
    .din5(add180_54679_reload),
    .din6(add180_64692_reload),
    .din7(add180_74705_reload),
    .din8(add180_84718_reload),
    .din9(add180_94731_reload),
    .din10(add180_104744_reload),
    .din11(add180_114757_reload),
    .din12(add180_124770_reload),
    .def(tmp_fu_1772_p27),
    .sel(ap_sig_allocacmp_i_9),
    .dout(tmp_fu_1772_p29)
);

(* dissolve_hierarchy = "yes" *) NN_sparsemux_27_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_27_4_32_1_1_U13635(
    .din0(add180_138794615_reload),
    .din1(add180_1_14628_reload),
    .din2(add180_2_14641_reload),
    .din3(add180_3_14654_reload),
    .din4(add180_4_14667_reload),
    .din5(add180_5_14680_reload),
    .din6(add180_6_14693_reload),
    .din7(add180_7_14706_reload),
    .din8(add180_8_14719_reload),
    .din9(add180_9_14732_reload),
    .din10(add180_10_14745_reload),
    .din11(add180_11_14758_reload),
    .din12(add180_12_14771_reload),
    .def(tmp_s_fu_1832_p27),
    .sel(ap_sig_allocacmp_i_9),
    .dout(tmp_s_fu_1832_p29)
);

(* dissolve_hierarchy = "yes" *) NN_sparsemux_27_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_27_4_32_1_1_U13636(
    .din0(add180_238964616_reload),
    .din1(add180_1_24629_reload),
    .din2(add180_2_24642_reload),
    .din3(add180_3_24655_reload),
    .din4(add180_4_24668_reload),
    .din5(add180_5_24681_reload),
    .din6(add180_6_24694_reload),
    .din7(add180_7_24707_reload),
    .din8(add180_8_24720_reload),
    .din9(add180_9_24733_reload),
    .din10(add180_10_24746_reload),
    .din11(add180_11_24759_reload),
    .din12(add180_12_24772_reload),
    .def(tmp_103_fu_1892_p27),
    .sel(ap_sig_allocacmp_i_9),
    .dout(tmp_103_fu_1892_p29)
);

(* dissolve_hierarchy = "yes" *) NN_sparsemux_27_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_27_4_32_1_1_U13637(
    .din0(add180_339134617_reload),
    .din1(add180_1_34630_reload),
    .din2(add180_2_34643_reload),
    .din3(add180_3_34656_reload),
    .din4(add180_4_34669_reload),
    .din5(add180_5_34682_reload),
    .din6(add180_6_34695_reload),
    .din7(add180_7_34708_reload),
    .din8(add180_8_34721_reload),
    .din9(add180_9_34734_reload),
    .din10(add180_10_34747_reload),
    .din11(add180_11_34760_reload),
    .din12(add180_12_34773_reload),
    .def(tmp_104_fu_1952_p27),
    .sel(ap_sig_allocacmp_i_9),
    .dout(tmp_104_fu_1952_p29)
);

(* dissolve_hierarchy = "yes" *) NN_sparsemux_27_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_27_4_32_1_1_U13638(
    .din0(add180_439304618_reload),
    .din1(add180_1_44631_reload),
    .din2(add180_2_44644_reload),
    .din3(add180_3_44657_reload),
    .din4(add180_4_44670_reload),
    .din5(add180_5_44683_reload),
    .din6(add180_6_44696_reload),
    .din7(add180_7_44709_reload),
    .din8(add180_8_44722_reload),
    .din9(add180_9_44735_reload),
    .din10(add180_10_44748_reload),
    .din11(add180_11_44761_reload),
    .din12(add180_12_44774_reload),
    .def(tmp_105_fu_2012_p27),
    .sel(ap_sig_allocacmp_i_9),
    .dout(tmp_105_fu_2012_p29)
);

(* dissolve_hierarchy = "yes" *) NN_sparsemux_27_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_27_4_32_1_1_U13639(
    .din0(add180_539474619_reload),
    .din1(add180_1_54632_reload),
    .din2(add180_2_54645_reload),
    .din3(add180_3_54658_reload),
    .din4(add180_4_54671_reload),
    .din5(add180_5_54684_reload),
    .din6(add180_6_54697_reload),
    .din7(add180_7_54710_reload),
    .din8(add180_8_54723_reload),
    .din9(add180_9_54736_reload),
    .din10(add180_10_54749_reload),
    .din11(add180_11_54762_reload),
    .din12(add180_12_54775_reload),
    .def(tmp_106_fu_2072_p27),
    .sel(ap_sig_allocacmp_i_9),
    .dout(tmp_106_fu_2072_p29)
);

(* dissolve_hierarchy = "yes" *) NN_sparsemux_27_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_27_4_32_1_1_U13640(
    .din0(add180_639644620_reload),
    .din1(add180_1_64633_reload),
    .din2(add180_2_64646_reload),
    .din3(add180_3_64659_reload),
    .din4(add180_4_64672_reload),
    .din5(add180_5_64685_reload),
    .din6(add180_6_64698_reload),
    .din7(add180_7_64711_reload),
    .din8(add180_8_64724_reload),
    .din9(add180_9_64737_reload),
    .din10(add180_10_64750_reload),
    .din11(add180_11_64763_reload),
    .din12(add180_12_64776_reload),
    .def(tmp_107_fu_2132_p27),
    .sel(ap_sig_allocacmp_i_9),
    .dout(tmp_107_fu_2132_p29)
);

(* dissolve_hierarchy = "yes" *) NN_sparsemux_27_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_27_4_32_1_1_U13641(
    .din0(add180_739814621_reload),
    .din1(add180_1_74634_reload),
    .din2(add180_2_74647_reload),
    .din3(add180_3_74660_reload),
    .din4(add180_4_74673_reload),
    .din5(add180_5_74686_reload),
    .din6(add180_6_74699_reload),
    .din7(add180_7_74712_reload),
    .din8(add180_8_74725_reload),
    .din9(add180_9_74738_reload),
    .din10(add180_10_74751_reload),
    .din11(add180_11_74764_reload),
    .din12(add180_12_74777_reload),
    .def(tmp_108_fu_2192_p27),
    .sel(ap_sig_allocacmp_i_9),
    .dout(tmp_108_fu_2192_p29)
);

(* dissolve_hierarchy = "yes" *) NN_sparsemux_27_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_27_4_32_1_1_U13642(
    .din0(add180_839984622_reload),
    .din1(add180_1_84635_reload),
    .din2(add180_2_84648_reload),
    .din3(add180_3_84661_reload),
    .din4(add180_4_84674_reload),
    .din5(add180_5_84687_reload),
    .din6(add180_6_84700_reload),
    .din7(add180_7_84713_reload),
    .din8(add180_8_84726_reload),
    .din9(add180_9_84739_reload),
    .din10(add180_10_84752_reload),
    .din11(add180_11_84765_reload),
    .din12(add180_12_84778_reload),
    .def(tmp_109_fu_2252_p27),
    .sel(ap_sig_allocacmp_i_9),
    .dout(tmp_109_fu_2252_p29)
);

(* dissolve_hierarchy = "yes" *) NN_sparsemux_27_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_27_4_32_1_1_U13643(
    .din0(add180_940154623_reload),
    .din1(add180_1_94636_reload),
    .din2(add180_2_94649_reload),
    .din3(add180_3_94662_reload),
    .din4(add180_4_94675_reload),
    .din5(add180_5_94688_reload),
    .din6(add180_6_94701_reload),
    .din7(add180_7_94714_reload),
    .din8(add180_8_94727_reload),
    .din9(add180_9_94740_reload),
    .din10(add180_10_94753_reload),
    .din11(add180_11_94766_reload),
    .din12(add180_12_94779_reload),
    .def(tmp_110_fu_2312_p27),
    .sel(ap_sig_allocacmp_i_9),
    .dout(tmp_110_fu_2312_p29)
);

(* dissolve_hierarchy = "yes" *) NN_sparsemux_27_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_27_4_32_1_1_U13644(
    .din0(add180_1040324624_reload),
    .din1(add180_1_104637_reload),
    .din2(add180_2_104650_reload),
    .din3(add180_3_104663_reload),
    .din4(add180_4_104676_reload),
    .din5(add180_5_104689_reload),
    .din6(add180_6_104702_reload),
    .din7(add180_7_104715_reload),
    .din8(add180_8_104728_reload),
    .din9(add180_9_104741_reload),
    .din10(add180_10_104754_reload),
    .din11(add180_11_104767_reload),
    .din12(add180_12_104780_reload),
    .def(tmp_111_fu_2372_p27),
    .sel(ap_sig_allocacmp_i_9),
    .dout(tmp_111_fu_2372_p29)
);

(* dissolve_hierarchy = "yes" *) NN_sparsemux_27_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_27_4_32_1_1_U13645(
    .din0(add180_1140494625_reload),
    .din1(add180_1_114638_reload),
    .din2(add180_2_114651_reload),
    .din3(add180_3_114664_reload),
    .din4(add180_4_114677_reload),
    .din5(add180_5_114690_reload),
    .din6(add180_6_114703_reload),
    .din7(add180_7_114716_reload),
    .din8(add180_8_114729_reload),
    .din9(add180_9_114742_reload),
    .din10(add180_10_114755_reload),
    .din11(add180_11_114768_reload),
    .din12(add180_12_114781_reload),
    .def(tmp_112_fu_2432_p27),
    .sel(ap_sig_allocacmp_i_9),
    .dout(tmp_112_fu_2432_p29)
);

(* dissolve_hierarchy = "yes" *) NN_sparsemux_27_4_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 4'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 4'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 4'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 4'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 4'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 4'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 4'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 4'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 4'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 4'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 4'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 4'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 4'hC ),
    .din12_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
sparsemux_27_4_32_1_1_U13646(
    .din0(add180_1240664626_reload),
    .din1(add180_1_124639_reload),
    .din2(add180_2_124652_reload),
    .din3(add180_3_124665_reload),
    .din4(add180_4_124678_reload),
    .din5(add180_5_124691_reload),
    .din6(add180_6_124704_reload),
    .din7(add180_7_124717_reload),
    .din8(add180_8_124730_reload),
    .din9(add180_9_124743_reload),
    .din10(add180_10_124756_reload),
    .din11(add180_11_124769_reload),
    .din12(add180_12_124791_reload),
    .def(tmp_113_fu_2492_p27),
    .sel(ap_sig_allocacmp_i_9),
    .dout(tmp_113_fu_2492_p29)
);

NN_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln144_fu_1760_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_436 <= add_ln144_fu_1766_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_436 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        i_9_reg_3248 <= ap_sig_allocacmp_i_9;
        i_9_reg_3248_pp0_iter1_reg <= i_9_reg_3248;
        tmp_103_reg_3267 <= tmp_103_fu_1892_p29;
        tmp_104_reg_3272 <= tmp_104_fu_1952_p29;
        tmp_105_reg_3277 <= tmp_105_fu_2012_p29;
        tmp_106_reg_3282 <= tmp_106_fu_2072_p29;
        tmp_107_reg_3287 <= tmp_107_fu_2132_p29;
        tmp_108_reg_3292 <= tmp_108_fu_2192_p29;
        tmp_109_reg_3297 <= tmp_109_fu_2252_p29;
        tmp_110_reg_3302 <= tmp_110_fu_2312_p29;
        tmp_111_reg_3307 <= tmp_111_fu_2372_p29;
        tmp_112_reg_3312 <= tmp_112_fu_2432_p29;
        tmp_113_reg_3317 <= tmp_113_fu_2492_p29;
        tmp_reg_3257 <= tmp_fu_1772_p29;
        tmp_s_reg_3262 <= tmp_s_fu_1832_p29;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        i_9_reg_3248_pp0_iter2_reg <= i_9_reg_3248_pp0_iter1_reg;
        i_9_reg_3248_pp0_iter3_reg <= i_9_reg_3248_pp0_iter2_reg;
        i_9_reg_3248_pp0_iter4_reg <= i_9_reg_3248_pp0_iter3_reg;
        i_9_reg_3248_pp0_iter5_reg <= i_9_reg_3248_pp0_iter4_reg;
        out_50_reg_3329 <= grp_fu_11090_p_dout0;
        out_50_reg_3329_pp0_iter5_reg <= out_50_reg_3329;
        out_51_reg_3336 <= grp_fu_11094_p_dout0;
        out_51_reg_3336_pp0_iter5_reg <= out_51_reg_3336;
        out_52_reg_3343 <= grp_fu_11098_p_dout0;
        out_52_reg_3343_pp0_iter5_reg <= out_52_reg_3343;
        out_53_reg_3350 <= grp_fu_11102_p_dout0;
        out_53_reg_3350_pp0_iter5_reg <= out_53_reg_3350;
        out_54_reg_3357 <= grp_fu_11106_p_dout0;
        out_54_reg_3357_pp0_iter5_reg <= out_54_reg_3357;
        out_55_reg_3364 <= grp_fu_11110_p_dout0;
        out_55_reg_3364_pp0_iter5_reg <= out_55_reg_3364;
        out_56_reg_3371 <= grp_fu_11114_p_dout0;
        out_56_reg_3371_pp0_iter5_reg <= out_56_reg_3371;
        out_57_reg_3378 <= grp_fu_11118_p_dout0;
        out_57_reg_3378_pp0_iter5_reg <= out_57_reg_3378;
        out_58_reg_3385 <= grp_fu_11122_p_dout0;
        out_58_reg_3385_pp0_iter5_reg <= out_58_reg_3385;
        out_59_reg_3392 <= grp_fu_11126_p_dout0;
        out_59_reg_3392_pp0_iter5_reg <= out_59_reg_3392;
        out_60_reg_3399 <= grp_fu_11130_p_dout0;
        out_60_reg_3399_pp0_iter5_reg <= out_60_reg_3399;
        out_61_reg_3406 <= grp_fu_11134_p_dout0;
        out_61_reg_3406_pp0_iter5_reg <= out_61_reg_3406;
        out_reg_3322 <= grp_fu_11086_p_dout0;
        out_reg_3322_pp0_iter5_reg <= out_reg_3322;
    end
end

always @ (*) begin
    if (((icmp_ln144_fu_1760_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_9 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_9 = i_fu_436;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_0_ce0_local = 1'b1;
    end else begin
        out_img_0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_0_we0_local = 1'b1;
    end else begin
        out_img_0_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_10_ce0_local = 1'b1;
    end else begin
        out_img_10_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_10_we0_local = 1'b1;
    end else begin
        out_img_10_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_11_ce0_local = 1'b1;
    end else begin
        out_img_11_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_11_we0_local = 1'b1;
    end else begin
        out_img_11_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_12_ce0_local = 1'b1;
    end else begin
        out_img_12_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_12_we0_local = 1'b1;
    end else begin
        out_img_12_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_1_ce0_local = 1'b1;
    end else begin
        out_img_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_1_we0_local = 1'b1;
    end else begin
        out_img_1_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_2_ce0_local = 1'b1;
    end else begin
        out_img_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_2_we0_local = 1'b1;
    end else begin
        out_img_2_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_3_ce0_local = 1'b1;
    end else begin
        out_img_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_3_we0_local = 1'b1;
    end else begin
        out_img_3_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_4_ce0_local = 1'b1;
    end else begin
        out_img_4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_4_we0_local = 1'b1;
    end else begin
        out_img_4_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_5_ce0_local = 1'b1;
    end else begin
        out_img_5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_5_we0_local = 1'b1;
    end else begin
        out_img_5_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_6_ce0_local = 1'b1;
    end else begin
        out_img_6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_6_we0_local = 1'b1;
    end else begin
        out_img_6_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_7_ce0_local = 1'b1;
    end else begin
        out_img_7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_7_we0_local = 1'b1;
    end else begin
        out_img_7_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_8_ce0_local = 1'b1;
    end else begin
        out_img_8_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_8_we0_local = 1'b1;
    end else begin
        out_img_8_we0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_9_ce0_local = 1'b1;
    end else begin
        out_img_9_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_img_9_we0_local = 1'b1;
    end else begin
        out_img_9_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln144_fu_1766_p2 = (ap_sig_allocacmp_i_9 + 4'd1);

assign add_ln148_fu_2560_p2 = (zext_ln144_fu_2557_p1 + phi_mul9);

assign and_ln151_10_fu_3107_p2 = (or_ln151_10_fu_3101_p2 & grp_fu_15138_p_dout0);

assign and_ln151_11_fu_3156_p2 = (or_ln151_11_fu_3150_p2 & grp_fu_15142_p_dout0);

assign and_ln151_12_fu_3205_p2 = (or_ln151_12_fu_3199_p2 & grp_fu_15146_p_dout0);

assign and_ln151_1_fu_2666_p2 = (or_ln151_1_fu_2660_p2 & grp_fu_15102_p_dout0);

assign and_ln151_2_fu_2715_p2 = (or_ln151_2_fu_2709_p2 & grp_fu_15106_p_dout0);

assign and_ln151_3_fu_2764_p2 = (or_ln151_3_fu_2758_p2 & grp_fu_15110_p_dout0);

assign and_ln151_4_fu_2813_p2 = (or_ln151_4_fu_2807_p2 & grp_fu_15114_p_dout0);

assign and_ln151_5_fu_2862_p2 = (or_ln151_5_fu_2856_p2 & grp_fu_15118_p_dout0);

assign and_ln151_6_fu_2911_p2 = (or_ln151_6_fu_2905_p2 & grp_fu_15122_p_dout0);

assign and_ln151_7_fu_2960_p2 = (or_ln151_7_fu_2954_p2 & grp_fu_15126_p_dout0);

assign and_ln151_8_fu_3009_p2 = (or_ln151_8_fu_3003_p2 & grp_fu_15130_p_dout0);

assign and_ln151_9_fu_3058_p2 = (or_ln151_9_fu_3052_p2 & grp_fu_15134_p_dout0);

assign and_ln151_fu_2617_p2 = (or_ln151_fu_2611_p2 & grp_fu_15098_p_dout0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign bitcast_ln151_10_fu_3072_p1 = out_59_reg_3392_pp0_iter5_reg;

assign bitcast_ln151_11_fu_3121_p1 = out_60_reg_3399_pp0_iter5_reg;

assign bitcast_ln151_12_fu_3170_p1 = out_61_reg_3406_pp0_iter5_reg;

assign bitcast_ln151_1_fu_2631_p1 = out_50_reg_3329_pp0_iter5_reg;

assign bitcast_ln151_2_fu_2680_p1 = out_51_reg_3336_pp0_iter5_reg;

assign bitcast_ln151_3_fu_2729_p1 = out_52_reg_3343_pp0_iter5_reg;

assign bitcast_ln151_4_fu_2778_p1 = out_53_reg_3350_pp0_iter5_reg;

assign bitcast_ln151_5_fu_2827_p1 = out_54_reg_3357_pp0_iter5_reg;

assign bitcast_ln151_6_fu_2876_p1 = out_55_reg_3364_pp0_iter5_reg;

assign bitcast_ln151_7_fu_2925_p1 = out_56_reg_3371_pp0_iter5_reg;

assign bitcast_ln151_8_fu_2974_p1 = out_57_reg_3378_pp0_iter5_reg;

assign bitcast_ln151_9_fu_3023_p1 = out_58_reg_3385_pp0_iter5_reg;

assign bitcast_ln151_fu_2582_p1 = out_reg_3322_pp0_iter5_reg;

assign grp_fu_11086_p_ce = 1'b1;

assign grp_fu_11086_p_din0 = tmp_reg_3257;

assign grp_fu_11086_p_din1 = bias_conv3_load;

assign grp_fu_11086_p_opcode = 2'd0;

assign grp_fu_11090_p_ce = 1'b1;

assign grp_fu_11090_p_din0 = tmp_s_reg_3262;

assign grp_fu_11090_p_din1 = bias_conv3_load;

assign grp_fu_11090_p_opcode = 2'd0;

assign grp_fu_11094_p_ce = 1'b1;

assign grp_fu_11094_p_din0 = tmp_103_reg_3267;

assign grp_fu_11094_p_din1 = bias_conv3_load;

assign grp_fu_11094_p_opcode = 2'd0;

assign grp_fu_11098_p_ce = 1'b1;

assign grp_fu_11098_p_din0 = tmp_104_reg_3272;

assign grp_fu_11098_p_din1 = bias_conv3_load;

assign grp_fu_11098_p_opcode = 2'd0;

assign grp_fu_11102_p_ce = 1'b1;

assign grp_fu_11102_p_din0 = tmp_105_reg_3277;

assign grp_fu_11102_p_din1 = bias_conv3_load;

assign grp_fu_11102_p_opcode = 2'd0;

assign grp_fu_11106_p_ce = 1'b1;

assign grp_fu_11106_p_din0 = tmp_106_reg_3282;

assign grp_fu_11106_p_din1 = bias_conv3_load;

assign grp_fu_11106_p_opcode = 2'd0;

assign grp_fu_11110_p_ce = 1'b1;

assign grp_fu_11110_p_din0 = tmp_107_reg_3287;

assign grp_fu_11110_p_din1 = bias_conv3_load;

assign grp_fu_11110_p_opcode = 2'd0;

assign grp_fu_11114_p_ce = 1'b1;

assign grp_fu_11114_p_din0 = tmp_108_reg_3292;

assign grp_fu_11114_p_din1 = bias_conv3_load;

assign grp_fu_11114_p_opcode = 2'd0;

assign grp_fu_11118_p_ce = 1'b1;

assign grp_fu_11118_p_din0 = tmp_109_reg_3297;

assign grp_fu_11118_p_din1 = bias_conv3_load;

assign grp_fu_11118_p_opcode = 2'd0;

assign grp_fu_11122_p_ce = 1'b1;

assign grp_fu_11122_p_din0 = tmp_110_reg_3302;

assign grp_fu_11122_p_din1 = bias_conv3_load;

assign grp_fu_11122_p_opcode = 2'd0;

assign grp_fu_11126_p_ce = 1'b1;

assign grp_fu_11126_p_din0 = tmp_111_reg_3307;

assign grp_fu_11126_p_din1 = bias_conv3_load;

assign grp_fu_11126_p_opcode = 2'd0;

assign grp_fu_11130_p_ce = 1'b1;

assign grp_fu_11130_p_din0 = tmp_112_reg_3312;

assign grp_fu_11130_p_din1 = bias_conv3_load;

assign grp_fu_11130_p_opcode = 2'd0;

assign grp_fu_11134_p_ce = 1'b1;

assign grp_fu_11134_p_din0 = tmp_113_reg_3317;

assign grp_fu_11134_p_din1 = bias_conv3_load;

assign grp_fu_11134_p_opcode = 2'd0;

assign grp_fu_15098_p_ce = 1'b1;

assign grp_fu_15098_p_din0 = out_reg_3322;

assign grp_fu_15098_p_din1 = 32'd0;

assign grp_fu_15098_p_opcode = 5'd2;

assign grp_fu_15102_p_ce = 1'b1;

assign grp_fu_15102_p_din0 = out_50_reg_3329;

assign grp_fu_15102_p_din1 = 32'd0;

assign grp_fu_15102_p_opcode = 5'd2;

assign grp_fu_15106_p_ce = 1'b1;

assign grp_fu_15106_p_din0 = out_51_reg_3336;

assign grp_fu_15106_p_din1 = 32'd0;

assign grp_fu_15106_p_opcode = 5'd2;

assign grp_fu_15110_p_ce = 1'b1;

assign grp_fu_15110_p_din0 = out_52_reg_3343;

assign grp_fu_15110_p_din1 = 32'd0;

assign grp_fu_15110_p_opcode = 5'd2;

assign grp_fu_15114_p_ce = 1'b1;

assign grp_fu_15114_p_din0 = out_53_reg_3350;

assign grp_fu_15114_p_din1 = 32'd0;

assign grp_fu_15114_p_opcode = 5'd2;

assign grp_fu_15118_p_ce = 1'b1;

assign grp_fu_15118_p_din0 = out_54_reg_3357;

assign grp_fu_15118_p_din1 = 32'd0;

assign grp_fu_15118_p_opcode = 5'd2;

assign grp_fu_15122_p_ce = 1'b1;

assign grp_fu_15122_p_din0 = out_55_reg_3364;

assign grp_fu_15122_p_din1 = 32'd0;

assign grp_fu_15122_p_opcode = 5'd2;

assign grp_fu_15126_p_ce = 1'b1;

assign grp_fu_15126_p_din0 = out_56_reg_3371;

assign grp_fu_15126_p_din1 = 32'd0;

assign grp_fu_15126_p_opcode = 5'd2;

assign grp_fu_15130_p_ce = 1'b1;

assign grp_fu_15130_p_din0 = out_57_reg_3378;

assign grp_fu_15130_p_din1 = 32'd0;

assign grp_fu_15130_p_opcode = 5'd2;

assign grp_fu_15134_p_ce = 1'b1;

assign grp_fu_15134_p_din0 = out_58_reg_3385;

assign grp_fu_15134_p_din1 = 32'd0;

assign grp_fu_15134_p_opcode = 5'd2;

assign grp_fu_15138_p_ce = 1'b1;

assign grp_fu_15138_p_din0 = out_59_reg_3392;

assign grp_fu_15138_p_din1 = 32'd0;

assign grp_fu_15138_p_opcode = 5'd2;

assign grp_fu_15142_p_ce = 1'b1;

assign grp_fu_15142_p_din0 = out_60_reg_3399;

assign grp_fu_15142_p_din1 = 32'd0;

assign grp_fu_15142_p_opcode = 5'd2;

assign grp_fu_15146_p_ce = 1'b1;

assign grp_fu_15146_p_din0 = out_61_reg_3406;

assign grp_fu_15146_p_din1 = 32'd0;

assign grp_fu_15146_p_opcode = 5'd2;

assign icmp_ln144_fu_1760_p2 = ((ap_sig_allocacmp_i_9 == 4'd13) ? 1'b1 : 1'b0);

assign icmp_ln151_10_fu_2844_p2 = ((tmp_178_fu_2830_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln151_11_fu_2850_p2 = ((trunc_ln151_5_fu_2840_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln151_12_fu_2893_p2 = ((tmp_180_fu_2879_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln151_13_fu_2899_p2 = ((trunc_ln151_6_fu_2889_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln151_14_fu_2942_p2 = ((tmp_182_fu_2928_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln151_15_fu_2948_p2 = ((trunc_ln151_7_fu_2938_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln151_16_fu_2991_p2 = ((tmp_184_fu_2977_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln151_17_fu_2997_p2 = ((trunc_ln151_8_fu_2987_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln151_18_fu_3040_p2 = ((tmp_186_fu_3026_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln151_19_fu_3046_p2 = ((trunc_ln151_9_fu_3036_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln151_1_fu_2605_p2 = ((trunc_ln151_fu_2595_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln151_20_fu_3089_p2 = ((tmp_188_fu_3075_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln151_21_fu_3095_p2 = ((trunc_ln151_10_fu_3085_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln151_22_fu_3138_p2 = ((tmp_190_fu_3124_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln151_23_fu_3144_p2 = ((trunc_ln151_11_fu_3134_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln151_24_fu_3187_p2 = ((tmp_192_fu_3173_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln151_25_fu_3193_p2 = ((trunc_ln151_12_fu_3183_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln151_2_fu_2648_p2 = ((tmp_170_fu_2634_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln151_3_fu_2654_p2 = ((trunc_ln151_1_fu_2644_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln151_4_fu_2697_p2 = ((tmp_172_fu_2683_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln151_5_fu_2703_p2 = ((trunc_ln151_2_fu_2693_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln151_6_fu_2746_p2 = ((tmp_174_fu_2732_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln151_7_fu_2752_p2 = ((trunc_ln151_3_fu_2742_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln151_8_fu_2795_p2 = ((tmp_176_fu_2781_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln151_9_fu_2801_p2 = ((trunc_ln151_4_fu_2791_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln151_fu_2599_p2 = ((tmp_168_fu_2585_p4 != 8'd255) ? 1'b1 : 1'b0);

assign or_ln151_10_fu_3101_p2 = (icmp_ln151_21_fu_3095_p2 | icmp_ln151_20_fu_3089_p2);

assign or_ln151_11_fu_3150_p2 = (icmp_ln151_23_fu_3144_p2 | icmp_ln151_22_fu_3138_p2);

assign or_ln151_12_fu_3199_p2 = (icmp_ln151_25_fu_3193_p2 | icmp_ln151_24_fu_3187_p2);

assign or_ln151_1_fu_2660_p2 = (icmp_ln151_3_fu_2654_p2 | icmp_ln151_2_fu_2648_p2);

assign or_ln151_2_fu_2709_p2 = (icmp_ln151_5_fu_2703_p2 | icmp_ln151_4_fu_2697_p2);

assign or_ln151_3_fu_2758_p2 = (icmp_ln151_7_fu_2752_p2 | icmp_ln151_6_fu_2746_p2);

assign or_ln151_4_fu_2807_p2 = (icmp_ln151_9_fu_2801_p2 | icmp_ln151_8_fu_2795_p2);

assign or_ln151_5_fu_2856_p2 = (icmp_ln151_11_fu_2850_p2 | icmp_ln151_10_fu_2844_p2);

assign or_ln151_6_fu_2905_p2 = (icmp_ln151_13_fu_2899_p2 | icmp_ln151_12_fu_2893_p2);

assign or_ln151_7_fu_2954_p2 = (icmp_ln151_15_fu_2948_p2 | icmp_ln151_14_fu_2942_p2);

assign or_ln151_8_fu_3003_p2 = (icmp_ln151_17_fu_2997_p2 | icmp_ln151_16_fu_2991_p2);

assign or_ln151_9_fu_3052_p2 = (icmp_ln151_19_fu_3046_p2 | icmp_ln151_18_fu_3040_p2);

assign or_ln151_fu_2611_p2 = (icmp_ln151_fu_2599_p2 | icmp_ln151_1_fu_2605_p2);

assign out_img_0_address0 = zext_ln148_fu_2565_p1;

assign out_img_0_ce0 = out_img_0_ce0_local;

assign out_img_0_d0 = select_ln151_fu_2623_p3;

assign out_img_0_we0 = out_img_0_we0_local;

assign out_img_10_address0 = zext_ln148_fu_2565_p1;

assign out_img_10_ce0 = out_img_10_ce0_local;

assign out_img_10_d0 = select_ln151_10_fu_3113_p3;

assign out_img_10_we0 = out_img_10_we0_local;

assign out_img_11_address0 = zext_ln148_fu_2565_p1;

assign out_img_11_ce0 = out_img_11_ce0_local;

assign out_img_11_d0 = select_ln151_11_fu_3162_p3;

assign out_img_11_we0 = out_img_11_we0_local;

assign out_img_12_address0 = zext_ln148_fu_2565_p1;

assign out_img_12_ce0 = out_img_12_ce0_local;

assign out_img_12_d0 = select_ln151_12_fu_3211_p3;

assign out_img_12_we0 = out_img_12_we0_local;

assign out_img_1_address0 = zext_ln148_fu_2565_p1;

assign out_img_1_ce0 = out_img_1_ce0_local;

assign out_img_1_d0 = select_ln151_1_fu_2672_p3;

assign out_img_1_we0 = out_img_1_we0_local;

assign out_img_2_address0 = zext_ln148_fu_2565_p1;

assign out_img_2_ce0 = out_img_2_ce0_local;

assign out_img_2_d0 = select_ln151_2_fu_2721_p3;

assign out_img_2_we0 = out_img_2_we0_local;

assign out_img_3_address0 = zext_ln148_fu_2565_p1;

assign out_img_3_ce0 = out_img_3_ce0_local;

assign out_img_3_d0 = select_ln151_3_fu_2770_p3;

assign out_img_3_we0 = out_img_3_we0_local;

assign out_img_4_address0 = zext_ln148_fu_2565_p1;

assign out_img_4_ce0 = out_img_4_ce0_local;

assign out_img_4_d0 = select_ln151_4_fu_2819_p3;

assign out_img_4_we0 = out_img_4_we0_local;

assign out_img_5_address0 = zext_ln148_fu_2565_p1;

assign out_img_5_ce0 = out_img_5_ce0_local;

assign out_img_5_d0 = select_ln151_5_fu_2868_p3;

assign out_img_5_we0 = out_img_5_we0_local;

assign out_img_6_address0 = zext_ln148_fu_2565_p1;

assign out_img_6_ce0 = out_img_6_ce0_local;

assign out_img_6_d0 = select_ln151_6_fu_2917_p3;

assign out_img_6_we0 = out_img_6_we0_local;

assign out_img_7_address0 = zext_ln148_fu_2565_p1;

assign out_img_7_ce0 = out_img_7_ce0_local;

assign out_img_7_d0 = select_ln151_7_fu_2966_p3;

assign out_img_7_we0 = out_img_7_we0_local;

assign out_img_8_address0 = zext_ln148_fu_2565_p1;

assign out_img_8_ce0 = out_img_8_ce0_local;

assign out_img_8_d0 = select_ln151_8_fu_3015_p3;

assign out_img_8_we0 = out_img_8_we0_local;

assign out_img_9_address0 = zext_ln148_fu_2565_p1;

assign out_img_9_ce0 = out_img_9_ce0_local;

assign out_img_9_d0 = select_ln151_9_fu_3064_p3;

assign out_img_9_we0 = out_img_9_we0_local;

assign select_ln151_10_fu_3113_p3 = ((and_ln151_10_fu_3107_p2[0:0] == 1'b1) ? out_59_reg_3392_pp0_iter5_reg : 32'd0);

assign select_ln151_11_fu_3162_p3 = ((and_ln151_11_fu_3156_p2[0:0] == 1'b1) ? out_60_reg_3399_pp0_iter5_reg : 32'd0);

assign select_ln151_12_fu_3211_p3 = ((and_ln151_12_fu_3205_p2[0:0] == 1'b1) ? out_61_reg_3406_pp0_iter5_reg : 32'd0);

assign select_ln151_1_fu_2672_p3 = ((and_ln151_1_fu_2666_p2[0:0] == 1'b1) ? out_50_reg_3329_pp0_iter5_reg : 32'd0);

assign select_ln151_2_fu_2721_p3 = ((and_ln151_2_fu_2715_p2[0:0] == 1'b1) ? out_51_reg_3336_pp0_iter5_reg : 32'd0);

assign select_ln151_3_fu_2770_p3 = ((and_ln151_3_fu_2764_p2[0:0] == 1'b1) ? out_52_reg_3343_pp0_iter5_reg : 32'd0);

assign select_ln151_4_fu_2819_p3 = ((and_ln151_4_fu_2813_p2[0:0] == 1'b1) ? out_53_reg_3350_pp0_iter5_reg : 32'd0);

assign select_ln151_5_fu_2868_p3 = ((and_ln151_5_fu_2862_p2[0:0] == 1'b1) ? out_54_reg_3357_pp0_iter5_reg : 32'd0);

assign select_ln151_6_fu_2917_p3 = ((and_ln151_6_fu_2911_p2[0:0] == 1'b1) ? out_55_reg_3364_pp0_iter5_reg : 32'd0);

assign select_ln151_7_fu_2966_p3 = ((and_ln151_7_fu_2960_p2[0:0] == 1'b1) ? out_56_reg_3371_pp0_iter5_reg : 32'd0);

assign select_ln151_8_fu_3015_p3 = ((and_ln151_8_fu_3009_p2[0:0] == 1'b1) ? out_57_reg_3378_pp0_iter5_reg : 32'd0);

assign select_ln151_9_fu_3064_p3 = ((and_ln151_9_fu_3058_p2[0:0] == 1'b1) ? out_58_reg_3385_pp0_iter5_reg : 32'd0);

assign select_ln151_fu_2623_p3 = ((and_ln151_fu_2617_p2[0:0] == 1'b1) ? out_reg_3322_pp0_iter5_reg : 32'd0);

assign tmp_103_fu_1892_p27 = 'bx;

assign tmp_104_fu_1952_p27 = 'bx;

assign tmp_105_fu_2012_p27 = 'bx;

assign tmp_106_fu_2072_p27 = 'bx;

assign tmp_107_fu_2132_p27 = 'bx;

assign tmp_108_fu_2192_p27 = 'bx;

assign tmp_109_fu_2252_p27 = 'bx;

assign tmp_110_fu_2312_p27 = 'bx;

assign tmp_111_fu_2372_p27 = 'bx;

assign tmp_112_fu_2432_p27 = 'bx;

assign tmp_113_fu_2492_p27 = 'bx;

assign tmp_168_fu_2585_p4 = {{bitcast_ln151_fu_2582_p1[30:23]}};

assign tmp_170_fu_2634_p4 = {{bitcast_ln151_1_fu_2631_p1[30:23]}};

assign tmp_172_fu_2683_p4 = {{bitcast_ln151_2_fu_2680_p1[30:23]}};

assign tmp_174_fu_2732_p4 = {{bitcast_ln151_3_fu_2729_p1[30:23]}};

assign tmp_176_fu_2781_p4 = {{bitcast_ln151_4_fu_2778_p1[30:23]}};

assign tmp_178_fu_2830_p4 = {{bitcast_ln151_5_fu_2827_p1[30:23]}};

assign tmp_180_fu_2879_p4 = {{bitcast_ln151_6_fu_2876_p1[30:23]}};

assign tmp_182_fu_2928_p4 = {{bitcast_ln151_7_fu_2925_p1[30:23]}};

assign tmp_184_fu_2977_p4 = {{bitcast_ln151_8_fu_2974_p1[30:23]}};

assign tmp_186_fu_3026_p4 = {{bitcast_ln151_9_fu_3023_p1[30:23]}};

assign tmp_188_fu_3075_p4 = {{bitcast_ln151_10_fu_3072_p1[30:23]}};

assign tmp_190_fu_3124_p4 = {{bitcast_ln151_11_fu_3121_p1[30:23]}};

assign tmp_192_fu_3173_p4 = {{bitcast_ln151_12_fu_3170_p1[30:23]}};

assign tmp_fu_1772_p27 = 'bx;

assign tmp_s_fu_1832_p27 = 'bx;

assign trunc_ln151_10_fu_3085_p1 = bitcast_ln151_10_fu_3072_p1[22:0];

assign trunc_ln151_11_fu_3134_p1 = bitcast_ln151_11_fu_3121_p1[22:0];

assign trunc_ln151_12_fu_3183_p1 = bitcast_ln151_12_fu_3170_p1[22:0];

assign trunc_ln151_1_fu_2644_p1 = bitcast_ln151_1_fu_2631_p1[22:0];

assign trunc_ln151_2_fu_2693_p1 = bitcast_ln151_2_fu_2680_p1[22:0];

assign trunc_ln151_3_fu_2742_p1 = bitcast_ln151_3_fu_2729_p1[22:0];

assign trunc_ln151_4_fu_2791_p1 = bitcast_ln151_4_fu_2778_p1[22:0];

assign trunc_ln151_5_fu_2840_p1 = bitcast_ln151_5_fu_2827_p1[22:0];

assign trunc_ln151_6_fu_2889_p1 = bitcast_ln151_6_fu_2876_p1[22:0];

assign trunc_ln151_7_fu_2938_p1 = bitcast_ln151_7_fu_2925_p1[22:0];

assign trunc_ln151_8_fu_2987_p1 = bitcast_ln151_8_fu_2974_p1[22:0];

assign trunc_ln151_9_fu_3036_p1 = bitcast_ln151_9_fu_3023_p1[22:0];

assign trunc_ln151_fu_2595_p1 = bitcast_ln151_fu_2582_p1[22:0];

assign zext_ln144_fu_2557_p1 = i_9_reg_3248_pp0_iter5_reg;

assign zext_ln148_fu_2565_p1 = add_ln148_fu_2560_p2;

endmodule //NN_conv3_Pipeline_M1
