// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module NN_pool2_Pipeline_L4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        empty,
        mux_case_26190,
        mux_case_24183,
        mux_case_22176,
        mux_case_20169,
        mux_case_18162,
        mux_case_16155,
        mux_case_14148,
        mux_case_12141,
        mux_case_10134,
        mux_case_8127,
        mux_case_6120,
        mux_case_4113,
        mux_case_2106,
        mux_case_2599,
        mux_case_2392,
        mux_case_2185,
        mux_case_1978,
        mux_case_1771,
        mux_case_1564,
        mux_case_1357,
        mux_case_1150,
        mux_case_943,
        mux_case_736,
        mux_case_529,
        mux_case_322,
        mux_case_115,
        inp_img_0_load,
        inp_img_1_load,
        inp_img_2_load,
        inp_img_3_load,
        inp_img_4_load,
        inp_img_5_load,
        inp_img_6_load,
        inp_img_7_load,
        inp_img_8_load,
        inp_img_9_load,
        inp_img_10_load,
        inp_img_11_load,
        inp_img_12_load,
        inp_img_13_load,
        inp_img_14_load,
        inp_img_15_load,
        inp_img_16_load,
        inp_img_17_load,
        inp_img_18_load,
        inp_img_19_load,
        inp_img_20_load,
        inp_img_21_load,
        inp_img_22_load,
        inp_img_23_load,
        inp_img_24_load,
        inp_img_25_load,
        inp_img_26_load,
        p_out,
        p_out_ap_vld,
        mux_case_26189_out,
        mux_case_26189_out_ap_vld,
        mux_case_24182_out,
        mux_case_24182_out_ap_vld,
        mux_case_22175_out,
        mux_case_22175_out_ap_vld,
        mux_case_20168_out,
        mux_case_20168_out_ap_vld,
        mux_case_18161_out,
        mux_case_18161_out_ap_vld,
        mux_case_16154_out,
        mux_case_16154_out_ap_vld,
        mux_case_14147_out,
        mux_case_14147_out_ap_vld,
        mux_case_12140_out,
        mux_case_12140_out_ap_vld,
        mux_case_10133_out,
        mux_case_10133_out_ap_vld,
        mux_case_8126_out,
        mux_case_8126_out_ap_vld,
        mux_case_6119_out,
        mux_case_6119_out_ap_vld,
        mux_case_4112_out,
        mux_case_4112_out_ap_vld,
        mux_case_2105_out,
        mux_case_2105_out_ap_vld,
        mux_case_2598_out,
        mux_case_2598_out_ap_vld,
        mux_case_2391_out,
        mux_case_2391_out_ap_vld,
        mux_case_2184_out,
        mux_case_2184_out_ap_vld,
        mux_case_1977_out,
        mux_case_1977_out_ap_vld,
        mux_case_1770_out,
        mux_case_1770_out_ap_vld,
        mux_case_1563_out,
        mux_case_1563_out_ap_vld,
        mux_case_1356_out,
        mux_case_1356_out_ap_vld,
        mux_case_1149_out,
        mux_case_1149_out_ap_vld,
        mux_case_942_out,
        mux_case_942_out_ap_vld,
        mux_case_735_out,
        mux_case_735_out_ap_vld,
        mux_case_528_out,
        mux_case_528_out_ap_vld,
        mux_case_321_out,
        mux_case_321_out_ap_vld,
        mux_case_114_out,
        mux_case_114_out_ap_vld
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] empty;
input  [31:0] mux_case_26190;
input  [31:0] mux_case_24183;
input  [31:0] mux_case_22176;
input  [31:0] mux_case_20169;
input  [31:0] mux_case_18162;
input  [31:0] mux_case_16155;
input  [31:0] mux_case_14148;
input  [31:0] mux_case_12141;
input  [31:0] mux_case_10134;
input  [31:0] mux_case_8127;
input  [31:0] mux_case_6120;
input  [31:0] mux_case_4113;
input  [31:0] mux_case_2106;
input  [31:0] mux_case_2599;
input  [31:0] mux_case_2392;
input  [31:0] mux_case_2185;
input  [31:0] mux_case_1978;
input  [31:0] mux_case_1771;
input  [31:0] mux_case_1564;
input  [31:0] mux_case_1357;
input  [31:0] mux_case_1150;
input  [31:0] mux_case_943;
input  [31:0] mux_case_736;
input  [31:0] mux_case_529;
input  [31:0] mux_case_322;
input  [31:0] mux_case_115;
input  [31:0] inp_img_0_load;
input  [31:0] inp_img_1_load;
input  [31:0] inp_img_2_load;
input  [31:0] inp_img_3_load;
input  [31:0] inp_img_4_load;
input  [31:0] inp_img_5_load;
input  [31:0] inp_img_6_load;
input  [31:0] inp_img_7_load;
input  [31:0] inp_img_8_load;
input  [31:0] inp_img_9_load;
input  [31:0] inp_img_10_load;
input  [31:0] inp_img_11_load;
input  [31:0] inp_img_12_load;
input  [31:0] inp_img_13_load;
input  [31:0] inp_img_14_load;
input  [31:0] inp_img_15_load;
input  [31:0] inp_img_16_load;
input  [31:0] inp_img_17_load;
input  [31:0] inp_img_18_load;
input  [31:0] inp_img_19_load;
input  [31:0] inp_img_20_load;
input  [31:0] inp_img_21_load;
input  [31:0] inp_img_22_load;
input  [31:0] inp_img_23_load;
input  [31:0] inp_img_24_load;
input  [31:0] inp_img_25_load;
input  [31:0] inp_img_26_load;
output  [31:0] p_out;
output   p_out_ap_vld;
output  [31:0] mux_case_26189_out;
output   mux_case_26189_out_ap_vld;
output  [31:0] mux_case_24182_out;
output   mux_case_24182_out_ap_vld;
output  [31:0] mux_case_22175_out;
output   mux_case_22175_out_ap_vld;
output  [31:0] mux_case_20168_out;
output   mux_case_20168_out_ap_vld;
output  [31:0] mux_case_18161_out;
output   mux_case_18161_out_ap_vld;
output  [31:0] mux_case_16154_out;
output   mux_case_16154_out_ap_vld;
output  [31:0] mux_case_14147_out;
output   mux_case_14147_out_ap_vld;
output  [31:0] mux_case_12140_out;
output   mux_case_12140_out_ap_vld;
output  [31:0] mux_case_10133_out;
output   mux_case_10133_out_ap_vld;
output  [31:0] mux_case_8126_out;
output   mux_case_8126_out_ap_vld;
output  [31:0] mux_case_6119_out;
output   mux_case_6119_out_ap_vld;
output  [31:0] mux_case_4112_out;
output   mux_case_4112_out_ap_vld;
output  [31:0] mux_case_2105_out;
output   mux_case_2105_out_ap_vld;
output  [31:0] mux_case_2598_out;
output   mux_case_2598_out_ap_vld;
output  [31:0] mux_case_2391_out;
output   mux_case_2391_out_ap_vld;
output  [31:0] mux_case_2184_out;
output   mux_case_2184_out_ap_vld;
output  [31:0] mux_case_1977_out;
output   mux_case_1977_out_ap_vld;
output  [31:0] mux_case_1770_out;
output   mux_case_1770_out_ap_vld;
output  [31:0] mux_case_1563_out;
output   mux_case_1563_out_ap_vld;
output  [31:0] mux_case_1356_out;
output   mux_case_1356_out_ap_vld;
output  [31:0] mux_case_1149_out;
output   mux_case_1149_out_ap_vld;
output  [31:0] mux_case_942_out;
output   mux_case_942_out_ap_vld;
output  [31:0] mux_case_735_out;
output   mux_case_735_out_ap_vld;
output  [31:0] mux_case_528_out;
output   mux_case_528_out_ap_vld;
output  [31:0] mux_case_321_out;
output   mux_case_321_out_ap_vld;
output  [31:0] mux_case_114_out;
output   mux_case_114_out_ap_vld;

reg ap_idle;
reg p_out_ap_vld;
reg mux_case_26189_out_ap_vld;
reg mux_case_24182_out_ap_vld;
reg mux_case_22175_out_ap_vld;
reg mux_case_20168_out_ap_vld;
reg mux_case_18161_out_ap_vld;
reg mux_case_16154_out_ap_vld;
reg mux_case_14147_out_ap_vld;
reg mux_case_12140_out_ap_vld;
reg mux_case_10133_out_ap_vld;
reg mux_case_8126_out_ap_vld;
reg mux_case_6119_out_ap_vld;
reg mux_case_4112_out_ap_vld;
reg mux_case_2105_out_ap_vld;
reg mux_case_2598_out_ap_vld;
reg mux_case_2391_out_ap_vld;
reg mux_case_2184_out_ap_vld;
reg mux_case_1977_out_ap_vld;
reg mux_case_1770_out_ap_vld;
reg mux_case_1563_out_ap_vld;
reg mux_case_1356_out_ap_vld;
reg mux_case_1149_out_ap_vld;
reg mux_case_942_out_ap_vld;
reg mux_case_735_out_ap_vld;
reg mux_case_528_out_ap_vld;
reg mux_case_321_out_ap_vld;
reg mux_case_114_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln57_fu_1012_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [4:0] j_fu_244;
wire   [4:0] add_ln57_fu_1018_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_j_2;
wire   [4:0] j_2_load_fu_1009_p1;
reg   [31:0] mux_case_114_fu_248;
wire   [31:0] line_buffer_2D_fu_1024_p57;
reg   [31:0] mux_case_321_fu_252;
reg   [31:0] mux_case_528_fu_256;
reg   [31:0] mux_case_735_fu_260;
reg   [31:0] mux_case_942_fu_264;
reg   [31:0] mux_case_1149_fu_268;
reg   [31:0] mux_case_1356_fu_272;
reg   [31:0] mux_case_1563_fu_276;
reg   [31:0] mux_case_1770_fu_280;
reg   [31:0] mux_case_1977_fu_284;
reg   [31:0] mux_case_2184_fu_288;
reg   [31:0] mux_case_2391_fu_292;
reg   [31:0] mux_case_2598_fu_296;
reg   [31:0] mux_case_2105_fu_300;
reg   [31:0] mux_case_4112_fu_304;
reg   [31:0] mux_case_6119_fu_308;
reg   [31:0] mux_case_8126_fu_312;
reg   [31:0] mux_case_10133_fu_316;
reg   [31:0] mux_case_12140_fu_320;
reg   [31:0] mux_case_14147_fu_324;
reg   [31:0] mux_case_16154_fu_328;
reg   [31:0] mux_case_18161_fu_332;
reg   [31:0] mux_case_20168_fu_336;
reg   [31:0] mux_case_22175_fu_340;
reg   [31:0] mux_case_24182_fu_344;
reg   [31:0] mux_case_26189_fu_348;
reg   [31:0] empty_95_fu_352;
wire   [31:0] line_buffer_2D_fu_1024_p55;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
reg    ap_condition_378;
wire   [4:0] line_buffer_2D_fu_1024_p1;
wire   [4:0] line_buffer_2D_fu_1024_p3;
wire   [4:0] line_buffer_2D_fu_1024_p5;
wire   [4:0] line_buffer_2D_fu_1024_p7;
wire   [4:0] line_buffer_2D_fu_1024_p9;
wire   [4:0] line_buffer_2D_fu_1024_p11;
wire   [4:0] line_buffer_2D_fu_1024_p13;
wire   [4:0] line_buffer_2D_fu_1024_p15;
wire   [4:0] line_buffer_2D_fu_1024_p17;
wire   [4:0] line_buffer_2D_fu_1024_p19;
wire   [4:0] line_buffer_2D_fu_1024_p21;
wire   [4:0] line_buffer_2D_fu_1024_p23;
wire   [4:0] line_buffer_2D_fu_1024_p25;
wire   [4:0] line_buffer_2D_fu_1024_p27;
wire   [4:0] line_buffer_2D_fu_1024_p29;
wire   [4:0] line_buffer_2D_fu_1024_p31;
wire  signed [4:0] line_buffer_2D_fu_1024_p33;
wire  signed [4:0] line_buffer_2D_fu_1024_p35;
wire  signed [4:0] line_buffer_2D_fu_1024_p37;
wire  signed [4:0] line_buffer_2D_fu_1024_p39;
wire  signed [4:0] line_buffer_2D_fu_1024_p41;
wire  signed [4:0] line_buffer_2D_fu_1024_p43;
wire  signed [4:0] line_buffer_2D_fu_1024_p45;
wire  signed [4:0] line_buffer_2D_fu_1024_p47;
wire  signed [4:0] line_buffer_2D_fu_1024_p49;
wire  signed [4:0] line_buffer_2D_fu_1024_p51;
wire  signed [4:0] line_buffer_2D_fu_1024_p53;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 j_fu_244 = 5'd0;
#0 mux_case_114_fu_248 = 32'd0;
#0 mux_case_321_fu_252 = 32'd0;
#0 mux_case_528_fu_256 = 32'd0;
#0 mux_case_735_fu_260 = 32'd0;
#0 mux_case_942_fu_264 = 32'd0;
#0 mux_case_1149_fu_268 = 32'd0;
#0 mux_case_1356_fu_272 = 32'd0;
#0 mux_case_1563_fu_276 = 32'd0;
#0 mux_case_1770_fu_280 = 32'd0;
#0 mux_case_1977_fu_284 = 32'd0;
#0 mux_case_2184_fu_288 = 32'd0;
#0 mux_case_2391_fu_292 = 32'd0;
#0 mux_case_2598_fu_296 = 32'd0;
#0 mux_case_2105_fu_300 = 32'd0;
#0 mux_case_4112_fu_304 = 32'd0;
#0 mux_case_6119_fu_308 = 32'd0;
#0 mux_case_8126_fu_312 = 32'd0;
#0 mux_case_10133_fu_316 = 32'd0;
#0 mux_case_12140_fu_320 = 32'd0;
#0 mux_case_14147_fu_324 = 32'd0;
#0 mux_case_16154_fu_328 = 32'd0;
#0 mux_case_18161_fu_332 = 32'd0;
#0 mux_case_20168_fu_336 = 32'd0;
#0 mux_case_22175_fu_340 = 32'd0;
#0 mux_case_24182_fu_344 = 32'd0;
#0 mux_case_26189_fu_348 = 32'd0;
#0 empty_95_fu_352 = 32'd0;
#0 ap_done_reg = 1'b0;
end

(* dissolve_hierarchy = "yes" *) NN_sparsemux_55_5_32_1_1_x #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 5'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 5'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 5'h2 ),
    .din2_WIDTH( 32 ),
    .CASE3( 5'h3 ),
    .din3_WIDTH( 32 ),
    .CASE4( 5'h4 ),
    .din4_WIDTH( 32 ),
    .CASE5( 5'h5 ),
    .din5_WIDTH( 32 ),
    .CASE6( 5'h6 ),
    .din6_WIDTH( 32 ),
    .CASE7( 5'h7 ),
    .din7_WIDTH( 32 ),
    .CASE8( 5'h8 ),
    .din8_WIDTH( 32 ),
    .CASE9( 5'h9 ),
    .din9_WIDTH( 32 ),
    .CASE10( 5'hA ),
    .din10_WIDTH( 32 ),
    .CASE11( 5'hB ),
    .din11_WIDTH( 32 ),
    .CASE12( 5'hC ),
    .din12_WIDTH( 32 ),
    .CASE13( 5'hD ),
    .din13_WIDTH( 32 ),
    .CASE14( 5'hE ),
    .din14_WIDTH( 32 ),
    .CASE15( 5'hF ),
    .din15_WIDTH( 32 ),
    .CASE16( 5'h10 ),
    .din16_WIDTH( 32 ),
    .CASE17( 5'h11 ),
    .din17_WIDTH( 32 ),
    .CASE18( 5'h12 ),
    .din18_WIDTH( 32 ),
    .CASE19( 5'h13 ),
    .din19_WIDTH( 32 ),
    .CASE20( 5'h14 ),
    .din20_WIDTH( 32 ),
    .CASE21( 5'h15 ),
    .din21_WIDTH( 32 ),
    .CASE22( 5'h16 ),
    .din22_WIDTH( 32 ),
    .CASE23( 5'h17 ),
    .din23_WIDTH( 32 ),
    .CASE24( 5'h18 ),
    .din24_WIDTH( 32 ),
    .CASE25( 5'h19 ),
    .din25_WIDTH( 32 ),
    .CASE26( 5'h1A ),
    .din26_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
sparsemux_55_5_32_1_1_x_U10949(
    .din0(inp_img_0_load),
    .din1(inp_img_1_load),
    .din2(inp_img_2_load),
    .din3(inp_img_3_load),
    .din4(inp_img_4_load),
    .din5(inp_img_5_load),
    .din6(inp_img_6_load),
    .din7(inp_img_7_load),
    .din8(inp_img_8_load),
    .din9(inp_img_9_load),
    .din10(inp_img_10_load),
    .din11(inp_img_11_load),
    .din12(inp_img_12_load),
    .din13(inp_img_13_load),
    .din14(inp_img_14_load),
    .din15(inp_img_15_load),
    .din16(inp_img_16_load),
    .din17(inp_img_17_load),
    .din18(inp_img_18_load),
    .din19(inp_img_19_load),
    .din20(inp_img_20_load),
    .din21(inp_img_21_load),
    .din22(inp_img_22_load),
    .din23(inp_img_23_load),
    .din24(inp_img_24_load),
    .din25(inp_img_25_load),
    .din26(inp_img_26_load),
    .def(line_buffer_2D_fu_1024_p55),
    .sel(ap_sig_allocacmp_j_2),
    .dout(line_buffer_2D_fu_1024_p57)
);

NN_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd0))) begin
            empty_95_fu_352 <= line_buffer_2D_fu_1024_p57;
        end else if ((ap_loop_init == 1'b1)) begin
            empty_95_fu_352 <= empty;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((icmp_ln57_fu_1012_p2 == 1'd0)) begin
            j_fu_244 <= add_ln57_fu_1018_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_244 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd10))) begin
            mux_case_10133_fu_316 <= line_buffer_2D_fu_1024_p57;
        end else if ((ap_loop_init == 1'b1)) begin
            mux_case_10133_fu_316 <= mux_case_10134;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd11))) begin
            mux_case_1149_fu_268 <= line_buffer_2D_fu_1024_p57;
        end else if ((ap_loop_init == 1'b1)) begin
            mux_case_1149_fu_268 <= mux_case_1150;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd1))) begin
            mux_case_114_fu_248 <= line_buffer_2D_fu_1024_p57;
        end else if ((ap_loop_init == 1'b1)) begin
            mux_case_114_fu_248 <= mux_case_115;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd12))) begin
            mux_case_12140_fu_320 <= line_buffer_2D_fu_1024_p57;
        end else if ((ap_loop_init == 1'b1)) begin
            mux_case_12140_fu_320 <= mux_case_12141;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd13))) begin
            mux_case_1356_fu_272 <= line_buffer_2D_fu_1024_p57;
        end else if ((ap_loop_init == 1'b1)) begin
            mux_case_1356_fu_272 <= mux_case_1357;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd14))) begin
            mux_case_14147_fu_324 <= line_buffer_2D_fu_1024_p57;
        end else if ((ap_loop_init == 1'b1)) begin
            mux_case_14147_fu_324 <= mux_case_14148;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd15))) begin
            mux_case_1563_fu_276 <= line_buffer_2D_fu_1024_p57;
        end else if ((ap_loop_init == 1'b1)) begin
            mux_case_1563_fu_276 <= mux_case_1564;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd16))) begin
            mux_case_16154_fu_328 <= line_buffer_2D_fu_1024_p57;
        end else if ((ap_loop_init == 1'b1)) begin
            mux_case_16154_fu_328 <= mux_case_16155;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd17))) begin
            mux_case_1770_fu_280 <= line_buffer_2D_fu_1024_p57;
        end else if ((ap_loop_init == 1'b1)) begin
            mux_case_1770_fu_280 <= mux_case_1771;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd18))) begin
            mux_case_18161_fu_332 <= line_buffer_2D_fu_1024_p57;
        end else if ((ap_loop_init == 1'b1)) begin
            mux_case_18161_fu_332 <= mux_case_18162;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd19))) begin
            mux_case_1977_fu_284 <= line_buffer_2D_fu_1024_p57;
        end else if ((ap_loop_init == 1'b1)) begin
            mux_case_1977_fu_284 <= mux_case_1978;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd20))) begin
            mux_case_20168_fu_336 <= line_buffer_2D_fu_1024_p57;
        end else if ((ap_loop_init == 1'b1)) begin
            mux_case_20168_fu_336 <= mux_case_20169;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd2))) begin
            mux_case_2105_fu_300 <= line_buffer_2D_fu_1024_p57;
        end else if ((ap_loop_init == 1'b1)) begin
            mux_case_2105_fu_300 <= mux_case_2106;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd21))) begin
            mux_case_2184_fu_288 <= line_buffer_2D_fu_1024_p57;
        end else if ((ap_loop_init == 1'b1)) begin
            mux_case_2184_fu_288 <= mux_case_2185;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd22))) begin
            mux_case_22175_fu_340 <= line_buffer_2D_fu_1024_p57;
        end else if ((ap_loop_init == 1'b1)) begin
            mux_case_22175_fu_340 <= mux_case_22176;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd23))) begin
            mux_case_2391_fu_292 <= line_buffer_2D_fu_1024_p57;
        end else if ((ap_loop_init == 1'b1)) begin
            mux_case_2391_fu_292 <= mux_case_2392;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd24))) begin
            mux_case_24182_fu_344 <= line_buffer_2D_fu_1024_p57;
        end else if ((ap_loop_init == 1'b1)) begin
            mux_case_24182_fu_344 <= mux_case_24183;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd25))) begin
            mux_case_2598_fu_296 <= line_buffer_2D_fu_1024_p57;
        end else if ((ap_loop_init == 1'b1)) begin
            mux_case_2598_fu_296 <= mux_case_2599;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((1'b1 == ap_condition_378)) begin
            mux_case_26189_fu_348 <= line_buffer_2D_fu_1024_p57;
        end else if ((ap_loop_init == 1'b1)) begin
            mux_case_26189_fu_348 <= mux_case_26190;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd3))) begin
            mux_case_321_fu_252 <= line_buffer_2D_fu_1024_p57;
        end else if ((ap_loop_init == 1'b1)) begin
            mux_case_321_fu_252 <= mux_case_322;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd4))) begin
            mux_case_4112_fu_304 <= line_buffer_2D_fu_1024_p57;
        end else if ((ap_loop_init == 1'b1)) begin
            mux_case_4112_fu_304 <= mux_case_4113;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd5))) begin
            mux_case_528_fu_256 <= line_buffer_2D_fu_1024_p57;
        end else if ((ap_loop_init == 1'b1)) begin
            mux_case_528_fu_256 <= mux_case_529;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd6))) begin
            mux_case_6119_fu_308 <= line_buffer_2D_fu_1024_p57;
        end else if ((ap_loop_init == 1'b1)) begin
            mux_case_6119_fu_308 <= mux_case_6120;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd7))) begin
            mux_case_735_fu_260 <= line_buffer_2D_fu_1024_p57;
        end else if ((ap_loop_init == 1'b1)) begin
            mux_case_735_fu_260 <= mux_case_736;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd8))) begin
            mux_case_8126_fu_312 <= line_buffer_2D_fu_1024_p57;
        end else if ((ap_loop_init == 1'b1)) begin
            mux_case_8126_fu_312 <= mux_case_8127;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        if (((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd9))) begin
            mux_case_942_fu_264 <= line_buffer_2D_fu_1024_p57;
        end else if ((ap_loop_init == 1'b1)) begin
            mux_case_942_fu_264 <= mux_case_943;
        end
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1_pp0_stage0_iter0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_j_2 = 5'd0;
    end else begin
        ap_sig_allocacmp_j_2 = j_fu_244;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_10133_out_ap_vld = 1'b1;
    end else begin
        mux_case_10133_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_1149_out_ap_vld = 1'b1;
    end else begin
        mux_case_1149_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_114_out_ap_vld = 1'b1;
    end else begin
        mux_case_114_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_12140_out_ap_vld = 1'b1;
    end else begin
        mux_case_12140_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_1356_out_ap_vld = 1'b1;
    end else begin
        mux_case_1356_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_14147_out_ap_vld = 1'b1;
    end else begin
        mux_case_14147_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_1563_out_ap_vld = 1'b1;
    end else begin
        mux_case_1563_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_16154_out_ap_vld = 1'b1;
    end else begin
        mux_case_16154_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_1770_out_ap_vld = 1'b1;
    end else begin
        mux_case_1770_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_18161_out_ap_vld = 1'b1;
    end else begin
        mux_case_18161_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_1977_out_ap_vld = 1'b1;
    end else begin
        mux_case_1977_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_20168_out_ap_vld = 1'b1;
    end else begin
        mux_case_20168_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_2105_out_ap_vld = 1'b1;
    end else begin
        mux_case_2105_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_2184_out_ap_vld = 1'b1;
    end else begin
        mux_case_2184_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_22175_out_ap_vld = 1'b1;
    end else begin
        mux_case_22175_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_2391_out_ap_vld = 1'b1;
    end else begin
        mux_case_2391_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_24182_out_ap_vld = 1'b1;
    end else begin
        mux_case_24182_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_2598_out_ap_vld = 1'b1;
    end else begin
        mux_case_2598_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_26189_out_ap_vld = 1'b1;
    end else begin
        mux_case_26189_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_321_out_ap_vld = 1'b1;
    end else begin
        mux_case_321_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_4112_out_ap_vld = 1'b1;
    end else begin
        mux_case_4112_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_528_out_ap_vld = 1'b1;
    end else begin
        mux_case_528_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_6119_out_ap_vld = 1'b1;
    end else begin
        mux_case_6119_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_735_out_ap_vld = 1'b1;
    end else begin
        mux_case_735_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_8126_out_ap_vld = 1'b1;
    end else begin
        mux_case_8126_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_942_out_ap_vld = 1'b1;
    end else begin
        mux_case_942_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (icmp_ln57_fu_1012_p2 == 1'd1) & (1'b0 == ap_block_state1_pp0_stage0_iter0) & (1'b1 == ap_CS_fsm_state1))) begin
        p_out_ap_vld = 1'b1;
    end else begin
        p_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln57_fu_1018_p2 = (ap_sig_allocacmp_j_2 + 5'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

always @ (*) begin
    ap_condition_378 = ((((((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd30)) | ((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd31))) | ((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd29))) | ((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd28))) | ((icmp_ln57_fu_1012_p2 == 1'd0) & (j_2_load_fu_1009_p1 == 5'd26)));
end

assign ap_done = ap_done_sig;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign icmp_ln57_fu_1012_p2 = ((ap_sig_allocacmp_j_2 == 5'd27) ? 1'b1 : 1'b0);

assign j_2_load_fu_1009_p1 = ap_sig_allocacmp_j_2;

assign line_buffer_2D_fu_1024_p55 = 'bx;

assign mux_case_10133_out = mux_case_10133_fu_316;

assign mux_case_1149_out = mux_case_1149_fu_268;

assign mux_case_114_out = mux_case_114_fu_248;

assign mux_case_12140_out = mux_case_12140_fu_320;

assign mux_case_1356_out = mux_case_1356_fu_272;

assign mux_case_14147_out = mux_case_14147_fu_324;

assign mux_case_1563_out = mux_case_1563_fu_276;

assign mux_case_16154_out = mux_case_16154_fu_328;

assign mux_case_1770_out = mux_case_1770_fu_280;

assign mux_case_18161_out = mux_case_18161_fu_332;

assign mux_case_1977_out = mux_case_1977_fu_284;

assign mux_case_20168_out = mux_case_20168_fu_336;

assign mux_case_2105_out = mux_case_2105_fu_300;

assign mux_case_2184_out = mux_case_2184_fu_288;

assign mux_case_22175_out = mux_case_22175_fu_340;

assign mux_case_2391_out = mux_case_2391_fu_292;

assign mux_case_24182_out = mux_case_24182_fu_344;

assign mux_case_2598_out = mux_case_2598_fu_296;

assign mux_case_26189_out = mux_case_26189_fu_348;

assign mux_case_321_out = mux_case_321_fu_252;

assign mux_case_4112_out = mux_case_4112_fu_304;

assign mux_case_528_out = mux_case_528_fu_256;

assign mux_case_6119_out = mux_case_6119_fu_308;

assign mux_case_735_out = mux_case_735_fu_260;

assign mux_case_8126_out = mux_case_8126_fu_312;

assign mux_case_942_out = mux_case_942_fu_264;

assign p_out = empty_95_fu_352;

endmodule //NN_pool2_Pipeline_L4
