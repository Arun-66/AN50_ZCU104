-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity NN_conv3_Pipeline_M1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    out_img_12_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_img_12_ce0 : OUT STD_LOGIC;
    out_img_12_we0 : OUT STD_LOGIC;
    out_img_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_img_11_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_img_11_ce0 : OUT STD_LOGIC;
    out_img_11_we0 : OUT STD_LOGIC;
    out_img_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_img_10_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_img_10_ce0 : OUT STD_LOGIC;
    out_img_10_we0 : OUT STD_LOGIC;
    out_img_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_img_9_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_img_9_ce0 : OUT STD_LOGIC;
    out_img_9_we0 : OUT STD_LOGIC;
    out_img_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_img_8_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_img_8_ce0 : OUT STD_LOGIC;
    out_img_8_we0 : OUT STD_LOGIC;
    out_img_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_img_7_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_img_7_ce0 : OUT STD_LOGIC;
    out_img_7_we0 : OUT STD_LOGIC;
    out_img_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_img_6_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_img_6_ce0 : OUT STD_LOGIC;
    out_img_6_we0 : OUT STD_LOGIC;
    out_img_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_img_5_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_img_5_ce0 : OUT STD_LOGIC;
    out_img_5_we0 : OUT STD_LOGIC;
    out_img_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_img_4_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_img_4_ce0 : OUT STD_LOGIC;
    out_img_4_we0 : OUT STD_LOGIC;
    out_img_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_img_3_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_img_3_ce0 : OUT STD_LOGIC;
    out_img_3_we0 : OUT STD_LOGIC;
    out_img_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_img_2_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_img_2_ce0 : OUT STD_LOGIC;
    out_img_2_we0 : OUT STD_LOGIC;
    out_img_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_img_1_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_img_1_ce0 : OUT STD_LOGIC;
    out_img_1_we0 : OUT STD_LOGIC;
    out_img_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_img_0_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_img_0_ce0 : OUT STD_LOGIC;
    out_img_0_we0 : OUT STD_LOGIC;
    out_img_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    phi_mul9 : IN STD_LOGIC_VECTOR (12 downto 0);
    add1804614_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_14627_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_24640_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_34653_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_44666_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_54679_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_64692_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_74705_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_84718_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_94731_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_104744_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_114757_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_124770_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    bias_conv3_load : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_138794615_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1_14628_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_2_14641_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_3_14654_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_4_14667_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_5_14680_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_6_14693_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_7_14706_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_8_14719_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_9_14732_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_10_14745_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_11_14758_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_12_14771_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_238964616_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1_24629_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_2_24642_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_3_24655_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_4_24668_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_5_24681_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_6_24694_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_7_24707_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_8_24720_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_9_24733_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_10_24746_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_11_24759_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_12_24772_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_339134617_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1_34630_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_2_34643_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_3_34656_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_4_34669_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_5_34682_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_6_34695_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_7_34708_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_8_34721_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_9_34734_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_10_34747_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_11_34760_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_12_34773_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_439304618_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1_44631_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_2_44644_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_3_44657_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_4_44670_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_5_44683_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_6_44696_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_7_44709_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_8_44722_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_9_44735_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_10_44748_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_11_44761_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_12_44774_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_539474619_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1_54632_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_2_54645_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_3_54658_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_4_54671_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_5_54684_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_6_54697_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_7_54710_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_8_54723_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_9_54736_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_10_54749_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_11_54762_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_12_54775_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_639644620_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1_64633_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_2_64646_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_3_64659_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_4_64672_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_5_64685_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_6_64698_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_7_64711_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_8_64724_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_9_64737_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_10_64750_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_11_64763_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_12_64776_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_739814621_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1_74634_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_2_74647_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_3_74660_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_4_74673_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_5_74686_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_6_74699_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_7_74712_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_8_74725_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_9_74738_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_10_74751_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_11_74764_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_12_74777_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_839984622_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1_84635_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_2_84648_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_3_84661_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_4_84674_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_5_84687_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_6_84700_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_7_84713_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_8_84726_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_9_84739_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_10_84752_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_11_84765_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_12_84778_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_940154623_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1_94636_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_2_94649_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_3_94662_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_4_94675_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_5_94688_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_6_94701_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_7_94714_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_8_94727_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_9_94740_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_10_94753_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_11_94766_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_12_94779_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1040324624_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1_104637_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_2_104650_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_3_104663_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_4_104676_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_5_104689_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_6_104702_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_7_104715_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_8_104728_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_9_104741_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_10_104754_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_11_104767_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_12_104780_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1140494625_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1_114638_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_2_114651_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_3_114664_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_4_114677_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_5_114690_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_6_114703_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_7_114716_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_8_114729_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_9_114742_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_10_114755_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_11_114768_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_12_114781_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1240664626_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1_124639_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_2_124652_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_3_124665_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_4_124678_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_5_124691_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_6_124704_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_7_124717_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_8_124730_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_9_124743_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_10_124756_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_11_124769_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_12_124791_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11086_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11086_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11086_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_11086_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11086_p_ce : OUT STD_LOGIC;
    grp_fu_11090_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11090_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11090_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_11090_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11090_p_ce : OUT STD_LOGIC;
    grp_fu_11094_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11094_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11094_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_11094_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11094_p_ce : OUT STD_LOGIC;
    grp_fu_11098_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11098_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11098_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_11098_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11098_p_ce : OUT STD_LOGIC;
    grp_fu_11102_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11102_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11102_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_11102_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11102_p_ce : OUT STD_LOGIC;
    grp_fu_11106_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11106_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11106_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_11106_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11106_p_ce : OUT STD_LOGIC;
    grp_fu_11110_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11110_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11110_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_11110_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11110_p_ce : OUT STD_LOGIC;
    grp_fu_11114_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11114_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11114_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_11114_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11114_p_ce : OUT STD_LOGIC;
    grp_fu_11118_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11118_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11118_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_11118_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11118_p_ce : OUT STD_LOGIC;
    grp_fu_11122_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11122_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11122_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_11122_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11122_p_ce : OUT STD_LOGIC;
    grp_fu_11126_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11126_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11126_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_11126_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11126_p_ce : OUT STD_LOGIC;
    grp_fu_11130_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11130_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11130_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_11130_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11130_p_ce : OUT STD_LOGIC;
    grp_fu_11134_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11134_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11134_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_11134_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_11134_p_ce : OUT STD_LOGIC;
    grp_fu_15098_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15098_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15098_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_15098_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_15098_p_ce : OUT STD_LOGIC;
    grp_fu_15102_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15102_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15102_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_15102_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_15102_p_ce : OUT STD_LOGIC;
    grp_fu_15106_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15106_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15106_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_15106_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_15106_p_ce : OUT STD_LOGIC;
    grp_fu_15110_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15110_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15110_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_15110_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_15110_p_ce : OUT STD_LOGIC;
    grp_fu_15114_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15114_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15114_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_15114_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_15114_p_ce : OUT STD_LOGIC;
    grp_fu_15118_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15118_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15118_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_15118_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_15118_p_ce : OUT STD_LOGIC;
    grp_fu_15122_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15122_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15122_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_15122_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_15122_p_ce : OUT STD_LOGIC;
    grp_fu_15126_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15126_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15126_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_15126_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_15126_p_ce : OUT STD_LOGIC;
    grp_fu_15130_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15130_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15130_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_15130_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_15130_p_ce : OUT STD_LOGIC;
    grp_fu_15134_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15134_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15134_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_15134_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_15134_p_ce : OUT STD_LOGIC;
    grp_fu_15138_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15138_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15138_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_15138_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_15138_p_ce : OUT STD_LOGIC;
    grp_fu_15142_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15142_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15142_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_15142_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_15142_p_ce : OUT STD_LOGIC;
    grp_fu_15146_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15146_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15146_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_15146_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_15146_p_ce : OUT STD_LOGIC );
end;


architecture behav of NN_conv3_Pipeline_M1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln144_fu_1760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_9_reg_3248 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_9_reg_3248_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal i_9_reg_3248_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal i_9_reg_3248_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal i_9_reg_3248_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal i_9_reg_3248_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_1772_p29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_3257 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_1832_p29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_3262 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_103_fu_1892_p29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_103_reg_3267 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_104_fu_1952_p29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_104_reg_3272 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_105_fu_2012_p29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_105_reg_3277 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_106_fu_2072_p29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_106_reg_3282 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_107_fu_2132_p29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_107_reg_3287 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_108_fu_2192_p29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_108_reg_3292 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_109_fu_2252_p29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_109_reg_3297 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_110_fu_2312_p29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_110_reg_3302 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_111_fu_2372_p29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_111_reg_3307 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_112_fu_2432_p29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_112_reg_3312 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_113_fu_2492_p29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_113_reg_3317 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_reg_3322 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_reg_3322_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal out_50_reg_3329 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_50_reg_3329_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal out_51_reg_3336 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_51_reg_3336_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal out_52_reg_3343 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_52_reg_3343_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal out_53_reg_3350 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_53_reg_3350_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal out_54_reg_3357 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_54_reg_3357_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal out_55_reg_3364 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_55_reg_3364_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal out_56_reg_3371 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_56_reg_3371_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal out_57_reg_3378 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_57_reg_3378_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal out_58_reg_3385 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_58_reg_3385_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal out_59_reg_3392 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_59_reg_3392_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal out_60_reg_3399 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_60_reg_3399_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal out_61_reg_3406 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_61_reg_3406_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln148_fu_2565_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal i_fu_436 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal add_ln144_fu_1766_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_9 : STD_LOGIC_VECTOR (3 downto 0);
    signal out_img_0_we0_local : STD_LOGIC;
    signal select_ln151_fu_2623_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_img_0_ce0_local : STD_LOGIC;
    signal out_img_1_we0_local : STD_LOGIC;
    signal select_ln151_1_fu_2672_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_img_1_ce0_local : STD_LOGIC;
    signal out_img_2_we0_local : STD_LOGIC;
    signal select_ln151_2_fu_2721_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_img_2_ce0_local : STD_LOGIC;
    signal out_img_3_we0_local : STD_LOGIC;
    signal select_ln151_3_fu_2770_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_img_3_ce0_local : STD_LOGIC;
    signal out_img_4_we0_local : STD_LOGIC;
    signal select_ln151_4_fu_2819_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_img_4_ce0_local : STD_LOGIC;
    signal out_img_5_we0_local : STD_LOGIC;
    signal select_ln151_5_fu_2868_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_img_5_ce0_local : STD_LOGIC;
    signal out_img_6_we0_local : STD_LOGIC;
    signal select_ln151_6_fu_2917_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_img_6_ce0_local : STD_LOGIC;
    signal out_img_7_we0_local : STD_LOGIC;
    signal select_ln151_7_fu_2966_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_img_7_ce0_local : STD_LOGIC;
    signal out_img_8_we0_local : STD_LOGIC;
    signal select_ln151_8_fu_3015_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_img_8_ce0_local : STD_LOGIC;
    signal out_img_9_we0_local : STD_LOGIC;
    signal select_ln151_9_fu_3064_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_img_9_ce0_local : STD_LOGIC;
    signal out_img_10_we0_local : STD_LOGIC;
    signal select_ln151_10_fu_3113_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_img_10_ce0_local : STD_LOGIC;
    signal out_img_11_we0_local : STD_LOGIC;
    signal select_ln151_11_fu_3162_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_img_11_ce0_local : STD_LOGIC;
    signal out_img_12_we0_local : STD_LOGIC;
    signal select_ln151_12_fu_3211_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_img_12_ce0_local : STD_LOGIC;
    signal tmp_fu_1772_p27 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_1832_p27 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_103_fu_1892_p27 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_104_fu_1952_p27 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_105_fu_2012_p27 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_106_fu_2072_p27 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_107_fu_2132_p27 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_108_fu_2192_p27 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_109_fu_2252_p27 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_110_fu_2312_p27 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_111_fu_2372_p27 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_112_fu_2432_p27 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_113_fu_2492_p27 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln144_fu_2557_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln148_fu_2560_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal bitcast_ln151_fu_2582_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_168_fu_2585_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln151_fu_2595_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln151_1_fu_2605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln151_fu_2599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln151_fu_2611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln151_fu_2617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln151_1_fu_2631_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_170_fu_2634_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln151_1_fu_2644_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln151_3_fu_2654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln151_2_fu_2648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln151_1_fu_2660_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln151_1_fu_2666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln151_2_fu_2680_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_172_fu_2683_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln151_2_fu_2693_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln151_5_fu_2703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln151_4_fu_2697_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln151_2_fu_2709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln151_2_fu_2715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln151_3_fu_2729_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_174_fu_2732_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln151_3_fu_2742_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln151_7_fu_2752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln151_6_fu_2746_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln151_3_fu_2758_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln151_3_fu_2764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln151_4_fu_2778_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_176_fu_2781_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln151_4_fu_2791_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln151_9_fu_2801_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln151_8_fu_2795_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln151_4_fu_2807_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln151_4_fu_2813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln151_5_fu_2827_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_178_fu_2830_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln151_5_fu_2840_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln151_11_fu_2850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln151_10_fu_2844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln151_5_fu_2856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln151_5_fu_2862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln151_6_fu_2876_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_180_fu_2879_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln151_6_fu_2889_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln151_13_fu_2899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln151_12_fu_2893_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln151_6_fu_2905_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln151_6_fu_2911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln151_7_fu_2925_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_182_fu_2928_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln151_7_fu_2938_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln151_15_fu_2948_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln151_14_fu_2942_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln151_7_fu_2954_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln151_7_fu_2960_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln151_8_fu_2974_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_184_fu_2977_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln151_8_fu_2987_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln151_17_fu_2997_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln151_16_fu_2991_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln151_8_fu_3003_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln151_8_fu_3009_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln151_9_fu_3023_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_186_fu_3026_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln151_9_fu_3036_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln151_19_fu_3046_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln151_18_fu_3040_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln151_9_fu_3052_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln151_9_fu_3058_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln151_10_fu_3072_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_188_fu_3075_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln151_10_fu_3085_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln151_21_fu_3095_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln151_20_fu_3089_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln151_10_fu_3101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln151_10_fu_3107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln151_11_fu_3121_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_190_fu_3124_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln151_11_fu_3134_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln151_23_fu_3144_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln151_22_fu_3138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln151_11_fu_3150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln151_11_fu_3156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln151_12_fu_3170_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_192_fu_3173_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln151_12_fu_3183_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln151_25_fu_3193_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln151_24_fu_3187_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln151_12_fu_3199_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln151_12_fu_3205_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal tmp_fu_1772_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_1772_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_1772_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_1772_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_1772_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_1772_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_1772_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_1772_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_1772_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_1772_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_1772_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_1772_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_1772_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_1832_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_1832_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_1832_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_1832_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_1832_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_1832_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_1832_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_1832_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_1832_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_1832_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_1832_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_1832_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_1832_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_103_fu_1892_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_103_fu_1892_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_103_fu_1892_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_103_fu_1892_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_103_fu_1892_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_103_fu_1892_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_103_fu_1892_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_103_fu_1892_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_103_fu_1892_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_103_fu_1892_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_103_fu_1892_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_103_fu_1892_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_103_fu_1892_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_104_fu_1952_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_104_fu_1952_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_104_fu_1952_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_104_fu_1952_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_104_fu_1952_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_104_fu_1952_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_104_fu_1952_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_104_fu_1952_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_104_fu_1952_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_104_fu_1952_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_104_fu_1952_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_104_fu_1952_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_104_fu_1952_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_105_fu_2012_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_105_fu_2012_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_105_fu_2012_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_105_fu_2012_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_105_fu_2012_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_105_fu_2012_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_105_fu_2012_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_105_fu_2012_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_105_fu_2012_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_105_fu_2012_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_105_fu_2012_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_105_fu_2012_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_105_fu_2012_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_106_fu_2072_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_106_fu_2072_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_106_fu_2072_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_106_fu_2072_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_106_fu_2072_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_106_fu_2072_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_106_fu_2072_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_106_fu_2072_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_106_fu_2072_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_106_fu_2072_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_106_fu_2072_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_106_fu_2072_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_106_fu_2072_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_107_fu_2132_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_107_fu_2132_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_107_fu_2132_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_107_fu_2132_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_107_fu_2132_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_107_fu_2132_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_107_fu_2132_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_107_fu_2132_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_107_fu_2132_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_107_fu_2132_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_107_fu_2132_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_107_fu_2132_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_107_fu_2132_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_108_fu_2192_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_108_fu_2192_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_108_fu_2192_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_108_fu_2192_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_108_fu_2192_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_108_fu_2192_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_108_fu_2192_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_108_fu_2192_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_108_fu_2192_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_108_fu_2192_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_108_fu_2192_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_108_fu_2192_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_108_fu_2192_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_109_fu_2252_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_109_fu_2252_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_109_fu_2252_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_109_fu_2252_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_109_fu_2252_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_109_fu_2252_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_109_fu_2252_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_109_fu_2252_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_109_fu_2252_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_109_fu_2252_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_109_fu_2252_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_109_fu_2252_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_109_fu_2252_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_110_fu_2312_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_110_fu_2312_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_110_fu_2312_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_110_fu_2312_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_110_fu_2312_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_110_fu_2312_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_110_fu_2312_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_110_fu_2312_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_110_fu_2312_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_110_fu_2312_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_110_fu_2312_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_110_fu_2312_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_110_fu_2312_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_111_fu_2372_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_111_fu_2372_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_111_fu_2372_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_111_fu_2372_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_111_fu_2372_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_111_fu_2372_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_111_fu_2372_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_111_fu_2372_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_111_fu_2372_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_111_fu_2372_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_111_fu_2372_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_111_fu_2372_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_111_fu_2372_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_112_fu_2432_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_112_fu_2432_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_112_fu_2432_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_112_fu_2432_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_112_fu_2432_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_112_fu_2432_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_112_fu_2432_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_112_fu_2432_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_112_fu_2432_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_112_fu_2432_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_112_fu_2432_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_112_fu_2432_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_112_fu_2432_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_113_fu_2492_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_113_fu_2492_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_113_fu_2492_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_113_fu_2492_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_113_fu_2492_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_113_fu_2492_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_113_fu_2492_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_113_fu_2492_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_113_fu_2492_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_113_fu_2492_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_113_fu_2492_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_113_fu_2492_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_113_fu_2492_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component NN_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component NN_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component NN_sparsemux_27_4_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (3 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (3 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (3 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (3 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (3 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (3 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (3 downto 0);
        din6_WIDTH : INTEGER;
        CASE7 : STD_LOGIC_VECTOR (3 downto 0);
        din7_WIDTH : INTEGER;
        CASE8 : STD_LOGIC_VECTOR (3 downto 0);
        din8_WIDTH : INTEGER;
        CASE9 : STD_LOGIC_VECTOR (3 downto 0);
        din9_WIDTH : INTEGER;
        CASE10 : STD_LOGIC_VECTOR (3 downto 0);
        din10_WIDTH : INTEGER;
        CASE11 : STD_LOGIC_VECTOR (3 downto 0);
        din11_WIDTH : INTEGER;
        CASE12 : STD_LOGIC_VECTOR (3 downto 0);
        din12_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        def : IN STD_LOGIC_VECTOR (31 downto 0);
        sel : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component NN_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    sparsemux_27_4_32_1_1_U13634 : component NN_sparsemux_27_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0001",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0011",
        din3_WIDTH => 32,
        CASE4 => "0100",
        din4_WIDTH => 32,
        CASE5 => "0101",
        din5_WIDTH => 32,
        CASE6 => "0110",
        din6_WIDTH => 32,
        CASE7 => "0111",
        din7_WIDTH => 32,
        CASE8 => "1000",
        din8_WIDTH => 32,
        CASE9 => "1001",
        din9_WIDTH => 32,
        CASE10 => "1010",
        din10_WIDTH => 32,
        CASE11 => "1011",
        din11_WIDTH => 32,
        CASE12 => "1100",
        din12_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => add1804614_reload,
        din1 => add180_14627_reload,
        din2 => add180_24640_reload,
        din3 => add180_34653_reload,
        din4 => add180_44666_reload,
        din5 => add180_54679_reload,
        din6 => add180_64692_reload,
        din7 => add180_74705_reload,
        din8 => add180_84718_reload,
        din9 => add180_94731_reload,
        din10 => add180_104744_reload,
        din11 => add180_114757_reload,
        din12 => add180_124770_reload,
        def => tmp_fu_1772_p27,
        sel => ap_sig_allocacmp_i_9,
        dout => tmp_fu_1772_p29);

    sparsemux_27_4_32_1_1_U13635 : component NN_sparsemux_27_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0001",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0011",
        din3_WIDTH => 32,
        CASE4 => "0100",
        din4_WIDTH => 32,
        CASE5 => "0101",
        din5_WIDTH => 32,
        CASE6 => "0110",
        din6_WIDTH => 32,
        CASE7 => "0111",
        din7_WIDTH => 32,
        CASE8 => "1000",
        din8_WIDTH => 32,
        CASE9 => "1001",
        din9_WIDTH => 32,
        CASE10 => "1010",
        din10_WIDTH => 32,
        CASE11 => "1011",
        din11_WIDTH => 32,
        CASE12 => "1100",
        din12_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => add180_138794615_reload,
        din1 => add180_1_14628_reload,
        din2 => add180_2_14641_reload,
        din3 => add180_3_14654_reload,
        din4 => add180_4_14667_reload,
        din5 => add180_5_14680_reload,
        din6 => add180_6_14693_reload,
        din7 => add180_7_14706_reload,
        din8 => add180_8_14719_reload,
        din9 => add180_9_14732_reload,
        din10 => add180_10_14745_reload,
        din11 => add180_11_14758_reload,
        din12 => add180_12_14771_reload,
        def => tmp_s_fu_1832_p27,
        sel => ap_sig_allocacmp_i_9,
        dout => tmp_s_fu_1832_p29);

    sparsemux_27_4_32_1_1_U13636 : component NN_sparsemux_27_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0001",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0011",
        din3_WIDTH => 32,
        CASE4 => "0100",
        din4_WIDTH => 32,
        CASE5 => "0101",
        din5_WIDTH => 32,
        CASE6 => "0110",
        din6_WIDTH => 32,
        CASE7 => "0111",
        din7_WIDTH => 32,
        CASE8 => "1000",
        din8_WIDTH => 32,
        CASE9 => "1001",
        din9_WIDTH => 32,
        CASE10 => "1010",
        din10_WIDTH => 32,
        CASE11 => "1011",
        din11_WIDTH => 32,
        CASE12 => "1100",
        din12_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => add180_238964616_reload,
        din1 => add180_1_24629_reload,
        din2 => add180_2_24642_reload,
        din3 => add180_3_24655_reload,
        din4 => add180_4_24668_reload,
        din5 => add180_5_24681_reload,
        din6 => add180_6_24694_reload,
        din7 => add180_7_24707_reload,
        din8 => add180_8_24720_reload,
        din9 => add180_9_24733_reload,
        din10 => add180_10_24746_reload,
        din11 => add180_11_24759_reload,
        din12 => add180_12_24772_reload,
        def => tmp_103_fu_1892_p27,
        sel => ap_sig_allocacmp_i_9,
        dout => tmp_103_fu_1892_p29);

    sparsemux_27_4_32_1_1_U13637 : component NN_sparsemux_27_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0001",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0011",
        din3_WIDTH => 32,
        CASE4 => "0100",
        din4_WIDTH => 32,
        CASE5 => "0101",
        din5_WIDTH => 32,
        CASE6 => "0110",
        din6_WIDTH => 32,
        CASE7 => "0111",
        din7_WIDTH => 32,
        CASE8 => "1000",
        din8_WIDTH => 32,
        CASE9 => "1001",
        din9_WIDTH => 32,
        CASE10 => "1010",
        din10_WIDTH => 32,
        CASE11 => "1011",
        din11_WIDTH => 32,
        CASE12 => "1100",
        din12_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => add180_339134617_reload,
        din1 => add180_1_34630_reload,
        din2 => add180_2_34643_reload,
        din3 => add180_3_34656_reload,
        din4 => add180_4_34669_reload,
        din5 => add180_5_34682_reload,
        din6 => add180_6_34695_reload,
        din7 => add180_7_34708_reload,
        din8 => add180_8_34721_reload,
        din9 => add180_9_34734_reload,
        din10 => add180_10_34747_reload,
        din11 => add180_11_34760_reload,
        din12 => add180_12_34773_reload,
        def => tmp_104_fu_1952_p27,
        sel => ap_sig_allocacmp_i_9,
        dout => tmp_104_fu_1952_p29);

    sparsemux_27_4_32_1_1_U13638 : component NN_sparsemux_27_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0001",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0011",
        din3_WIDTH => 32,
        CASE4 => "0100",
        din4_WIDTH => 32,
        CASE5 => "0101",
        din5_WIDTH => 32,
        CASE6 => "0110",
        din6_WIDTH => 32,
        CASE7 => "0111",
        din7_WIDTH => 32,
        CASE8 => "1000",
        din8_WIDTH => 32,
        CASE9 => "1001",
        din9_WIDTH => 32,
        CASE10 => "1010",
        din10_WIDTH => 32,
        CASE11 => "1011",
        din11_WIDTH => 32,
        CASE12 => "1100",
        din12_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => add180_439304618_reload,
        din1 => add180_1_44631_reload,
        din2 => add180_2_44644_reload,
        din3 => add180_3_44657_reload,
        din4 => add180_4_44670_reload,
        din5 => add180_5_44683_reload,
        din6 => add180_6_44696_reload,
        din7 => add180_7_44709_reload,
        din8 => add180_8_44722_reload,
        din9 => add180_9_44735_reload,
        din10 => add180_10_44748_reload,
        din11 => add180_11_44761_reload,
        din12 => add180_12_44774_reload,
        def => tmp_105_fu_2012_p27,
        sel => ap_sig_allocacmp_i_9,
        dout => tmp_105_fu_2012_p29);

    sparsemux_27_4_32_1_1_U13639 : component NN_sparsemux_27_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0001",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0011",
        din3_WIDTH => 32,
        CASE4 => "0100",
        din4_WIDTH => 32,
        CASE5 => "0101",
        din5_WIDTH => 32,
        CASE6 => "0110",
        din6_WIDTH => 32,
        CASE7 => "0111",
        din7_WIDTH => 32,
        CASE8 => "1000",
        din8_WIDTH => 32,
        CASE9 => "1001",
        din9_WIDTH => 32,
        CASE10 => "1010",
        din10_WIDTH => 32,
        CASE11 => "1011",
        din11_WIDTH => 32,
        CASE12 => "1100",
        din12_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => add180_539474619_reload,
        din1 => add180_1_54632_reload,
        din2 => add180_2_54645_reload,
        din3 => add180_3_54658_reload,
        din4 => add180_4_54671_reload,
        din5 => add180_5_54684_reload,
        din6 => add180_6_54697_reload,
        din7 => add180_7_54710_reload,
        din8 => add180_8_54723_reload,
        din9 => add180_9_54736_reload,
        din10 => add180_10_54749_reload,
        din11 => add180_11_54762_reload,
        din12 => add180_12_54775_reload,
        def => tmp_106_fu_2072_p27,
        sel => ap_sig_allocacmp_i_9,
        dout => tmp_106_fu_2072_p29);

    sparsemux_27_4_32_1_1_U13640 : component NN_sparsemux_27_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0001",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0011",
        din3_WIDTH => 32,
        CASE4 => "0100",
        din4_WIDTH => 32,
        CASE5 => "0101",
        din5_WIDTH => 32,
        CASE6 => "0110",
        din6_WIDTH => 32,
        CASE7 => "0111",
        din7_WIDTH => 32,
        CASE8 => "1000",
        din8_WIDTH => 32,
        CASE9 => "1001",
        din9_WIDTH => 32,
        CASE10 => "1010",
        din10_WIDTH => 32,
        CASE11 => "1011",
        din11_WIDTH => 32,
        CASE12 => "1100",
        din12_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => add180_639644620_reload,
        din1 => add180_1_64633_reload,
        din2 => add180_2_64646_reload,
        din3 => add180_3_64659_reload,
        din4 => add180_4_64672_reload,
        din5 => add180_5_64685_reload,
        din6 => add180_6_64698_reload,
        din7 => add180_7_64711_reload,
        din8 => add180_8_64724_reload,
        din9 => add180_9_64737_reload,
        din10 => add180_10_64750_reload,
        din11 => add180_11_64763_reload,
        din12 => add180_12_64776_reload,
        def => tmp_107_fu_2132_p27,
        sel => ap_sig_allocacmp_i_9,
        dout => tmp_107_fu_2132_p29);

    sparsemux_27_4_32_1_1_U13641 : component NN_sparsemux_27_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0001",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0011",
        din3_WIDTH => 32,
        CASE4 => "0100",
        din4_WIDTH => 32,
        CASE5 => "0101",
        din5_WIDTH => 32,
        CASE6 => "0110",
        din6_WIDTH => 32,
        CASE7 => "0111",
        din7_WIDTH => 32,
        CASE8 => "1000",
        din8_WIDTH => 32,
        CASE9 => "1001",
        din9_WIDTH => 32,
        CASE10 => "1010",
        din10_WIDTH => 32,
        CASE11 => "1011",
        din11_WIDTH => 32,
        CASE12 => "1100",
        din12_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => add180_739814621_reload,
        din1 => add180_1_74634_reload,
        din2 => add180_2_74647_reload,
        din3 => add180_3_74660_reload,
        din4 => add180_4_74673_reload,
        din5 => add180_5_74686_reload,
        din6 => add180_6_74699_reload,
        din7 => add180_7_74712_reload,
        din8 => add180_8_74725_reload,
        din9 => add180_9_74738_reload,
        din10 => add180_10_74751_reload,
        din11 => add180_11_74764_reload,
        din12 => add180_12_74777_reload,
        def => tmp_108_fu_2192_p27,
        sel => ap_sig_allocacmp_i_9,
        dout => tmp_108_fu_2192_p29);

    sparsemux_27_4_32_1_1_U13642 : component NN_sparsemux_27_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0001",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0011",
        din3_WIDTH => 32,
        CASE4 => "0100",
        din4_WIDTH => 32,
        CASE5 => "0101",
        din5_WIDTH => 32,
        CASE6 => "0110",
        din6_WIDTH => 32,
        CASE7 => "0111",
        din7_WIDTH => 32,
        CASE8 => "1000",
        din8_WIDTH => 32,
        CASE9 => "1001",
        din9_WIDTH => 32,
        CASE10 => "1010",
        din10_WIDTH => 32,
        CASE11 => "1011",
        din11_WIDTH => 32,
        CASE12 => "1100",
        din12_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => add180_839984622_reload,
        din1 => add180_1_84635_reload,
        din2 => add180_2_84648_reload,
        din3 => add180_3_84661_reload,
        din4 => add180_4_84674_reload,
        din5 => add180_5_84687_reload,
        din6 => add180_6_84700_reload,
        din7 => add180_7_84713_reload,
        din8 => add180_8_84726_reload,
        din9 => add180_9_84739_reload,
        din10 => add180_10_84752_reload,
        din11 => add180_11_84765_reload,
        din12 => add180_12_84778_reload,
        def => tmp_109_fu_2252_p27,
        sel => ap_sig_allocacmp_i_9,
        dout => tmp_109_fu_2252_p29);

    sparsemux_27_4_32_1_1_U13643 : component NN_sparsemux_27_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0001",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0011",
        din3_WIDTH => 32,
        CASE4 => "0100",
        din4_WIDTH => 32,
        CASE5 => "0101",
        din5_WIDTH => 32,
        CASE6 => "0110",
        din6_WIDTH => 32,
        CASE7 => "0111",
        din7_WIDTH => 32,
        CASE8 => "1000",
        din8_WIDTH => 32,
        CASE9 => "1001",
        din9_WIDTH => 32,
        CASE10 => "1010",
        din10_WIDTH => 32,
        CASE11 => "1011",
        din11_WIDTH => 32,
        CASE12 => "1100",
        din12_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => add180_940154623_reload,
        din1 => add180_1_94636_reload,
        din2 => add180_2_94649_reload,
        din3 => add180_3_94662_reload,
        din4 => add180_4_94675_reload,
        din5 => add180_5_94688_reload,
        din6 => add180_6_94701_reload,
        din7 => add180_7_94714_reload,
        din8 => add180_8_94727_reload,
        din9 => add180_9_94740_reload,
        din10 => add180_10_94753_reload,
        din11 => add180_11_94766_reload,
        din12 => add180_12_94779_reload,
        def => tmp_110_fu_2312_p27,
        sel => ap_sig_allocacmp_i_9,
        dout => tmp_110_fu_2312_p29);

    sparsemux_27_4_32_1_1_U13644 : component NN_sparsemux_27_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0001",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0011",
        din3_WIDTH => 32,
        CASE4 => "0100",
        din4_WIDTH => 32,
        CASE5 => "0101",
        din5_WIDTH => 32,
        CASE6 => "0110",
        din6_WIDTH => 32,
        CASE7 => "0111",
        din7_WIDTH => 32,
        CASE8 => "1000",
        din8_WIDTH => 32,
        CASE9 => "1001",
        din9_WIDTH => 32,
        CASE10 => "1010",
        din10_WIDTH => 32,
        CASE11 => "1011",
        din11_WIDTH => 32,
        CASE12 => "1100",
        din12_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => add180_1040324624_reload,
        din1 => add180_1_104637_reload,
        din2 => add180_2_104650_reload,
        din3 => add180_3_104663_reload,
        din4 => add180_4_104676_reload,
        din5 => add180_5_104689_reload,
        din6 => add180_6_104702_reload,
        din7 => add180_7_104715_reload,
        din8 => add180_8_104728_reload,
        din9 => add180_9_104741_reload,
        din10 => add180_10_104754_reload,
        din11 => add180_11_104767_reload,
        din12 => add180_12_104780_reload,
        def => tmp_111_fu_2372_p27,
        sel => ap_sig_allocacmp_i_9,
        dout => tmp_111_fu_2372_p29);

    sparsemux_27_4_32_1_1_U13645 : component NN_sparsemux_27_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0001",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0011",
        din3_WIDTH => 32,
        CASE4 => "0100",
        din4_WIDTH => 32,
        CASE5 => "0101",
        din5_WIDTH => 32,
        CASE6 => "0110",
        din6_WIDTH => 32,
        CASE7 => "0111",
        din7_WIDTH => 32,
        CASE8 => "1000",
        din8_WIDTH => 32,
        CASE9 => "1001",
        din9_WIDTH => 32,
        CASE10 => "1010",
        din10_WIDTH => 32,
        CASE11 => "1011",
        din11_WIDTH => 32,
        CASE12 => "1100",
        din12_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => add180_1140494625_reload,
        din1 => add180_1_114638_reload,
        din2 => add180_2_114651_reload,
        din3 => add180_3_114664_reload,
        din4 => add180_4_114677_reload,
        din5 => add180_5_114690_reload,
        din6 => add180_6_114703_reload,
        din7 => add180_7_114716_reload,
        din8 => add180_8_114729_reload,
        din9 => add180_9_114742_reload,
        din10 => add180_10_114755_reload,
        din11 => add180_11_114768_reload,
        din12 => add180_12_114781_reload,
        def => tmp_112_fu_2432_p27,
        sel => ap_sig_allocacmp_i_9,
        dout => tmp_112_fu_2432_p29);

    sparsemux_27_4_32_1_1_U13646 : component NN_sparsemux_27_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0001",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0011",
        din3_WIDTH => 32,
        CASE4 => "0100",
        din4_WIDTH => 32,
        CASE5 => "0101",
        din5_WIDTH => 32,
        CASE6 => "0110",
        din6_WIDTH => 32,
        CASE7 => "0111",
        din7_WIDTH => 32,
        CASE8 => "1000",
        din8_WIDTH => 32,
        CASE9 => "1001",
        din9_WIDTH => 32,
        CASE10 => "1010",
        din10_WIDTH => 32,
        CASE11 => "1011",
        din11_WIDTH => 32,
        CASE12 => "1100",
        din12_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => add180_1240664626_reload,
        din1 => add180_1_124639_reload,
        din2 => add180_2_124652_reload,
        din3 => add180_3_124665_reload,
        din4 => add180_4_124678_reload,
        din5 => add180_5_124691_reload,
        din6 => add180_6_124704_reload,
        din7 => add180_7_124717_reload,
        din8 => add180_8_124730_reload,
        din9 => add180_9_124743_reload,
        din10 => add180_10_124756_reload,
        din11 => add180_11_124769_reload,
        din12 => add180_12_124791_reload,
        def => tmp_113_fu_2492_p27,
        sel => ap_sig_allocacmp_i_9,
        dout => tmp_113_fu_2492_p29);

    flow_control_loop_pipe_sequential_init_U : component NN_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    i_fu_436_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln144_fu_1760_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_fu_436 <= add_ln144_fu_1766_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_436 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                i_9_reg_3248 <= ap_sig_allocacmp_i_9;
                i_9_reg_3248_pp0_iter1_reg <= i_9_reg_3248;
                tmp_103_reg_3267 <= tmp_103_fu_1892_p29;
                tmp_104_reg_3272 <= tmp_104_fu_1952_p29;
                tmp_105_reg_3277 <= tmp_105_fu_2012_p29;
                tmp_106_reg_3282 <= tmp_106_fu_2072_p29;
                tmp_107_reg_3287 <= tmp_107_fu_2132_p29;
                tmp_108_reg_3292 <= tmp_108_fu_2192_p29;
                tmp_109_reg_3297 <= tmp_109_fu_2252_p29;
                tmp_110_reg_3302 <= tmp_110_fu_2312_p29;
                tmp_111_reg_3307 <= tmp_111_fu_2372_p29;
                tmp_112_reg_3312 <= tmp_112_fu_2432_p29;
                tmp_113_reg_3317 <= tmp_113_fu_2492_p29;
                tmp_reg_3257 <= tmp_fu_1772_p29;
                tmp_s_reg_3262 <= tmp_s_fu_1832_p29;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                i_9_reg_3248_pp0_iter2_reg <= i_9_reg_3248_pp0_iter1_reg;
                i_9_reg_3248_pp0_iter3_reg <= i_9_reg_3248_pp0_iter2_reg;
                i_9_reg_3248_pp0_iter4_reg <= i_9_reg_3248_pp0_iter3_reg;
                i_9_reg_3248_pp0_iter5_reg <= i_9_reg_3248_pp0_iter4_reg;
                out_50_reg_3329 <= grp_fu_11090_p_dout0;
                out_50_reg_3329_pp0_iter5_reg <= out_50_reg_3329;
                out_51_reg_3336 <= grp_fu_11094_p_dout0;
                out_51_reg_3336_pp0_iter5_reg <= out_51_reg_3336;
                out_52_reg_3343 <= grp_fu_11098_p_dout0;
                out_52_reg_3343_pp0_iter5_reg <= out_52_reg_3343;
                out_53_reg_3350 <= grp_fu_11102_p_dout0;
                out_53_reg_3350_pp0_iter5_reg <= out_53_reg_3350;
                out_54_reg_3357 <= grp_fu_11106_p_dout0;
                out_54_reg_3357_pp0_iter5_reg <= out_54_reg_3357;
                out_55_reg_3364 <= grp_fu_11110_p_dout0;
                out_55_reg_3364_pp0_iter5_reg <= out_55_reg_3364;
                out_56_reg_3371 <= grp_fu_11114_p_dout0;
                out_56_reg_3371_pp0_iter5_reg <= out_56_reg_3371;
                out_57_reg_3378 <= grp_fu_11118_p_dout0;
                out_57_reg_3378_pp0_iter5_reg <= out_57_reg_3378;
                out_58_reg_3385 <= grp_fu_11122_p_dout0;
                out_58_reg_3385_pp0_iter5_reg <= out_58_reg_3385;
                out_59_reg_3392 <= grp_fu_11126_p_dout0;
                out_59_reg_3392_pp0_iter5_reg <= out_59_reg_3392;
                out_60_reg_3399 <= grp_fu_11130_p_dout0;
                out_60_reg_3399_pp0_iter5_reg <= out_60_reg_3399;
                out_61_reg_3406 <= grp_fu_11134_p_dout0;
                out_61_reg_3406_pp0_iter5_reg <= out_61_reg_3406;
                out_reg_3322 <= grp_fu_11086_p_dout0;
                out_reg_3322_pp0_iter5_reg <= out_reg_3322;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln144_fu_1766_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_9) + unsigned(ap_const_lv4_1));
    add_ln148_fu_2560_p2 <= std_logic_vector(unsigned(zext_ln144_fu_2557_p1) + unsigned(phi_mul9));
    and_ln151_10_fu_3107_p2 <= (or_ln151_10_fu_3101_p2 and grp_fu_15138_p_dout0);
    and_ln151_11_fu_3156_p2 <= (or_ln151_11_fu_3150_p2 and grp_fu_15142_p_dout0);
    and_ln151_12_fu_3205_p2 <= (or_ln151_12_fu_3199_p2 and grp_fu_15146_p_dout0);
    and_ln151_1_fu_2666_p2 <= (or_ln151_1_fu_2660_p2 and grp_fu_15102_p_dout0);
    and_ln151_2_fu_2715_p2 <= (or_ln151_2_fu_2709_p2 and grp_fu_15106_p_dout0);
    and_ln151_3_fu_2764_p2 <= (or_ln151_3_fu_2758_p2 and grp_fu_15110_p_dout0);
    and_ln151_4_fu_2813_p2 <= (or_ln151_4_fu_2807_p2 and grp_fu_15114_p_dout0);
    and_ln151_5_fu_2862_p2 <= (or_ln151_5_fu_2856_p2 and grp_fu_15118_p_dout0);
    and_ln151_6_fu_2911_p2 <= (or_ln151_6_fu_2905_p2 and grp_fu_15122_p_dout0);
    and_ln151_7_fu_2960_p2 <= (or_ln151_7_fu_2954_p2 and grp_fu_15126_p_dout0);
    and_ln151_8_fu_3009_p2 <= (or_ln151_8_fu_3003_p2 and grp_fu_15130_p_dout0);
    and_ln151_9_fu_3058_p2 <= (or_ln151_9_fu_3052_p2 and grp_fu_15134_p_dout0);
    and_ln151_fu_2617_p2 <= (or_ln151_fu_2611_p2 and grp_fu_15098_p_dout0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln144_fu_1760_p2)
    begin
        if (((icmp_ln144_fu_1760_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter5_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_9_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_fu_436, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i_9 <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_i_9 <= i_fu_436;
        end if; 
    end process;

    bitcast_ln151_10_fu_3072_p1 <= out_59_reg_3392_pp0_iter5_reg;
    bitcast_ln151_11_fu_3121_p1 <= out_60_reg_3399_pp0_iter5_reg;
    bitcast_ln151_12_fu_3170_p1 <= out_61_reg_3406_pp0_iter5_reg;
    bitcast_ln151_1_fu_2631_p1 <= out_50_reg_3329_pp0_iter5_reg;
    bitcast_ln151_2_fu_2680_p1 <= out_51_reg_3336_pp0_iter5_reg;
    bitcast_ln151_3_fu_2729_p1 <= out_52_reg_3343_pp0_iter5_reg;
    bitcast_ln151_4_fu_2778_p1 <= out_53_reg_3350_pp0_iter5_reg;
    bitcast_ln151_5_fu_2827_p1 <= out_54_reg_3357_pp0_iter5_reg;
    bitcast_ln151_6_fu_2876_p1 <= out_55_reg_3364_pp0_iter5_reg;
    bitcast_ln151_7_fu_2925_p1 <= out_56_reg_3371_pp0_iter5_reg;
    bitcast_ln151_8_fu_2974_p1 <= out_57_reg_3378_pp0_iter5_reg;
    bitcast_ln151_9_fu_3023_p1 <= out_58_reg_3385_pp0_iter5_reg;
    bitcast_ln151_fu_2582_p1 <= out_reg_3322_pp0_iter5_reg;
    grp_fu_11086_p_ce <= ap_const_logic_1;
    grp_fu_11086_p_din0 <= tmp_reg_3257;
    grp_fu_11086_p_din1 <= bias_conv3_load;
    grp_fu_11086_p_opcode <= ap_const_lv2_0;
    grp_fu_11090_p_ce <= ap_const_logic_1;
    grp_fu_11090_p_din0 <= tmp_s_reg_3262;
    grp_fu_11090_p_din1 <= bias_conv3_load;
    grp_fu_11090_p_opcode <= ap_const_lv2_0;
    grp_fu_11094_p_ce <= ap_const_logic_1;
    grp_fu_11094_p_din0 <= tmp_103_reg_3267;
    grp_fu_11094_p_din1 <= bias_conv3_load;
    grp_fu_11094_p_opcode <= ap_const_lv2_0;
    grp_fu_11098_p_ce <= ap_const_logic_1;
    grp_fu_11098_p_din0 <= tmp_104_reg_3272;
    grp_fu_11098_p_din1 <= bias_conv3_load;
    grp_fu_11098_p_opcode <= ap_const_lv2_0;
    grp_fu_11102_p_ce <= ap_const_logic_1;
    grp_fu_11102_p_din0 <= tmp_105_reg_3277;
    grp_fu_11102_p_din1 <= bias_conv3_load;
    grp_fu_11102_p_opcode <= ap_const_lv2_0;
    grp_fu_11106_p_ce <= ap_const_logic_1;
    grp_fu_11106_p_din0 <= tmp_106_reg_3282;
    grp_fu_11106_p_din1 <= bias_conv3_load;
    grp_fu_11106_p_opcode <= ap_const_lv2_0;
    grp_fu_11110_p_ce <= ap_const_logic_1;
    grp_fu_11110_p_din0 <= tmp_107_reg_3287;
    grp_fu_11110_p_din1 <= bias_conv3_load;
    grp_fu_11110_p_opcode <= ap_const_lv2_0;
    grp_fu_11114_p_ce <= ap_const_logic_1;
    grp_fu_11114_p_din0 <= tmp_108_reg_3292;
    grp_fu_11114_p_din1 <= bias_conv3_load;
    grp_fu_11114_p_opcode <= ap_const_lv2_0;
    grp_fu_11118_p_ce <= ap_const_logic_1;
    grp_fu_11118_p_din0 <= tmp_109_reg_3297;
    grp_fu_11118_p_din1 <= bias_conv3_load;
    grp_fu_11118_p_opcode <= ap_const_lv2_0;
    grp_fu_11122_p_ce <= ap_const_logic_1;
    grp_fu_11122_p_din0 <= tmp_110_reg_3302;
    grp_fu_11122_p_din1 <= bias_conv3_load;
    grp_fu_11122_p_opcode <= ap_const_lv2_0;
    grp_fu_11126_p_ce <= ap_const_logic_1;
    grp_fu_11126_p_din0 <= tmp_111_reg_3307;
    grp_fu_11126_p_din1 <= bias_conv3_load;
    grp_fu_11126_p_opcode <= ap_const_lv2_0;
    grp_fu_11130_p_ce <= ap_const_logic_1;
    grp_fu_11130_p_din0 <= tmp_112_reg_3312;
    grp_fu_11130_p_din1 <= bias_conv3_load;
    grp_fu_11130_p_opcode <= ap_const_lv2_0;
    grp_fu_11134_p_ce <= ap_const_logic_1;
    grp_fu_11134_p_din0 <= tmp_113_reg_3317;
    grp_fu_11134_p_din1 <= bias_conv3_load;
    grp_fu_11134_p_opcode <= ap_const_lv2_0;
    grp_fu_15098_p_ce <= ap_const_logic_1;
    grp_fu_15098_p_din0 <= out_reg_3322;
    grp_fu_15098_p_din1 <= ap_const_lv32_0;
    grp_fu_15098_p_opcode <= ap_const_lv5_2;
    grp_fu_15102_p_ce <= ap_const_logic_1;
    grp_fu_15102_p_din0 <= out_50_reg_3329;
    grp_fu_15102_p_din1 <= ap_const_lv32_0;
    grp_fu_15102_p_opcode <= ap_const_lv5_2;
    grp_fu_15106_p_ce <= ap_const_logic_1;
    grp_fu_15106_p_din0 <= out_51_reg_3336;
    grp_fu_15106_p_din1 <= ap_const_lv32_0;
    grp_fu_15106_p_opcode <= ap_const_lv5_2;
    grp_fu_15110_p_ce <= ap_const_logic_1;
    grp_fu_15110_p_din0 <= out_52_reg_3343;
    grp_fu_15110_p_din1 <= ap_const_lv32_0;
    grp_fu_15110_p_opcode <= ap_const_lv5_2;
    grp_fu_15114_p_ce <= ap_const_logic_1;
    grp_fu_15114_p_din0 <= out_53_reg_3350;
    grp_fu_15114_p_din1 <= ap_const_lv32_0;
    grp_fu_15114_p_opcode <= ap_const_lv5_2;
    grp_fu_15118_p_ce <= ap_const_logic_1;
    grp_fu_15118_p_din0 <= out_54_reg_3357;
    grp_fu_15118_p_din1 <= ap_const_lv32_0;
    grp_fu_15118_p_opcode <= ap_const_lv5_2;
    grp_fu_15122_p_ce <= ap_const_logic_1;
    grp_fu_15122_p_din0 <= out_55_reg_3364;
    grp_fu_15122_p_din1 <= ap_const_lv32_0;
    grp_fu_15122_p_opcode <= ap_const_lv5_2;
    grp_fu_15126_p_ce <= ap_const_logic_1;
    grp_fu_15126_p_din0 <= out_56_reg_3371;
    grp_fu_15126_p_din1 <= ap_const_lv32_0;
    grp_fu_15126_p_opcode <= ap_const_lv5_2;
    grp_fu_15130_p_ce <= ap_const_logic_1;
    grp_fu_15130_p_din0 <= out_57_reg_3378;
    grp_fu_15130_p_din1 <= ap_const_lv32_0;
    grp_fu_15130_p_opcode <= ap_const_lv5_2;
    grp_fu_15134_p_ce <= ap_const_logic_1;
    grp_fu_15134_p_din0 <= out_58_reg_3385;
    grp_fu_15134_p_din1 <= ap_const_lv32_0;
    grp_fu_15134_p_opcode <= ap_const_lv5_2;
    grp_fu_15138_p_ce <= ap_const_logic_1;
    grp_fu_15138_p_din0 <= out_59_reg_3392;
    grp_fu_15138_p_din1 <= ap_const_lv32_0;
    grp_fu_15138_p_opcode <= ap_const_lv5_2;
    grp_fu_15142_p_ce <= ap_const_logic_1;
    grp_fu_15142_p_din0 <= out_60_reg_3399;
    grp_fu_15142_p_din1 <= ap_const_lv32_0;
    grp_fu_15142_p_opcode <= ap_const_lv5_2;
    grp_fu_15146_p_ce <= ap_const_logic_1;
    grp_fu_15146_p_din0 <= out_61_reg_3406;
    grp_fu_15146_p_din1 <= ap_const_lv32_0;
    grp_fu_15146_p_opcode <= ap_const_lv5_2;
    icmp_ln144_fu_1760_p2 <= "1" when (ap_sig_allocacmp_i_9 = ap_const_lv4_D) else "0";
    icmp_ln151_10_fu_2844_p2 <= "0" when (tmp_178_fu_2830_p4 = ap_const_lv8_FF) else "1";
    icmp_ln151_11_fu_2850_p2 <= "1" when (trunc_ln151_5_fu_2840_p1 = ap_const_lv23_0) else "0";
    icmp_ln151_12_fu_2893_p2 <= "0" when (tmp_180_fu_2879_p4 = ap_const_lv8_FF) else "1";
    icmp_ln151_13_fu_2899_p2 <= "1" when (trunc_ln151_6_fu_2889_p1 = ap_const_lv23_0) else "0";
    icmp_ln151_14_fu_2942_p2 <= "0" when (tmp_182_fu_2928_p4 = ap_const_lv8_FF) else "1";
    icmp_ln151_15_fu_2948_p2 <= "1" when (trunc_ln151_7_fu_2938_p1 = ap_const_lv23_0) else "0";
    icmp_ln151_16_fu_2991_p2 <= "0" when (tmp_184_fu_2977_p4 = ap_const_lv8_FF) else "1";
    icmp_ln151_17_fu_2997_p2 <= "1" when (trunc_ln151_8_fu_2987_p1 = ap_const_lv23_0) else "0";
    icmp_ln151_18_fu_3040_p2 <= "0" when (tmp_186_fu_3026_p4 = ap_const_lv8_FF) else "1";
    icmp_ln151_19_fu_3046_p2 <= "1" when (trunc_ln151_9_fu_3036_p1 = ap_const_lv23_0) else "0";
    icmp_ln151_1_fu_2605_p2 <= "1" when (trunc_ln151_fu_2595_p1 = ap_const_lv23_0) else "0";
    icmp_ln151_20_fu_3089_p2 <= "0" when (tmp_188_fu_3075_p4 = ap_const_lv8_FF) else "1";
    icmp_ln151_21_fu_3095_p2 <= "1" when (trunc_ln151_10_fu_3085_p1 = ap_const_lv23_0) else "0";
    icmp_ln151_22_fu_3138_p2 <= "0" when (tmp_190_fu_3124_p4 = ap_const_lv8_FF) else "1";
    icmp_ln151_23_fu_3144_p2 <= "1" when (trunc_ln151_11_fu_3134_p1 = ap_const_lv23_0) else "0";
    icmp_ln151_24_fu_3187_p2 <= "0" when (tmp_192_fu_3173_p4 = ap_const_lv8_FF) else "1";
    icmp_ln151_25_fu_3193_p2 <= "1" when (trunc_ln151_12_fu_3183_p1 = ap_const_lv23_0) else "0";
    icmp_ln151_2_fu_2648_p2 <= "0" when (tmp_170_fu_2634_p4 = ap_const_lv8_FF) else "1";
    icmp_ln151_3_fu_2654_p2 <= "1" when (trunc_ln151_1_fu_2644_p1 = ap_const_lv23_0) else "0";
    icmp_ln151_4_fu_2697_p2 <= "0" when (tmp_172_fu_2683_p4 = ap_const_lv8_FF) else "1";
    icmp_ln151_5_fu_2703_p2 <= "1" when (trunc_ln151_2_fu_2693_p1 = ap_const_lv23_0) else "0";
    icmp_ln151_6_fu_2746_p2 <= "0" when (tmp_174_fu_2732_p4 = ap_const_lv8_FF) else "1";
    icmp_ln151_7_fu_2752_p2 <= "1" when (trunc_ln151_3_fu_2742_p1 = ap_const_lv23_0) else "0";
    icmp_ln151_8_fu_2795_p2 <= "0" when (tmp_176_fu_2781_p4 = ap_const_lv8_FF) else "1";
    icmp_ln151_9_fu_2801_p2 <= "1" when (trunc_ln151_4_fu_2791_p1 = ap_const_lv23_0) else "0";
    icmp_ln151_fu_2599_p2 <= "0" when (tmp_168_fu_2585_p4 = ap_const_lv8_FF) else "1";
    or_ln151_10_fu_3101_p2 <= (icmp_ln151_21_fu_3095_p2 or icmp_ln151_20_fu_3089_p2);
    or_ln151_11_fu_3150_p2 <= (icmp_ln151_23_fu_3144_p2 or icmp_ln151_22_fu_3138_p2);
    or_ln151_12_fu_3199_p2 <= (icmp_ln151_25_fu_3193_p2 or icmp_ln151_24_fu_3187_p2);
    or_ln151_1_fu_2660_p2 <= (icmp_ln151_3_fu_2654_p2 or icmp_ln151_2_fu_2648_p2);
    or_ln151_2_fu_2709_p2 <= (icmp_ln151_5_fu_2703_p2 or icmp_ln151_4_fu_2697_p2);
    or_ln151_3_fu_2758_p2 <= (icmp_ln151_7_fu_2752_p2 or icmp_ln151_6_fu_2746_p2);
    or_ln151_4_fu_2807_p2 <= (icmp_ln151_9_fu_2801_p2 or icmp_ln151_8_fu_2795_p2);
    or_ln151_5_fu_2856_p2 <= (icmp_ln151_11_fu_2850_p2 or icmp_ln151_10_fu_2844_p2);
    or_ln151_6_fu_2905_p2 <= (icmp_ln151_13_fu_2899_p2 or icmp_ln151_12_fu_2893_p2);
    or_ln151_7_fu_2954_p2 <= (icmp_ln151_15_fu_2948_p2 or icmp_ln151_14_fu_2942_p2);
    or_ln151_8_fu_3003_p2 <= (icmp_ln151_17_fu_2997_p2 or icmp_ln151_16_fu_2991_p2);
    or_ln151_9_fu_3052_p2 <= (icmp_ln151_19_fu_3046_p2 or icmp_ln151_18_fu_3040_p2);
    or_ln151_fu_2611_p2 <= (icmp_ln151_fu_2599_p2 or icmp_ln151_1_fu_2605_p2);
    out_img_0_address0 <= zext_ln148_fu_2565_p1(13 - 1 downto 0);
    out_img_0_ce0 <= out_img_0_ce0_local;

    out_img_0_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_0_ce0_local <= ap_const_logic_1;
        else 
            out_img_0_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_0_d0 <= select_ln151_fu_2623_p3;
    out_img_0_we0 <= out_img_0_we0_local;

    out_img_0_we0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_0_we0_local <= ap_const_logic_1;
        else 
            out_img_0_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_10_address0 <= zext_ln148_fu_2565_p1(13 - 1 downto 0);
    out_img_10_ce0 <= out_img_10_ce0_local;

    out_img_10_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_10_ce0_local <= ap_const_logic_1;
        else 
            out_img_10_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_10_d0 <= select_ln151_10_fu_3113_p3;
    out_img_10_we0 <= out_img_10_we0_local;

    out_img_10_we0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_10_we0_local <= ap_const_logic_1;
        else 
            out_img_10_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_11_address0 <= zext_ln148_fu_2565_p1(13 - 1 downto 0);
    out_img_11_ce0 <= out_img_11_ce0_local;

    out_img_11_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_11_ce0_local <= ap_const_logic_1;
        else 
            out_img_11_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_11_d0 <= select_ln151_11_fu_3162_p3;
    out_img_11_we0 <= out_img_11_we0_local;

    out_img_11_we0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_11_we0_local <= ap_const_logic_1;
        else 
            out_img_11_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_12_address0 <= zext_ln148_fu_2565_p1(13 - 1 downto 0);
    out_img_12_ce0 <= out_img_12_ce0_local;

    out_img_12_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_12_ce0_local <= ap_const_logic_1;
        else 
            out_img_12_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_12_d0 <= select_ln151_12_fu_3211_p3;
    out_img_12_we0 <= out_img_12_we0_local;

    out_img_12_we0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_12_we0_local <= ap_const_logic_1;
        else 
            out_img_12_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_1_address0 <= zext_ln148_fu_2565_p1(13 - 1 downto 0);
    out_img_1_ce0 <= out_img_1_ce0_local;

    out_img_1_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_1_ce0_local <= ap_const_logic_1;
        else 
            out_img_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_1_d0 <= select_ln151_1_fu_2672_p3;
    out_img_1_we0 <= out_img_1_we0_local;

    out_img_1_we0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_1_we0_local <= ap_const_logic_1;
        else 
            out_img_1_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_2_address0 <= zext_ln148_fu_2565_p1(13 - 1 downto 0);
    out_img_2_ce0 <= out_img_2_ce0_local;

    out_img_2_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_2_ce0_local <= ap_const_logic_1;
        else 
            out_img_2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_2_d0 <= select_ln151_2_fu_2721_p3;
    out_img_2_we0 <= out_img_2_we0_local;

    out_img_2_we0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_2_we0_local <= ap_const_logic_1;
        else 
            out_img_2_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_3_address0 <= zext_ln148_fu_2565_p1(13 - 1 downto 0);
    out_img_3_ce0 <= out_img_3_ce0_local;

    out_img_3_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_3_ce0_local <= ap_const_logic_1;
        else 
            out_img_3_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_3_d0 <= select_ln151_3_fu_2770_p3;
    out_img_3_we0 <= out_img_3_we0_local;

    out_img_3_we0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_3_we0_local <= ap_const_logic_1;
        else 
            out_img_3_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_4_address0 <= zext_ln148_fu_2565_p1(13 - 1 downto 0);
    out_img_4_ce0 <= out_img_4_ce0_local;

    out_img_4_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_4_ce0_local <= ap_const_logic_1;
        else 
            out_img_4_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_4_d0 <= select_ln151_4_fu_2819_p3;
    out_img_4_we0 <= out_img_4_we0_local;

    out_img_4_we0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_4_we0_local <= ap_const_logic_1;
        else 
            out_img_4_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_5_address0 <= zext_ln148_fu_2565_p1(13 - 1 downto 0);
    out_img_5_ce0 <= out_img_5_ce0_local;

    out_img_5_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_5_ce0_local <= ap_const_logic_1;
        else 
            out_img_5_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_5_d0 <= select_ln151_5_fu_2868_p3;
    out_img_5_we0 <= out_img_5_we0_local;

    out_img_5_we0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_5_we0_local <= ap_const_logic_1;
        else 
            out_img_5_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_6_address0 <= zext_ln148_fu_2565_p1(13 - 1 downto 0);
    out_img_6_ce0 <= out_img_6_ce0_local;

    out_img_6_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_6_ce0_local <= ap_const_logic_1;
        else 
            out_img_6_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_6_d0 <= select_ln151_6_fu_2917_p3;
    out_img_6_we0 <= out_img_6_we0_local;

    out_img_6_we0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_6_we0_local <= ap_const_logic_1;
        else 
            out_img_6_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_7_address0 <= zext_ln148_fu_2565_p1(13 - 1 downto 0);
    out_img_7_ce0 <= out_img_7_ce0_local;

    out_img_7_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_7_ce0_local <= ap_const_logic_1;
        else 
            out_img_7_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_7_d0 <= select_ln151_7_fu_2966_p3;
    out_img_7_we0 <= out_img_7_we0_local;

    out_img_7_we0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_7_we0_local <= ap_const_logic_1;
        else 
            out_img_7_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_8_address0 <= zext_ln148_fu_2565_p1(13 - 1 downto 0);
    out_img_8_ce0 <= out_img_8_ce0_local;

    out_img_8_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_8_ce0_local <= ap_const_logic_1;
        else 
            out_img_8_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_8_d0 <= select_ln151_8_fu_3015_p3;
    out_img_8_we0 <= out_img_8_we0_local;

    out_img_8_we0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_8_we0_local <= ap_const_logic_1;
        else 
            out_img_8_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_9_address0 <= zext_ln148_fu_2565_p1(13 - 1 downto 0);
    out_img_9_ce0 <= out_img_9_ce0_local;

    out_img_9_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_9_ce0_local <= ap_const_logic_1;
        else 
            out_img_9_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_9_d0 <= select_ln151_9_fu_3064_p3;
    out_img_9_we0 <= out_img_9_we0_local;

    out_img_9_we0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_9_we0_local <= ap_const_logic_1;
        else 
            out_img_9_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    select_ln151_10_fu_3113_p3 <= 
        out_59_reg_3392_pp0_iter5_reg when (and_ln151_10_fu_3107_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln151_11_fu_3162_p3 <= 
        out_60_reg_3399_pp0_iter5_reg when (and_ln151_11_fu_3156_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln151_12_fu_3211_p3 <= 
        out_61_reg_3406_pp0_iter5_reg when (and_ln151_12_fu_3205_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln151_1_fu_2672_p3 <= 
        out_50_reg_3329_pp0_iter5_reg when (and_ln151_1_fu_2666_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln151_2_fu_2721_p3 <= 
        out_51_reg_3336_pp0_iter5_reg when (and_ln151_2_fu_2715_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln151_3_fu_2770_p3 <= 
        out_52_reg_3343_pp0_iter5_reg when (and_ln151_3_fu_2764_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln151_4_fu_2819_p3 <= 
        out_53_reg_3350_pp0_iter5_reg when (and_ln151_4_fu_2813_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln151_5_fu_2868_p3 <= 
        out_54_reg_3357_pp0_iter5_reg when (and_ln151_5_fu_2862_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln151_6_fu_2917_p3 <= 
        out_55_reg_3364_pp0_iter5_reg when (and_ln151_6_fu_2911_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln151_7_fu_2966_p3 <= 
        out_56_reg_3371_pp0_iter5_reg when (and_ln151_7_fu_2960_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln151_8_fu_3015_p3 <= 
        out_57_reg_3378_pp0_iter5_reg when (and_ln151_8_fu_3009_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln151_9_fu_3064_p3 <= 
        out_58_reg_3385_pp0_iter5_reg when (and_ln151_9_fu_3058_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln151_fu_2623_p3 <= 
        out_reg_3322_pp0_iter5_reg when (and_ln151_fu_2617_p2(0) = '1') else 
        ap_const_lv32_0;
    tmp_103_fu_1892_p27 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_104_fu_1952_p27 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_105_fu_2012_p27 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_106_fu_2072_p27 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_107_fu_2132_p27 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_108_fu_2192_p27 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_109_fu_2252_p27 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_110_fu_2312_p27 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_111_fu_2372_p27 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_112_fu_2432_p27 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_113_fu_2492_p27 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_168_fu_2585_p4 <= bitcast_ln151_fu_2582_p1(30 downto 23);
    tmp_170_fu_2634_p4 <= bitcast_ln151_1_fu_2631_p1(30 downto 23);
    tmp_172_fu_2683_p4 <= bitcast_ln151_2_fu_2680_p1(30 downto 23);
    tmp_174_fu_2732_p4 <= bitcast_ln151_3_fu_2729_p1(30 downto 23);
    tmp_176_fu_2781_p4 <= bitcast_ln151_4_fu_2778_p1(30 downto 23);
    tmp_178_fu_2830_p4 <= bitcast_ln151_5_fu_2827_p1(30 downto 23);
    tmp_180_fu_2879_p4 <= bitcast_ln151_6_fu_2876_p1(30 downto 23);
    tmp_182_fu_2928_p4 <= bitcast_ln151_7_fu_2925_p1(30 downto 23);
    tmp_184_fu_2977_p4 <= bitcast_ln151_8_fu_2974_p1(30 downto 23);
    tmp_186_fu_3026_p4 <= bitcast_ln151_9_fu_3023_p1(30 downto 23);
    tmp_188_fu_3075_p4 <= bitcast_ln151_10_fu_3072_p1(30 downto 23);
    tmp_190_fu_3124_p4 <= bitcast_ln151_11_fu_3121_p1(30 downto 23);
    tmp_192_fu_3173_p4 <= bitcast_ln151_12_fu_3170_p1(30 downto 23);
    tmp_fu_1772_p27 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_s_fu_1832_p27 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    trunc_ln151_10_fu_3085_p1 <= bitcast_ln151_10_fu_3072_p1(23 - 1 downto 0);
    trunc_ln151_11_fu_3134_p1 <= bitcast_ln151_11_fu_3121_p1(23 - 1 downto 0);
    trunc_ln151_12_fu_3183_p1 <= bitcast_ln151_12_fu_3170_p1(23 - 1 downto 0);
    trunc_ln151_1_fu_2644_p1 <= bitcast_ln151_1_fu_2631_p1(23 - 1 downto 0);
    trunc_ln151_2_fu_2693_p1 <= bitcast_ln151_2_fu_2680_p1(23 - 1 downto 0);
    trunc_ln151_3_fu_2742_p1 <= bitcast_ln151_3_fu_2729_p1(23 - 1 downto 0);
    trunc_ln151_4_fu_2791_p1 <= bitcast_ln151_4_fu_2778_p1(23 - 1 downto 0);
    trunc_ln151_5_fu_2840_p1 <= bitcast_ln151_5_fu_2827_p1(23 - 1 downto 0);
    trunc_ln151_6_fu_2889_p1 <= bitcast_ln151_6_fu_2876_p1(23 - 1 downto 0);
    trunc_ln151_7_fu_2938_p1 <= bitcast_ln151_7_fu_2925_p1(23 - 1 downto 0);
    trunc_ln151_8_fu_2987_p1 <= bitcast_ln151_8_fu_2974_p1(23 - 1 downto 0);
    trunc_ln151_9_fu_3036_p1 <= bitcast_ln151_9_fu_3023_p1(23 - 1 downto 0);
    trunc_ln151_fu_2595_p1 <= bitcast_ln151_fu_2582_p1(23 - 1 downto 0);
    zext_ln144_fu_2557_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_9_reg_3248_pp0_iter5_reg),13));
    zext_ln148_fu_2565_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln148_fu_2560_p2),64));
end behav;
