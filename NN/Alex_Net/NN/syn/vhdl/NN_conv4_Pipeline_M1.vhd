-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity NN_conv4_Pipeline_M1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    out_img_12_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_img_12_ce0 : OUT STD_LOGIC;
    out_img_12_we0 : OUT STD_LOGIC;
    out_img_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_img_11_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_img_11_ce0 : OUT STD_LOGIC;
    out_img_11_we0 : OUT STD_LOGIC;
    out_img_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_img_10_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_img_10_ce0 : OUT STD_LOGIC;
    out_img_10_we0 : OUT STD_LOGIC;
    out_img_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_img_9_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_img_9_ce0 : OUT STD_LOGIC;
    out_img_9_we0 : OUT STD_LOGIC;
    out_img_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_img_8_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_img_8_ce0 : OUT STD_LOGIC;
    out_img_8_we0 : OUT STD_LOGIC;
    out_img_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_img_7_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_img_7_ce0 : OUT STD_LOGIC;
    out_img_7_we0 : OUT STD_LOGIC;
    out_img_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_img_6_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_img_6_ce0 : OUT STD_LOGIC;
    out_img_6_we0 : OUT STD_LOGIC;
    out_img_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_img_5_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_img_5_ce0 : OUT STD_LOGIC;
    out_img_5_we0 : OUT STD_LOGIC;
    out_img_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_img_4_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_img_4_ce0 : OUT STD_LOGIC;
    out_img_4_we0 : OUT STD_LOGIC;
    out_img_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_img_3_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_img_3_ce0 : OUT STD_LOGIC;
    out_img_3_we0 : OUT STD_LOGIC;
    out_img_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_img_2_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_img_2_ce0 : OUT STD_LOGIC;
    out_img_2_we0 : OUT STD_LOGIC;
    out_img_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_img_1_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_img_1_ce0 : OUT STD_LOGIC;
    out_img_1_we0 : OUT STD_LOGIC;
    out_img_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_img_0_address0 : OUT STD_LOGIC_VECTOR (12 downto 0);
    out_img_0_ce0 : OUT STD_LOGIC;
    out_img_0_we0 : OUT STD_LOGIC;
    out_img_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    phi_mul182 : IN STD_LOGIC_VECTOR (11 downto 0);
    add1809237_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_19250_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_29263_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_39276_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_49289_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_59302_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_69315_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_79328_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_89341_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_99354_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_109367_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_119380_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_129393_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    bias_conv4_load : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_182599238_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1_19251_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_2_19264_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_3_19277_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_4_19290_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_5_19303_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_6_19316_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_7_19329_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_8_19342_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_9_19355_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_10_19368_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_11_19381_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_12_19394_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_282769239_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1_29252_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_2_29265_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_3_29278_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_4_29291_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_5_29304_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_6_29317_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_7_29330_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_8_29343_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_9_29356_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_10_29369_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_11_29382_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_12_29395_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_382939240_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1_39253_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_2_39266_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_3_39279_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_4_39292_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_5_39305_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_6_39318_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_7_39331_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_8_39344_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_9_39357_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_10_39370_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_11_39383_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_12_39396_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_483109241_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1_49254_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_2_49267_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_3_49280_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_4_49293_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_5_49306_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_6_49319_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_7_49332_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_8_49345_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_9_49358_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_10_49371_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_11_49384_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_12_49397_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_583279242_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1_59255_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_2_59268_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_3_59281_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_4_59294_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_5_59307_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_6_59320_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_7_59333_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_8_59346_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_9_59359_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_10_59372_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_11_59385_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_12_59398_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_683449243_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1_69256_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_2_69269_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_3_69282_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_4_69295_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_5_69308_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_6_69321_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_7_69334_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_8_69347_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_9_69360_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_10_69373_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_11_69386_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_12_69399_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_783619244_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1_79257_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_2_79270_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_3_79283_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_4_79296_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_5_79309_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_6_79322_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_7_79335_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_8_79348_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_9_79361_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_10_79374_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_11_79387_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_12_79400_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_883789245_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1_89258_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_2_89271_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_3_89284_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_4_89297_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_5_89310_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_6_89323_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_7_89336_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_8_89349_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_9_89362_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_10_89375_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_11_89388_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_12_89401_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_983959246_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1_99259_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_2_99272_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_3_99285_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_4_99298_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_5_99311_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_6_99324_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_7_99337_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_8_99350_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_9_99363_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_10_99376_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_11_99389_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_12_99402_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1084129247_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1_109260_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_2_109273_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_3_109286_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_4_109299_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_5_109312_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_6_109325_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_7_109338_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_8_109351_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_9_109364_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_10_109377_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_11_109390_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_12_109403_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1184299248_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1_119261_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_2_119274_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_3_119287_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_4_119300_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_5_119313_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_6_119326_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_7_119339_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_8_119352_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_9_119365_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_10_119378_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_11_119391_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_12_119404_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1284469249_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_1_129262_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_2_129275_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_3_129288_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_4_129301_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_5_129314_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_6_129327_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_7_129340_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_8_129353_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_9_129366_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_10_129379_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_11_129392_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    add180_12_129414_reload : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22647_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22647_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22647_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_22647_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22647_p_ce : OUT STD_LOGIC;
    grp_fu_22651_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22651_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22651_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_22651_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22651_p_ce : OUT STD_LOGIC;
    grp_fu_22655_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22655_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22655_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_22655_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22655_p_ce : OUT STD_LOGIC;
    grp_fu_22659_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22659_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22659_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_22659_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22659_p_ce : OUT STD_LOGIC;
    grp_fu_22663_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22663_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22663_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_22663_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22663_p_ce : OUT STD_LOGIC;
    grp_fu_22667_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22667_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22667_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_22667_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22667_p_ce : OUT STD_LOGIC;
    grp_fu_22671_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22671_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22671_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_22671_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22671_p_ce : OUT STD_LOGIC;
    grp_fu_22675_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22675_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22675_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_22675_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22675_p_ce : OUT STD_LOGIC;
    grp_fu_22679_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22679_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22679_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_22679_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22679_p_ce : OUT STD_LOGIC;
    grp_fu_22683_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22683_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22683_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_22683_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22683_p_ce : OUT STD_LOGIC;
    grp_fu_22687_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22687_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22687_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_22687_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22687_p_ce : OUT STD_LOGIC;
    grp_fu_22691_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22691_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22691_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_22691_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22691_p_ce : OUT STD_LOGIC;
    grp_fu_22695_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22695_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22695_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_22695_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_22695_p_ce : OUT STD_LOGIC;
    grp_fu_26659_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_26659_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_26659_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_26659_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_26659_p_ce : OUT STD_LOGIC;
    grp_fu_26663_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_26663_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_26663_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_26663_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_26663_p_ce : OUT STD_LOGIC;
    grp_fu_26667_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_26667_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_26667_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_26667_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_26667_p_ce : OUT STD_LOGIC;
    grp_fu_26671_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_26671_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_26671_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_26671_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_26671_p_ce : OUT STD_LOGIC;
    grp_fu_26675_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_26675_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_26675_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_26675_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_26675_p_ce : OUT STD_LOGIC;
    grp_fu_26679_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_26679_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_26679_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_26679_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_26679_p_ce : OUT STD_LOGIC;
    grp_fu_26683_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_26683_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_26683_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_26683_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_26683_p_ce : OUT STD_LOGIC;
    grp_fu_26687_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_26687_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_26687_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_26687_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_26687_p_ce : OUT STD_LOGIC;
    grp_fu_26691_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_26691_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_26691_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_26691_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_26691_p_ce : OUT STD_LOGIC;
    grp_fu_26695_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_26695_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_26695_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_26695_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_26695_p_ce : OUT STD_LOGIC;
    grp_fu_26699_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_26699_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_26699_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_26699_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_26699_p_ce : OUT STD_LOGIC;
    grp_fu_26703_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_26703_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_26703_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_26703_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_26703_p_ce : OUT STD_LOGIC;
    grp_fu_26707_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_26707_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_26707_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_26707_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_26707_p_ce : OUT STD_LOGIC );
end;


architecture behav of NN_conv4_Pipeline_M1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_D : STD_LOGIC_VECTOR (3 downto 0) := "1101";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln136_fu_1760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_reg_3248 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_3248_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_3248_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_3248_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_3248_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_3248_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_1772_p29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_3257 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_1832_p29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_3262 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_79_fu_1892_p29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_79_reg_3267 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_80_fu_1952_p29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_80_reg_3272 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_81_fu_2012_p29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_81_reg_3277 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_fu_2072_p29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_reg_3282 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_83_fu_2132_p29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_83_reg_3287 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_84_fu_2192_p29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_84_reg_3292 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_85_fu_2252_p29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_85_reg_3297 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_fu_2312_p29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_reg_3302 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_87_fu_2372_p29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_87_reg_3307 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_88_fu_2432_p29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_88_reg_3312 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_89_fu_2492_p29 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_89_reg_3317 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_reg_3322 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_reg_3322_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal out_38_reg_3329 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_38_reg_3329_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal out_39_reg_3336 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_39_reg_3336_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal out_40_reg_3343 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_40_reg_3343_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal out_41_reg_3350 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_41_reg_3350_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal out_42_reg_3357 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_42_reg_3357_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal out_43_reg_3364 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_43_reg_3364_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal out_44_reg_3371 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_44_reg_3371_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal out_45_reg_3378 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_45_reg_3378_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal out_46_reg_3385 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_46_reg_3385_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal out_47_reg_3392 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_47_reg_3392_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal out_48_reg_3399 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_48_reg_3399_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal out_49_reg_3406 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_49_reg_3406_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln140_fu_2565_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal i_7_fu_436 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal add_ln136_fu_1766_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i : STD_LOGIC_VECTOR (3 downto 0);
    signal out_img_0_we0_local : STD_LOGIC;
    signal select_ln143_fu_2623_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_img_0_ce0_local : STD_LOGIC;
    signal out_img_1_we0_local : STD_LOGIC;
    signal select_ln143_1_fu_2672_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_img_1_ce0_local : STD_LOGIC;
    signal out_img_2_we0_local : STD_LOGIC;
    signal select_ln143_2_fu_2721_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_img_2_ce0_local : STD_LOGIC;
    signal out_img_3_we0_local : STD_LOGIC;
    signal select_ln143_3_fu_2770_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_img_3_ce0_local : STD_LOGIC;
    signal out_img_4_we0_local : STD_LOGIC;
    signal select_ln143_4_fu_2819_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_img_4_ce0_local : STD_LOGIC;
    signal out_img_5_we0_local : STD_LOGIC;
    signal select_ln143_5_fu_2868_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_img_5_ce0_local : STD_LOGIC;
    signal out_img_6_we0_local : STD_LOGIC;
    signal select_ln143_6_fu_2917_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_img_6_ce0_local : STD_LOGIC;
    signal out_img_7_we0_local : STD_LOGIC;
    signal select_ln143_7_fu_2966_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_img_7_ce0_local : STD_LOGIC;
    signal out_img_8_we0_local : STD_LOGIC;
    signal select_ln143_8_fu_3015_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_img_8_ce0_local : STD_LOGIC;
    signal out_img_9_we0_local : STD_LOGIC;
    signal select_ln143_9_fu_3064_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_img_9_ce0_local : STD_LOGIC;
    signal out_img_10_we0_local : STD_LOGIC;
    signal select_ln143_10_fu_3113_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_img_10_ce0_local : STD_LOGIC;
    signal out_img_11_we0_local : STD_LOGIC;
    signal select_ln143_11_fu_3162_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_img_11_ce0_local : STD_LOGIC;
    signal out_img_12_we0_local : STD_LOGIC;
    signal select_ln143_12_fu_3211_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_img_12_ce0_local : STD_LOGIC;
    signal tmp_fu_1772_p27 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_1832_p27 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_79_fu_1892_p27 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_80_fu_1952_p27 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_81_fu_2012_p27 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_82_fu_2072_p27 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_83_fu_2132_p27 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_84_fu_2192_p27 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_85_fu_2252_p27 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_86_fu_2312_p27 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_87_fu_2372_p27 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_88_fu_2432_p27 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_89_fu_2492_p27 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln136_fu_2557_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln140_fu_2560_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal bitcast_ln143_fu_2582_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_142_fu_2585_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln143_fu_2595_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln143_1_fu_2605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln143_fu_2599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln143_fu_2611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln143_fu_2617_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln143_1_fu_2631_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_144_fu_2634_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln143_1_fu_2644_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln143_3_fu_2654_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln143_2_fu_2648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln143_1_fu_2660_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln143_1_fu_2666_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln143_2_fu_2680_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_146_fu_2683_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln143_2_fu_2693_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln143_5_fu_2703_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln143_4_fu_2697_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln143_2_fu_2709_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln143_2_fu_2715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln143_3_fu_2729_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_148_fu_2732_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln143_3_fu_2742_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln143_7_fu_2752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln143_6_fu_2746_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln143_3_fu_2758_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln143_3_fu_2764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln143_4_fu_2778_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_150_fu_2781_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln143_4_fu_2791_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln143_9_fu_2801_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln143_8_fu_2795_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln143_4_fu_2807_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln143_4_fu_2813_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln143_5_fu_2827_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_152_fu_2830_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln143_5_fu_2840_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln143_11_fu_2850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln143_10_fu_2844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln143_5_fu_2856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln143_5_fu_2862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln143_6_fu_2876_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_154_fu_2879_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln143_6_fu_2889_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln143_13_fu_2899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln143_12_fu_2893_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln143_6_fu_2905_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln143_6_fu_2911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln143_7_fu_2925_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_156_fu_2928_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln143_7_fu_2938_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln143_15_fu_2948_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln143_14_fu_2942_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln143_7_fu_2954_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln143_7_fu_2960_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln143_8_fu_2974_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_158_fu_2977_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln143_8_fu_2987_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln143_17_fu_2997_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln143_16_fu_2991_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln143_8_fu_3003_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln143_8_fu_3009_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln143_9_fu_3023_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_160_fu_3026_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln143_9_fu_3036_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln143_19_fu_3046_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln143_18_fu_3040_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln143_9_fu_3052_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln143_9_fu_3058_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln143_10_fu_3072_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_162_fu_3075_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln143_10_fu_3085_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln143_21_fu_3095_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln143_20_fu_3089_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln143_10_fu_3101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln143_10_fu_3107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln143_11_fu_3121_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_164_fu_3124_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln143_11_fu_3134_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln143_23_fu_3144_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln143_22_fu_3138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln143_11_fu_3150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln143_11_fu_3156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln143_12_fu_3170_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_166_fu_3173_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln143_12_fu_3183_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln143_25_fu_3193_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln143_24_fu_3187_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln143_12_fu_3199_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln143_12_fu_3205_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal tmp_fu_1772_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_1772_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_1772_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_1772_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_1772_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_1772_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_1772_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_1772_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_1772_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_1772_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_1772_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_1772_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_fu_1772_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_1832_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_1832_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_1832_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_1832_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_1832_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_1832_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_1832_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_1832_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_1832_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_1832_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_1832_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_1832_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_1832_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_79_fu_1892_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_79_fu_1892_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_79_fu_1892_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_79_fu_1892_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_79_fu_1892_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_79_fu_1892_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_79_fu_1892_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_79_fu_1892_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_79_fu_1892_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_79_fu_1892_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_79_fu_1892_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_79_fu_1892_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_79_fu_1892_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_80_fu_1952_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_80_fu_1952_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_80_fu_1952_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_80_fu_1952_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_80_fu_1952_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_80_fu_1952_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_80_fu_1952_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_80_fu_1952_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_80_fu_1952_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_80_fu_1952_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_80_fu_1952_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_80_fu_1952_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_80_fu_1952_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_81_fu_2012_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_81_fu_2012_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_81_fu_2012_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_81_fu_2012_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_81_fu_2012_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_81_fu_2012_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_81_fu_2012_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_81_fu_2012_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_81_fu_2012_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_81_fu_2012_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_81_fu_2012_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_81_fu_2012_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_81_fu_2012_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_82_fu_2072_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_82_fu_2072_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_82_fu_2072_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_82_fu_2072_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_82_fu_2072_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_82_fu_2072_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_82_fu_2072_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_82_fu_2072_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_82_fu_2072_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_82_fu_2072_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_82_fu_2072_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_82_fu_2072_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_82_fu_2072_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_83_fu_2132_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_83_fu_2132_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_83_fu_2132_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_83_fu_2132_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_83_fu_2132_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_83_fu_2132_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_83_fu_2132_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_83_fu_2132_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_83_fu_2132_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_83_fu_2132_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_83_fu_2132_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_83_fu_2132_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_83_fu_2132_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_84_fu_2192_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_84_fu_2192_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_84_fu_2192_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_84_fu_2192_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_84_fu_2192_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_84_fu_2192_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_84_fu_2192_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_84_fu_2192_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_84_fu_2192_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_84_fu_2192_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_84_fu_2192_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_84_fu_2192_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_84_fu_2192_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_85_fu_2252_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_85_fu_2252_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_85_fu_2252_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_85_fu_2252_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_85_fu_2252_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_85_fu_2252_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_85_fu_2252_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_85_fu_2252_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_85_fu_2252_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_85_fu_2252_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_85_fu_2252_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_85_fu_2252_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_85_fu_2252_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_86_fu_2312_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_86_fu_2312_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_86_fu_2312_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_86_fu_2312_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_86_fu_2312_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_86_fu_2312_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_86_fu_2312_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_86_fu_2312_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_86_fu_2312_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_86_fu_2312_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_86_fu_2312_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_86_fu_2312_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_86_fu_2312_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_87_fu_2372_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_87_fu_2372_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_87_fu_2372_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_87_fu_2372_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_87_fu_2372_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_87_fu_2372_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_87_fu_2372_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_87_fu_2372_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_87_fu_2372_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_87_fu_2372_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_87_fu_2372_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_87_fu_2372_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_87_fu_2372_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_88_fu_2432_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_88_fu_2432_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_88_fu_2432_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_88_fu_2432_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_88_fu_2432_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_88_fu_2432_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_88_fu_2432_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_88_fu_2432_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_88_fu_2432_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_88_fu_2432_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_88_fu_2432_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_88_fu_2432_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_88_fu_2432_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_89_fu_2492_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_89_fu_2492_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_89_fu_2492_p5 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_89_fu_2492_p7 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_89_fu_2492_p9 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_89_fu_2492_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_89_fu_2492_p13 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_89_fu_2492_p15 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_89_fu_2492_p17 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_89_fu_2492_p19 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_89_fu_2492_p21 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_89_fu_2492_p23 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_89_fu_2492_p25 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component NN_fadd_32ns_32ns_32_4_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component NN_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component NN_sparsemux_27_4_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (3 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (3 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (3 downto 0);
        din2_WIDTH : INTEGER;
        CASE3 : STD_LOGIC_VECTOR (3 downto 0);
        din3_WIDTH : INTEGER;
        CASE4 : STD_LOGIC_VECTOR (3 downto 0);
        din4_WIDTH : INTEGER;
        CASE5 : STD_LOGIC_VECTOR (3 downto 0);
        din5_WIDTH : INTEGER;
        CASE6 : STD_LOGIC_VECTOR (3 downto 0);
        din6_WIDTH : INTEGER;
        CASE7 : STD_LOGIC_VECTOR (3 downto 0);
        din7_WIDTH : INTEGER;
        CASE8 : STD_LOGIC_VECTOR (3 downto 0);
        din8_WIDTH : INTEGER;
        CASE9 : STD_LOGIC_VECTOR (3 downto 0);
        din9_WIDTH : INTEGER;
        CASE10 : STD_LOGIC_VECTOR (3 downto 0);
        din10_WIDTH : INTEGER;
        CASE11 : STD_LOGIC_VECTOR (3 downto 0);
        din11_WIDTH : INTEGER;
        CASE12 : STD_LOGIC_VECTOR (3 downto 0);
        din12_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        def : IN STD_LOGIC_VECTOR (31 downto 0);
        sel : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component NN_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    sparsemux_27_4_32_1_1_U16800 : component NN_sparsemux_27_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0001",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0011",
        din3_WIDTH => 32,
        CASE4 => "0100",
        din4_WIDTH => 32,
        CASE5 => "0101",
        din5_WIDTH => 32,
        CASE6 => "0110",
        din6_WIDTH => 32,
        CASE7 => "0111",
        din7_WIDTH => 32,
        CASE8 => "1000",
        din8_WIDTH => 32,
        CASE9 => "1001",
        din9_WIDTH => 32,
        CASE10 => "1010",
        din10_WIDTH => 32,
        CASE11 => "1011",
        din11_WIDTH => 32,
        CASE12 => "1100",
        din12_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => add1809237_reload,
        din1 => add180_19250_reload,
        din2 => add180_29263_reload,
        din3 => add180_39276_reload,
        din4 => add180_49289_reload,
        din5 => add180_59302_reload,
        din6 => add180_69315_reload,
        din7 => add180_79328_reload,
        din8 => add180_89341_reload,
        din9 => add180_99354_reload,
        din10 => add180_109367_reload,
        din11 => add180_119380_reload,
        din12 => add180_129393_reload,
        def => tmp_fu_1772_p27,
        sel => ap_sig_allocacmp_i,
        dout => tmp_fu_1772_p29);

    sparsemux_27_4_32_1_1_U16801 : component NN_sparsemux_27_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0001",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0011",
        din3_WIDTH => 32,
        CASE4 => "0100",
        din4_WIDTH => 32,
        CASE5 => "0101",
        din5_WIDTH => 32,
        CASE6 => "0110",
        din6_WIDTH => 32,
        CASE7 => "0111",
        din7_WIDTH => 32,
        CASE8 => "1000",
        din8_WIDTH => 32,
        CASE9 => "1001",
        din9_WIDTH => 32,
        CASE10 => "1010",
        din10_WIDTH => 32,
        CASE11 => "1011",
        din11_WIDTH => 32,
        CASE12 => "1100",
        din12_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => add180_182599238_reload,
        din1 => add180_1_19251_reload,
        din2 => add180_2_19264_reload,
        din3 => add180_3_19277_reload,
        din4 => add180_4_19290_reload,
        din5 => add180_5_19303_reload,
        din6 => add180_6_19316_reload,
        din7 => add180_7_19329_reload,
        din8 => add180_8_19342_reload,
        din9 => add180_9_19355_reload,
        din10 => add180_10_19368_reload,
        din11 => add180_11_19381_reload,
        din12 => add180_12_19394_reload,
        def => tmp_s_fu_1832_p27,
        sel => ap_sig_allocacmp_i,
        dout => tmp_s_fu_1832_p29);

    sparsemux_27_4_32_1_1_U16802 : component NN_sparsemux_27_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0001",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0011",
        din3_WIDTH => 32,
        CASE4 => "0100",
        din4_WIDTH => 32,
        CASE5 => "0101",
        din5_WIDTH => 32,
        CASE6 => "0110",
        din6_WIDTH => 32,
        CASE7 => "0111",
        din7_WIDTH => 32,
        CASE8 => "1000",
        din8_WIDTH => 32,
        CASE9 => "1001",
        din9_WIDTH => 32,
        CASE10 => "1010",
        din10_WIDTH => 32,
        CASE11 => "1011",
        din11_WIDTH => 32,
        CASE12 => "1100",
        din12_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => add180_282769239_reload,
        din1 => add180_1_29252_reload,
        din2 => add180_2_29265_reload,
        din3 => add180_3_29278_reload,
        din4 => add180_4_29291_reload,
        din5 => add180_5_29304_reload,
        din6 => add180_6_29317_reload,
        din7 => add180_7_29330_reload,
        din8 => add180_8_29343_reload,
        din9 => add180_9_29356_reload,
        din10 => add180_10_29369_reload,
        din11 => add180_11_29382_reload,
        din12 => add180_12_29395_reload,
        def => tmp_79_fu_1892_p27,
        sel => ap_sig_allocacmp_i,
        dout => tmp_79_fu_1892_p29);

    sparsemux_27_4_32_1_1_U16803 : component NN_sparsemux_27_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0001",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0011",
        din3_WIDTH => 32,
        CASE4 => "0100",
        din4_WIDTH => 32,
        CASE5 => "0101",
        din5_WIDTH => 32,
        CASE6 => "0110",
        din6_WIDTH => 32,
        CASE7 => "0111",
        din7_WIDTH => 32,
        CASE8 => "1000",
        din8_WIDTH => 32,
        CASE9 => "1001",
        din9_WIDTH => 32,
        CASE10 => "1010",
        din10_WIDTH => 32,
        CASE11 => "1011",
        din11_WIDTH => 32,
        CASE12 => "1100",
        din12_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => add180_382939240_reload,
        din1 => add180_1_39253_reload,
        din2 => add180_2_39266_reload,
        din3 => add180_3_39279_reload,
        din4 => add180_4_39292_reload,
        din5 => add180_5_39305_reload,
        din6 => add180_6_39318_reload,
        din7 => add180_7_39331_reload,
        din8 => add180_8_39344_reload,
        din9 => add180_9_39357_reload,
        din10 => add180_10_39370_reload,
        din11 => add180_11_39383_reload,
        din12 => add180_12_39396_reload,
        def => tmp_80_fu_1952_p27,
        sel => ap_sig_allocacmp_i,
        dout => tmp_80_fu_1952_p29);

    sparsemux_27_4_32_1_1_U16804 : component NN_sparsemux_27_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0001",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0011",
        din3_WIDTH => 32,
        CASE4 => "0100",
        din4_WIDTH => 32,
        CASE5 => "0101",
        din5_WIDTH => 32,
        CASE6 => "0110",
        din6_WIDTH => 32,
        CASE7 => "0111",
        din7_WIDTH => 32,
        CASE8 => "1000",
        din8_WIDTH => 32,
        CASE9 => "1001",
        din9_WIDTH => 32,
        CASE10 => "1010",
        din10_WIDTH => 32,
        CASE11 => "1011",
        din11_WIDTH => 32,
        CASE12 => "1100",
        din12_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => add180_483109241_reload,
        din1 => add180_1_49254_reload,
        din2 => add180_2_49267_reload,
        din3 => add180_3_49280_reload,
        din4 => add180_4_49293_reload,
        din5 => add180_5_49306_reload,
        din6 => add180_6_49319_reload,
        din7 => add180_7_49332_reload,
        din8 => add180_8_49345_reload,
        din9 => add180_9_49358_reload,
        din10 => add180_10_49371_reload,
        din11 => add180_11_49384_reload,
        din12 => add180_12_49397_reload,
        def => tmp_81_fu_2012_p27,
        sel => ap_sig_allocacmp_i,
        dout => tmp_81_fu_2012_p29);

    sparsemux_27_4_32_1_1_U16805 : component NN_sparsemux_27_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0001",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0011",
        din3_WIDTH => 32,
        CASE4 => "0100",
        din4_WIDTH => 32,
        CASE5 => "0101",
        din5_WIDTH => 32,
        CASE6 => "0110",
        din6_WIDTH => 32,
        CASE7 => "0111",
        din7_WIDTH => 32,
        CASE8 => "1000",
        din8_WIDTH => 32,
        CASE9 => "1001",
        din9_WIDTH => 32,
        CASE10 => "1010",
        din10_WIDTH => 32,
        CASE11 => "1011",
        din11_WIDTH => 32,
        CASE12 => "1100",
        din12_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => add180_583279242_reload,
        din1 => add180_1_59255_reload,
        din2 => add180_2_59268_reload,
        din3 => add180_3_59281_reload,
        din4 => add180_4_59294_reload,
        din5 => add180_5_59307_reload,
        din6 => add180_6_59320_reload,
        din7 => add180_7_59333_reload,
        din8 => add180_8_59346_reload,
        din9 => add180_9_59359_reload,
        din10 => add180_10_59372_reload,
        din11 => add180_11_59385_reload,
        din12 => add180_12_59398_reload,
        def => tmp_82_fu_2072_p27,
        sel => ap_sig_allocacmp_i,
        dout => tmp_82_fu_2072_p29);

    sparsemux_27_4_32_1_1_U16806 : component NN_sparsemux_27_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0001",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0011",
        din3_WIDTH => 32,
        CASE4 => "0100",
        din4_WIDTH => 32,
        CASE5 => "0101",
        din5_WIDTH => 32,
        CASE6 => "0110",
        din6_WIDTH => 32,
        CASE7 => "0111",
        din7_WIDTH => 32,
        CASE8 => "1000",
        din8_WIDTH => 32,
        CASE9 => "1001",
        din9_WIDTH => 32,
        CASE10 => "1010",
        din10_WIDTH => 32,
        CASE11 => "1011",
        din11_WIDTH => 32,
        CASE12 => "1100",
        din12_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => add180_683449243_reload,
        din1 => add180_1_69256_reload,
        din2 => add180_2_69269_reload,
        din3 => add180_3_69282_reload,
        din4 => add180_4_69295_reload,
        din5 => add180_5_69308_reload,
        din6 => add180_6_69321_reload,
        din7 => add180_7_69334_reload,
        din8 => add180_8_69347_reload,
        din9 => add180_9_69360_reload,
        din10 => add180_10_69373_reload,
        din11 => add180_11_69386_reload,
        din12 => add180_12_69399_reload,
        def => tmp_83_fu_2132_p27,
        sel => ap_sig_allocacmp_i,
        dout => tmp_83_fu_2132_p29);

    sparsemux_27_4_32_1_1_U16807 : component NN_sparsemux_27_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0001",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0011",
        din3_WIDTH => 32,
        CASE4 => "0100",
        din4_WIDTH => 32,
        CASE5 => "0101",
        din5_WIDTH => 32,
        CASE6 => "0110",
        din6_WIDTH => 32,
        CASE7 => "0111",
        din7_WIDTH => 32,
        CASE8 => "1000",
        din8_WIDTH => 32,
        CASE9 => "1001",
        din9_WIDTH => 32,
        CASE10 => "1010",
        din10_WIDTH => 32,
        CASE11 => "1011",
        din11_WIDTH => 32,
        CASE12 => "1100",
        din12_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => add180_783619244_reload,
        din1 => add180_1_79257_reload,
        din2 => add180_2_79270_reload,
        din3 => add180_3_79283_reload,
        din4 => add180_4_79296_reload,
        din5 => add180_5_79309_reload,
        din6 => add180_6_79322_reload,
        din7 => add180_7_79335_reload,
        din8 => add180_8_79348_reload,
        din9 => add180_9_79361_reload,
        din10 => add180_10_79374_reload,
        din11 => add180_11_79387_reload,
        din12 => add180_12_79400_reload,
        def => tmp_84_fu_2192_p27,
        sel => ap_sig_allocacmp_i,
        dout => tmp_84_fu_2192_p29);

    sparsemux_27_4_32_1_1_U16808 : component NN_sparsemux_27_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0001",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0011",
        din3_WIDTH => 32,
        CASE4 => "0100",
        din4_WIDTH => 32,
        CASE5 => "0101",
        din5_WIDTH => 32,
        CASE6 => "0110",
        din6_WIDTH => 32,
        CASE7 => "0111",
        din7_WIDTH => 32,
        CASE8 => "1000",
        din8_WIDTH => 32,
        CASE9 => "1001",
        din9_WIDTH => 32,
        CASE10 => "1010",
        din10_WIDTH => 32,
        CASE11 => "1011",
        din11_WIDTH => 32,
        CASE12 => "1100",
        din12_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => add180_883789245_reload,
        din1 => add180_1_89258_reload,
        din2 => add180_2_89271_reload,
        din3 => add180_3_89284_reload,
        din4 => add180_4_89297_reload,
        din5 => add180_5_89310_reload,
        din6 => add180_6_89323_reload,
        din7 => add180_7_89336_reload,
        din8 => add180_8_89349_reload,
        din9 => add180_9_89362_reload,
        din10 => add180_10_89375_reload,
        din11 => add180_11_89388_reload,
        din12 => add180_12_89401_reload,
        def => tmp_85_fu_2252_p27,
        sel => ap_sig_allocacmp_i,
        dout => tmp_85_fu_2252_p29);

    sparsemux_27_4_32_1_1_U16809 : component NN_sparsemux_27_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0001",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0011",
        din3_WIDTH => 32,
        CASE4 => "0100",
        din4_WIDTH => 32,
        CASE5 => "0101",
        din5_WIDTH => 32,
        CASE6 => "0110",
        din6_WIDTH => 32,
        CASE7 => "0111",
        din7_WIDTH => 32,
        CASE8 => "1000",
        din8_WIDTH => 32,
        CASE9 => "1001",
        din9_WIDTH => 32,
        CASE10 => "1010",
        din10_WIDTH => 32,
        CASE11 => "1011",
        din11_WIDTH => 32,
        CASE12 => "1100",
        din12_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => add180_983959246_reload,
        din1 => add180_1_99259_reload,
        din2 => add180_2_99272_reload,
        din3 => add180_3_99285_reload,
        din4 => add180_4_99298_reload,
        din5 => add180_5_99311_reload,
        din6 => add180_6_99324_reload,
        din7 => add180_7_99337_reload,
        din8 => add180_8_99350_reload,
        din9 => add180_9_99363_reload,
        din10 => add180_10_99376_reload,
        din11 => add180_11_99389_reload,
        din12 => add180_12_99402_reload,
        def => tmp_86_fu_2312_p27,
        sel => ap_sig_allocacmp_i,
        dout => tmp_86_fu_2312_p29);

    sparsemux_27_4_32_1_1_U16810 : component NN_sparsemux_27_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0001",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0011",
        din3_WIDTH => 32,
        CASE4 => "0100",
        din4_WIDTH => 32,
        CASE5 => "0101",
        din5_WIDTH => 32,
        CASE6 => "0110",
        din6_WIDTH => 32,
        CASE7 => "0111",
        din7_WIDTH => 32,
        CASE8 => "1000",
        din8_WIDTH => 32,
        CASE9 => "1001",
        din9_WIDTH => 32,
        CASE10 => "1010",
        din10_WIDTH => 32,
        CASE11 => "1011",
        din11_WIDTH => 32,
        CASE12 => "1100",
        din12_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => add180_1084129247_reload,
        din1 => add180_1_109260_reload,
        din2 => add180_2_109273_reload,
        din3 => add180_3_109286_reload,
        din4 => add180_4_109299_reload,
        din5 => add180_5_109312_reload,
        din6 => add180_6_109325_reload,
        din7 => add180_7_109338_reload,
        din8 => add180_8_109351_reload,
        din9 => add180_9_109364_reload,
        din10 => add180_10_109377_reload,
        din11 => add180_11_109390_reload,
        din12 => add180_12_109403_reload,
        def => tmp_87_fu_2372_p27,
        sel => ap_sig_allocacmp_i,
        dout => tmp_87_fu_2372_p29);

    sparsemux_27_4_32_1_1_U16811 : component NN_sparsemux_27_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0001",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0011",
        din3_WIDTH => 32,
        CASE4 => "0100",
        din4_WIDTH => 32,
        CASE5 => "0101",
        din5_WIDTH => 32,
        CASE6 => "0110",
        din6_WIDTH => 32,
        CASE7 => "0111",
        din7_WIDTH => 32,
        CASE8 => "1000",
        din8_WIDTH => 32,
        CASE9 => "1001",
        din9_WIDTH => 32,
        CASE10 => "1010",
        din10_WIDTH => 32,
        CASE11 => "1011",
        din11_WIDTH => 32,
        CASE12 => "1100",
        din12_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => add180_1184299248_reload,
        din1 => add180_1_119261_reload,
        din2 => add180_2_119274_reload,
        din3 => add180_3_119287_reload,
        din4 => add180_4_119300_reload,
        din5 => add180_5_119313_reload,
        din6 => add180_6_119326_reload,
        din7 => add180_7_119339_reload,
        din8 => add180_8_119352_reload,
        din9 => add180_9_119365_reload,
        din10 => add180_10_119378_reload,
        din11 => add180_11_119391_reload,
        din12 => add180_12_119404_reload,
        def => tmp_88_fu_2432_p27,
        sel => ap_sig_allocacmp_i,
        dout => tmp_88_fu_2432_p29);

    sparsemux_27_4_32_1_1_U16812 : component NN_sparsemux_27_4_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "0000",
        din0_WIDTH => 32,
        CASE1 => "0001",
        din1_WIDTH => 32,
        CASE2 => "0010",
        din2_WIDTH => 32,
        CASE3 => "0011",
        din3_WIDTH => 32,
        CASE4 => "0100",
        din4_WIDTH => 32,
        CASE5 => "0101",
        din5_WIDTH => 32,
        CASE6 => "0110",
        din6_WIDTH => 32,
        CASE7 => "0111",
        din7_WIDTH => 32,
        CASE8 => "1000",
        din8_WIDTH => 32,
        CASE9 => "1001",
        din9_WIDTH => 32,
        CASE10 => "1010",
        din10_WIDTH => 32,
        CASE11 => "1011",
        din11_WIDTH => 32,
        CASE12 => "1100",
        din12_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => add180_1284469249_reload,
        din1 => add180_1_129262_reload,
        din2 => add180_2_129275_reload,
        din3 => add180_3_129288_reload,
        din4 => add180_4_129301_reload,
        din5 => add180_5_129314_reload,
        din6 => add180_6_129327_reload,
        din7 => add180_7_129340_reload,
        din8 => add180_8_129353_reload,
        din9 => add180_9_129366_reload,
        din10 => add180_10_129379_reload,
        din11 => add180_11_129392_reload,
        din12 => add180_12_129414_reload,
        def => tmp_89_fu_2492_p27,
        sel => ap_sig_allocacmp_i,
        dout => tmp_89_fu_2492_p29);

    flow_control_loop_pipe_sequential_init_U : component NN_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    i_7_fu_436_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln136_fu_1760_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_7_fu_436 <= add_ln136_fu_1766_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_7_fu_436 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                i_reg_3248 <= ap_sig_allocacmp_i;
                i_reg_3248_pp0_iter1_reg <= i_reg_3248;
                tmp_79_reg_3267 <= tmp_79_fu_1892_p29;
                tmp_80_reg_3272 <= tmp_80_fu_1952_p29;
                tmp_81_reg_3277 <= tmp_81_fu_2012_p29;
                tmp_82_reg_3282 <= tmp_82_fu_2072_p29;
                tmp_83_reg_3287 <= tmp_83_fu_2132_p29;
                tmp_84_reg_3292 <= tmp_84_fu_2192_p29;
                tmp_85_reg_3297 <= tmp_85_fu_2252_p29;
                tmp_86_reg_3302 <= tmp_86_fu_2312_p29;
                tmp_87_reg_3307 <= tmp_87_fu_2372_p29;
                tmp_88_reg_3312 <= tmp_88_fu_2432_p29;
                tmp_89_reg_3317 <= tmp_89_fu_2492_p29;
                tmp_reg_3257 <= tmp_fu_1772_p29;
                tmp_s_reg_3262 <= tmp_s_fu_1832_p29;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
                i_reg_3248_pp0_iter2_reg <= i_reg_3248_pp0_iter1_reg;
                i_reg_3248_pp0_iter3_reg <= i_reg_3248_pp0_iter2_reg;
                i_reg_3248_pp0_iter4_reg <= i_reg_3248_pp0_iter3_reg;
                i_reg_3248_pp0_iter5_reg <= i_reg_3248_pp0_iter4_reg;
                out_38_reg_3329 <= grp_fu_22651_p_dout0;
                out_38_reg_3329_pp0_iter5_reg <= out_38_reg_3329;
                out_39_reg_3336 <= grp_fu_22655_p_dout0;
                out_39_reg_3336_pp0_iter5_reg <= out_39_reg_3336;
                out_40_reg_3343 <= grp_fu_22659_p_dout0;
                out_40_reg_3343_pp0_iter5_reg <= out_40_reg_3343;
                out_41_reg_3350 <= grp_fu_22663_p_dout0;
                out_41_reg_3350_pp0_iter5_reg <= out_41_reg_3350;
                out_42_reg_3357 <= grp_fu_22667_p_dout0;
                out_42_reg_3357_pp0_iter5_reg <= out_42_reg_3357;
                out_43_reg_3364 <= grp_fu_22671_p_dout0;
                out_43_reg_3364_pp0_iter5_reg <= out_43_reg_3364;
                out_44_reg_3371 <= grp_fu_22675_p_dout0;
                out_44_reg_3371_pp0_iter5_reg <= out_44_reg_3371;
                out_45_reg_3378 <= grp_fu_22679_p_dout0;
                out_45_reg_3378_pp0_iter5_reg <= out_45_reg_3378;
                out_46_reg_3385 <= grp_fu_22683_p_dout0;
                out_46_reg_3385_pp0_iter5_reg <= out_46_reg_3385;
                out_47_reg_3392 <= grp_fu_22687_p_dout0;
                out_47_reg_3392_pp0_iter5_reg <= out_47_reg_3392;
                out_48_reg_3399 <= grp_fu_22691_p_dout0;
                out_48_reg_3399_pp0_iter5_reg <= out_48_reg_3399;
                out_49_reg_3406 <= grp_fu_22695_p_dout0;
                out_49_reg_3406_pp0_iter5_reg <= out_49_reg_3406;
                out_reg_3322 <= grp_fu_22647_p_dout0;
                out_reg_3322_pp0_iter5_reg <= out_reg_3322;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln136_fu_1766_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i) + unsigned(ap_const_lv4_1));
    add_ln140_fu_2560_p2 <= std_logic_vector(unsigned(zext_ln136_fu_2557_p1) + unsigned(phi_mul182));
    and_ln143_10_fu_3107_p2 <= (or_ln143_10_fu_3101_p2 and grp_fu_26699_p_dout0);
    and_ln143_11_fu_3156_p2 <= (or_ln143_11_fu_3150_p2 and grp_fu_26703_p_dout0);
    and_ln143_12_fu_3205_p2 <= (or_ln143_12_fu_3199_p2 and grp_fu_26707_p_dout0);
    and_ln143_1_fu_2666_p2 <= (or_ln143_1_fu_2660_p2 and grp_fu_26663_p_dout0);
    and_ln143_2_fu_2715_p2 <= (or_ln143_2_fu_2709_p2 and grp_fu_26667_p_dout0);
    and_ln143_3_fu_2764_p2 <= (or_ln143_3_fu_2758_p2 and grp_fu_26671_p_dout0);
    and_ln143_4_fu_2813_p2 <= (or_ln143_4_fu_2807_p2 and grp_fu_26675_p_dout0);
    and_ln143_5_fu_2862_p2 <= (or_ln143_5_fu_2856_p2 and grp_fu_26679_p_dout0);
    and_ln143_6_fu_2911_p2 <= (or_ln143_6_fu_2905_p2 and grp_fu_26683_p_dout0);
    and_ln143_7_fu_2960_p2 <= (or_ln143_7_fu_2954_p2 and grp_fu_26687_p_dout0);
    and_ln143_8_fu_3009_p2 <= (or_ln143_8_fu_3003_p2 and grp_fu_26691_p_dout0);
    and_ln143_9_fu_3058_p2 <= (or_ln143_9_fu_3052_p2 and grp_fu_26695_p_dout0);
    and_ln143_fu_2617_p2 <= (or_ln143_fu_2611_p2 and grp_fu_26659_p_dout0);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln136_fu_1760_p2)
    begin
        if (((icmp_ln136_fu_1760_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter5_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_7_fu_436, ap_loop_init)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_i <= i_7_fu_436;
        end if; 
    end process;

    bitcast_ln143_10_fu_3072_p1 <= out_47_reg_3392_pp0_iter5_reg;
    bitcast_ln143_11_fu_3121_p1 <= out_48_reg_3399_pp0_iter5_reg;
    bitcast_ln143_12_fu_3170_p1 <= out_49_reg_3406_pp0_iter5_reg;
    bitcast_ln143_1_fu_2631_p1 <= out_38_reg_3329_pp0_iter5_reg;
    bitcast_ln143_2_fu_2680_p1 <= out_39_reg_3336_pp0_iter5_reg;
    bitcast_ln143_3_fu_2729_p1 <= out_40_reg_3343_pp0_iter5_reg;
    bitcast_ln143_4_fu_2778_p1 <= out_41_reg_3350_pp0_iter5_reg;
    bitcast_ln143_5_fu_2827_p1 <= out_42_reg_3357_pp0_iter5_reg;
    bitcast_ln143_6_fu_2876_p1 <= out_43_reg_3364_pp0_iter5_reg;
    bitcast_ln143_7_fu_2925_p1 <= out_44_reg_3371_pp0_iter5_reg;
    bitcast_ln143_8_fu_2974_p1 <= out_45_reg_3378_pp0_iter5_reg;
    bitcast_ln143_9_fu_3023_p1 <= out_46_reg_3385_pp0_iter5_reg;
    bitcast_ln143_fu_2582_p1 <= out_reg_3322_pp0_iter5_reg;
    grp_fu_22647_p_ce <= ap_const_logic_1;
    grp_fu_22647_p_din0 <= tmp_reg_3257;
    grp_fu_22647_p_din1 <= bias_conv4_load;
    grp_fu_22647_p_opcode <= ap_const_lv2_0;
    grp_fu_22651_p_ce <= ap_const_logic_1;
    grp_fu_22651_p_din0 <= tmp_s_reg_3262;
    grp_fu_22651_p_din1 <= bias_conv4_load;
    grp_fu_22651_p_opcode <= ap_const_lv2_0;
    grp_fu_22655_p_ce <= ap_const_logic_1;
    grp_fu_22655_p_din0 <= tmp_79_reg_3267;
    grp_fu_22655_p_din1 <= bias_conv4_load;
    grp_fu_22655_p_opcode <= ap_const_lv2_0;
    grp_fu_22659_p_ce <= ap_const_logic_1;
    grp_fu_22659_p_din0 <= tmp_80_reg_3272;
    grp_fu_22659_p_din1 <= bias_conv4_load;
    grp_fu_22659_p_opcode <= ap_const_lv2_0;
    grp_fu_22663_p_ce <= ap_const_logic_1;
    grp_fu_22663_p_din0 <= tmp_81_reg_3277;
    grp_fu_22663_p_din1 <= bias_conv4_load;
    grp_fu_22663_p_opcode <= ap_const_lv2_0;
    grp_fu_22667_p_ce <= ap_const_logic_1;
    grp_fu_22667_p_din0 <= tmp_82_reg_3282;
    grp_fu_22667_p_din1 <= bias_conv4_load;
    grp_fu_22667_p_opcode <= ap_const_lv2_0;
    grp_fu_22671_p_ce <= ap_const_logic_1;
    grp_fu_22671_p_din0 <= tmp_83_reg_3287;
    grp_fu_22671_p_din1 <= bias_conv4_load;
    grp_fu_22671_p_opcode <= ap_const_lv2_0;
    grp_fu_22675_p_ce <= ap_const_logic_1;
    grp_fu_22675_p_din0 <= tmp_84_reg_3292;
    grp_fu_22675_p_din1 <= bias_conv4_load;
    grp_fu_22675_p_opcode <= ap_const_lv2_0;
    grp_fu_22679_p_ce <= ap_const_logic_1;
    grp_fu_22679_p_din0 <= tmp_85_reg_3297;
    grp_fu_22679_p_din1 <= bias_conv4_load;
    grp_fu_22679_p_opcode <= ap_const_lv2_0;
    grp_fu_22683_p_ce <= ap_const_logic_1;
    grp_fu_22683_p_din0 <= tmp_86_reg_3302;
    grp_fu_22683_p_din1 <= bias_conv4_load;
    grp_fu_22683_p_opcode <= ap_const_lv2_0;
    grp_fu_22687_p_ce <= ap_const_logic_1;
    grp_fu_22687_p_din0 <= tmp_87_reg_3307;
    grp_fu_22687_p_din1 <= bias_conv4_load;
    grp_fu_22687_p_opcode <= ap_const_lv2_0;
    grp_fu_22691_p_ce <= ap_const_logic_1;
    grp_fu_22691_p_din0 <= tmp_88_reg_3312;
    grp_fu_22691_p_din1 <= bias_conv4_load;
    grp_fu_22691_p_opcode <= ap_const_lv2_0;
    grp_fu_22695_p_ce <= ap_const_logic_1;
    grp_fu_22695_p_din0 <= tmp_89_reg_3317;
    grp_fu_22695_p_din1 <= bias_conv4_load;
    grp_fu_22695_p_opcode <= ap_const_lv2_0;
    grp_fu_26659_p_ce <= ap_const_logic_1;
    grp_fu_26659_p_din0 <= out_reg_3322;
    grp_fu_26659_p_din1 <= ap_const_lv32_0;
    grp_fu_26659_p_opcode <= ap_const_lv5_2;
    grp_fu_26663_p_ce <= ap_const_logic_1;
    grp_fu_26663_p_din0 <= out_38_reg_3329;
    grp_fu_26663_p_din1 <= ap_const_lv32_0;
    grp_fu_26663_p_opcode <= ap_const_lv5_2;
    grp_fu_26667_p_ce <= ap_const_logic_1;
    grp_fu_26667_p_din0 <= out_39_reg_3336;
    grp_fu_26667_p_din1 <= ap_const_lv32_0;
    grp_fu_26667_p_opcode <= ap_const_lv5_2;
    grp_fu_26671_p_ce <= ap_const_logic_1;
    grp_fu_26671_p_din0 <= out_40_reg_3343;
    grp_fu_26671_p_din1 <= ap_const_lv32_0;
    grp_fu_26671_p_opcode <= ap_const_lv5_2;
    grp_fu_26675_p_ce <= ap_const_logic_1;
    grp_fu_26675_p_din0 <= out_41_reg_3350;
    grp_fu_26675_p_din1 <= ap_const_lv32_0;
    grp_fu_26675_p_opcode <= ap_const_lv5_2;
    grp_fu_26679_p_ce <= ap_const_logic_1;
    grp_fu_26679_p_din0 <= out_42_reg_3357;
    grp_fu_26679_p_din1 <= ap_const_lv32_0;
    grp_fu_26679_p_opcode <= ap_const_lv5_2;
    grp_fu_26683_p_ce <= ap_const_logic_1;
    grp_fu_26683_p_din0 <= out_43_reg_3364;
    grp_fu_26683_p_din1 <= ap_const_lv32_0;
    grp_fu_26683_p_opcode <= ap_const_lv5_2;
    grp_fu_26687_p_ce <= ap_const_logic_1;
    grp_fu_26687_p_din0 <= out_44_reg_3371;
    grp_fu_26687_p_din1 <= ap_const_lv32_0;
    grp_fu_26687_p_opcode <= ap_const_lv5_2;
    grp_fu_26691_p_ce <= ap_const_logic_1;
    grp_fu_26691_p_din0 <= out_45_reg_3378;
    grp_fu_26691_p_din1 <= ap_const_lv32_0;
    grp_fu_26691_p_opcode <= ap_const_lv5_2;
    grp_fu_26695_p_ce <= ap_const_logic_1;
    grp_fu_26695_p_din0 <= out_46_reg_3385;
    grp_fu_26695_p_din1 <= ap_const_lv32_0;
    grp_fu_26695_p_opcode <= ap_const_lv5_2;
    grp_fu_26699_p_ce <= ap_const_logic_1;
    grp_fu_26699_p_din0 <= out_47_reg_3392;
    grp_fu_26699_p_din1 <= ap_const_lv32_0;
    grp_fu_26699_p_opcode <= ap_const_lv5_2;
    grp_fu_26703_p_ce <= ap_const_logic_1;
    grp_fu_26703_p_din0 <= out_48_reg_3399;
    grp_fu_26703_p_din1 <= ap_const_lv32_0;
    grp_fu_26703_p_opcode <= ap_const_lv5_2;
    grp_fu_26707_p_ce <= ap_const_logic_1;
    grp_fu_26707_p_din0 <= out_49_reg_3406;
    grp_fu_26707_p_din1 <= ap_const_lv32_0;
    grp_fu_26707_p_opcode <= ap_const_lv5_2;
    icmp_ln136_fu_1760_p2 <= "1" when (ap_sig_allocacmp_i = ap_const_lv4_D) else "0";
    icmp_ln143_10_fu_2844_p2 <= "0" when (tmp_152_fu_2830_p4 = ap_const_lv8_FF) else "1";
    icmp_ln143_11_fu_2850_p2 <= "1" when (trunc_ln143_5_fu_2840_p1 = ap_const_lv23_0) else "0";
    icmp_ln143_12_fu_2893_p2 <= "0" when (tmp_154_fu_2879_p4 = ap_const_lv8_FF) else "1";
    icmp_ln143_13_fu_2899_p2 <= "1" when (trunc_ln143_6_fu_2889_p1 = ap_const_lv23_0) else "0";
    icmp_ln143_14_fu_2942_p2 <= "0" when (tmp_156_fu_2928_p4 = ap_const_lv8_FF) else "1";
    icmp_ln143_15_fu_2948_p2 <= "1" when (trunc_ln143_7_fu_2938_p1 = ap_const_lv23_0) else "0";
    icmp_ln143_16_fu_2991_p2 <= "0" when (tmp_158_fu_2977_p4 = ap_const_lv8_FF) else "1";
    icmp_ln143_17_fu_2997_p2 <= "1" when (trunc_ln143_8_fu_2987_p1 = ap_const_lv23_0) else "0";
    icmp_ln143_18_fu_3040_p2 <= "0" when (tmp_160_fu_3026_p4 = ap_const_lv8_FF) else "1";
    icmp_ln143_19_fu_3046_p2 <= "1" when (trunc_ln143_9_fu_3036_p1 = ap_const_lv23_0) else "0";
    icmp_ln143_1_fu_2605_p2 <= "1" when (trunc_ln143_fu_2595_p1 = ap_const_lv23_0) else "0";
    icmp_ln143_20_fu_3089_p2 <= "0" when (tmp_162_fu_3075_p4 = ap_const_lv8_FF) else "1";
    icmp_ln143_21_fu_3095_p2 <= "1" when (trunc_ln143_10_fu_3085_p1 = ap_const_lv23_0) else "0";
    icmp_ln143_22_fu_3138_p2 <= "0" when (tmp_164_fu_3124_p4 = ap_const_lv8_FF) else "1";
    icmp_ln143_23_fu_3144_p2 <= "1" when (trunc_ln143_11_fu_3134_p1 = ap_const_lv23_0) else "0";
    icmp_ln143_24_fu_3187_p2 <= "0" when (tmp_166_fu_3173_p4 = ap_const_lv8_FF) else "1";
    icmp_ln143_25_fu_3193_p2 <= "1" when (trunc_ln143_12_fu_3183_p1 = ap_const_lv23_0) else "0";
    icmp_ln143_2_fu_2648_p2 <= "0" when (tmp_144_fu_2634_p4 = ap_const_lv8_FF) else "1";
    icmp_ln143_3_fu_2654_p2 <= "1" when (trunc_ln143_1_fu_2644_p1 = ap_const_lv23_0) else "0";
    icmp_ln143_4_fu_2697_p2 <= "0" when (tmp_146_fu_2683_p4 = ap_const_lv8_FF) else "1";
    icmp_ln143_5_fu_2703_p2 <= "1" when (trunc_ln143_2_fu_2693_p1 = ap_const_lv23_0) else "0";
    icmp_ln143_6_fu_2746_p2 <= "0" when (tmp_148_fu_2732_p4 = ap_const_lv8_FF) else "1";
    icmp_ln143_7_fu_2752_p2 <= "1" when (trunc_ln143_3_fu_2742_p1 = ap_const_lv23_0) else "0";
    icmp_ln143_8_fu_2795_p2 <= "0" when (tmp_150_fu_2781_p4 = ap_const_lv8_FF) else "1";
    icmp_ln143_9_fu_2801_p2 <= "1" when (trunc_ln143_4_fu_2791_p1 = ap_const_lv23_0) else "0";
    icmp_ln143_fu_2599_p2 <= "0" when (tmp_142_fu_2585_p4 = ap_const_lv8_FF) else "1";
    or_ln143_10_fu_3101_p2 <= (icmp_ln143_21_fu_3095_p2 or icmp_ln143_20_fu_3089_p2);
    or_ln143_11_fu_3150_p2 <= (icmp_ln143_23_fu_3144_p2 or icmp_ln143_22_fu_3138_p2);
    or_ln143_12_fu_3199_p2 <= (icmp_ln143_25_fu_3193_p2 or icmp_ln143_24_fu_3187_p2);
    or_ln143_1_fu_2660_p2 <= (icmp_ln143_3_fu_2654_p2 or icmp_ln143_2_fu_2648_p2);
    or_ln143_2_fu_2709_p2 <= (icmp_ln143_5_fu_2703_p2 or icmp_ln143_4_fu_2697_p2);
    or_ln143_3_fu_2758_p2 <= (icmp_ln143_7_fu_2752_p2 or icmp_ln143_6_fu_2746_p2);
    or_ln143_4_fu_2807_p2 <= (icmp_ln143_9_fu_2801_p2 or icmp_ln143_8_fu_2795_p2);
    or_ln143_5_fu_2856_p2 <= (icmp_ln143_11_fu_2850_p2 or icmp_ln143_10_fu_2844_p2);
    or_ln143_6_fu_2905_p2 <= (icmp_ln143_13_fu_2899_p2 or icmp_ln143_12_fu_2893_p2);
    or_ln143_7_fu_2954_p2 <= (icmp_ln143_15_fu_2948_p2 or icmp_ln143_14_fu_2942_p2);
    or_ln143_8_fu_3003_p2 <= (icmp_ln143_17_fu_2997_p2 or icmp_ln143_16_fu_2991_p2);
    or_ln143_9_fu_3052_p2 <= (icmp_ln143_19_fu_3046_p2 or icmp_ln143_18_fu_3040_p2);
    or_ln143_fu_2611_p2 <= (icmp_ln143_fu_2599_p2 or icmp_ln143_1_fu_2605_p2);
    out_img_0_address0 <= zext_ln140_fu_2565_p1(13 - 1 downto 0);
    out_img_0_ce0 <= out_img_0_ce0_local;

    out_img_0_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_0_ce0_local <= ap_const_logic_1;
        else 
            out_img_0_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_0_d0 <= select_ln143_fu_2623_p3;
    out_img_0_we0 <= out_img_0_we0_local;

    out_img_0_we0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_0_we0_local <= ap_const_logic_1;
        else 
            out_img_0_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_10_address0 <= zext_ln140_fu_2565_p1(13 - 1 downto 0);
    out_img_10_ce0 <= out_img_10_ce0_local;

    out_img_10_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_10_ce0_local <= ap_const_logic_1;
        else 
            out_img_10_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_10_d0 <= select_ln143_10_fu_3113_p3;
    out_img_10_we0 <= out_img_10_we0_local;

    out_img_10_we0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_10_we0_local <= ap_const_logic_1;
        else 
            out_img_10_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_11_address0 <= zext_ln140_fu_2565_p1(13 - 1 downto 0);
    out_img_11_ce0 <= out_img_11_ce0_local;

    out_img_11_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_11_ce0_local <= ap_const_logic_1;
        else 
            out_img_11_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_11_d0 <= select_ln143_11_fu_3162_p3;
    out_img_11_we0 <= out_img_11_we0_local;

    out_img_11_we0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_11_we0_local <= ap_const_logic_1;
        else 
            out_img_11_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_12_address0 <= zext_ln140_fu_2565_p1(13 - 1 downto 0);
    out_img_12_ce0 <= out_img_12_ce0_local;

    out_img_12_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_12_ce0_local <= ap_const_logic_1;
        else 
            out_img_12_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_12_d0 <= select_ln143_12_fu_3211_p3;
    out_img_12_we0 <= out_img_12_we0_local;

    out_img_12_we0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_12_we0_local <= ap_const_logic_1;
        else 
            out_img_12_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_1_address0 <= zext_ln140_fu_2565_p1(13 - 1 downto 0);
    out_img_1_ce0 <= out_img_1_ce0_local;

    out_img_1_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_1_ce0_local <= ap_const_logic_1;
        else 
            out_img_1_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_1_d0 <= select_ln143_1_fu_2672_p3;
    out_img_1_we0 <= out_img_1_we0_local;

    out_img_1_we0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_1_we0_local <= ap_const_logic_1;
        else 
            out_img_1_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_2_address0 <= zext_ln140_fu_2565_p1(13 - 1 downto 0);
    out_img_2_ce0 <= out_img_2_ce0_local;

    out_img_2_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_2_ce0_local <= ap_const_logic_1;
        else 
            out_img_2_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_2_d0 <= select_ln143_2_fu_2721_p3;
    out_img_2_we0 <= out_img_2_we0_local;

    out_img_2_we0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_2_we0_local <= ap_const_logic_1;
        else 
            out_img_2_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_3_address0 <= zext_ln140_fu_2565_p1(13 - 1 downto 0);
    out_img_3_ce0 <= out_img_3_ce0_local;

    out_img_3_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_3_ce0_local <= ap_const_logic_1;
        else 
            out_img_3_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_3_d0 <= select_ln143_3_fu_2770_p3;
    out_img_3_we0 <= out_img_3_we0_local;

    out_img_3_we0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_3_we0_local <= ap_const_logic_1;
        else 
            out_img_3_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_4_address0 <= zext_ln140_fu_2565_p1(13 - 1 downto 0);
    out_img_4_ce0 <= out_img_4_ce0_local;

    out_img_4_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_4_ce0_local <= ap_const_logic_1;
        else 
            out_img_4_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_4_d0 <= select_ln143_4_fu_2819_p3;
    out_img_4_we0 <= out_img_4_we0_local;

    out_img_4_we0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_4_we0_local <= ap_const_logic_1;
        else 
            out_img_4_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_5_address0 <= zext_ln140_fu_2565_p1(13 - 1 downto 0);
    out_img_5_ce0 <= out_img_5_ce0_local;

    out_img_5_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_5_ce0_local <= ap_const_logic_1;
        else 
            out_img_5_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_5_d0 <= select_ln143_5_fu_2868_p3;
    out_img_5_we0 <= out_img_5_we0_local;

    out_img_5_we0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_5_we0_local <= ap_const_logic_1;
        else 
            out_img_5_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_6_address0 <= zext_ln140_fu_2565_p1(13 - 1 downto 0);
    out_img_6_ce0 <= out_img_6_ce0_local;

    out_img_6_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_6_ce0_local <= ap_const_logic_1;
        else 
            out_img_6_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_6_d0 <= select_ln143_6_fu_2917_p3;
    out_img_6_we0 <= out_img_6_we0_local;

    out_img_6_we0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_6_we0_local <= ap_const_logic_1;
        else 
            out_img_6_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_7_address0 <= zext_ln140_fu_2565_p1(13 - 1 downto 0);
    out_img_7_ce0 <= out_img_7_ce0_local;

    out_img_7_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_7_ce0_local <= ap_const_logic_1;
        else 
            out_img_7_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_7_d0 <= select_ln143_7_fu_2966_p3;
    out_img_7_we0 <= out_img_7_we0_local;

    out_img_7_we0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_7_we0_local <= ap_const_logic_1;
        else 
            out_img_7_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_8_address0 <= zext_ln140_fu_2565_p1(13 - 1 downto 0);
    out_img_8_ce0 <= out_img_8_ce0_local;

    out_img_8_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_8_ce0_local <= ap_const_logic_1;
        else 
            out_img_8_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_8_d0 <= select_ln143_8_fu_3015_p3;
    out_img_8_we0 <= out_img_8_we0_local;

    out_img_8_we0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_8_we0_local <= ap_const_logic_1;
        else 
            out_img_8_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_9_address0 <= zext_ln140_fu_2565_p1(13 - 1 downto 0);
    out_img_9_ce0 <= out_img_9_ce0_local;

    out_img_9_ce0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_9_ce0_local <= ap_const_logic_1;
        else 
            out_img_9_ce0_local <= ap_const_logic_0;
        end if; 
    end process;

    out_img_9_d0 <= select_ln143_9_fu_3064_p3;
    out_img_9_we0 <= out_img_9_we0_local;

    out_img_9_we0_local_assign_proc : process(ap_enable_reg_pp0_iter6, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1))) then 
            out_img_9_we0_local <= ap_const_logic_1;
        else 
            out_img_9_we0_local <= ap_const_logic_0;
        end if; 
    end process;

    select_ln143_10_fu_3113_p3 <= 
        out_47_reg_3392_pp0_iter5_reg when (and_ln143_10_fu_3107_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln143_11_fu_3162_p3 <= 
        out_48_reg_3399_pp0_iter5_reg when (and_ln143_11_fu_3156_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln143_12_fu_3211_p3 <= 
        out_49_reg_3406_pp0_iter5_reg when (and_ln143_12_fu_3205_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln143_1_fu_2672_p3 <= 
        out_38_reg_3329_pp0_iter5_reg when (and_ln143_1_fu_2666_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln143_2_fu_2721_p3 <= 
        out_39_reg_3336_pp0_iter5_reg when (and_ln143_2_fu_2715_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln143_3_fu_2770_p3 <= 
        out_40_reg_3343_pp0_iter5_reg when (and_ln143_3_fu_2764_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln143_4_fu_2819_p3 <= 
        out_41_reg_3350_pp0_iter5_reg when (and_ln143_4_fu_2813_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln143_5_fu_2868_p3 <= 
        out_42_reg_3357_pp0_iter5_reg when (and_ln143_5_fu_2862_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln143_6_fu_2917_p3 <= 
        out_43_reg_3364_pp0_iter5_reg when (and_ln143_6_fu_2911_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln143_7_fu_2966_p3 <= 
        out_44_reg_3371_pp0_iter5_reg when (and_ln143_7_fu_2960_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln143_8_fu_3015_p3 <= 
        out_45_reg_3378_pp0_iter5_reg when (and_ln143_8_fu_3009_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln143_9_fu_3064_p3 <= 
        out_46_reg_3385_pp0_iter5_reg when (and_ln143_9_fu_3058_p2(0) = '1') else 
        ap_const_lv32_0;
    select_ln143_fu_2623_p3 <= 
        out_reg_3322_pp0_iter5_reg when (and_ln143_fu_2617_p2(0) = '1') else 
        ap_const_lv32_0;
    tmp_142_fu_2585_p4 <= bitcast_ln143_fu_2582_p1(30 downto 23);
    tmp_144_fu_2634_p4 <= bitcast_ln143_1_fu_2631_p1(30 downto 23);
    tmp_146_fu_2683_p4 <= bitcast_ln143_2_fu_2680_p1(30 downto 23);
    tmp_148_fu_2732_p4 <= bitcast_ln143_3_fu_2729_p1(30 downto 23);
    tmp_150_fu_2781_p4 <= bitcast_ln143_4_fu_2778_p1(30 downto 23);
    tmp_152_fu_2830_p4 <= bitcast_ln143_5_fu_2827_p1(30 downto 23);
    tmp_154_fu_2879_p4 <= bitcast_ln143_6_fu_2876_p1(30 downto 23);
    tmp_156_fu_2928_p4 <= bitcast_ln143_7_fu_2925_p1(30 downto 23);
    tmp_158_fu_2977_p4 <= bitcast_ln143_8_fu_2974_p1(30 downto 23);
    tmp_160_fu_3026_p4 <= bitcast_ln143_9_fu_3023_p1(30 downto 23);
    tmp_162_fu_3075_p4 <= bitcast_ln143_10_fu_3072_p1(30 downto 23);
    tmp_164_fu_3124_p4 <= bitcast_ln143_11_fu_3121_p1(30 downto 23);
    tmp_166_fu_3173_p4 <= bitcast_ln143_12_fu_3170_p1(30 downto 23);
    tmp_79_fu_1892_p27 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_80_fu_1952_p27 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_81_fu_2012_p27 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_82_fu_2072_p27 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_83_fu_2132_p27 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_84_fu_2192_p27 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_85_fu_2252_p27 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_86_fu_2312_p27 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_87_fu_2372_p27 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_88_fu_2432_p27 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_89_fu_2492_p27 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_fu_1772_p27 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    tmp_s_fu_1832_p27 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    trunc_ln143_10_fu_3085_p1 <= bitcast_ln143_10_fu_3072_p1(23 - 1 downto 0);
    trunc_ln143_11_fu_3134_p1 <= bitcast_ln143_11_fu_3121_p1(23 - 1 downto 0);
    trunc_ln143_12_fu_3183_p1 <= bitcast_ln143_12_fu_3170_p1(23 - 1 downto 0);
    trunc_ln143_1_fu_2644_p1 <= bitcast_ln143_1_fu_2631_p1(23 - 1 downto 0);
    trunc_ln143_2_fu_2693_p1 <= bitcast_ln143_2_fu_2680_p1(23 - 1 downto 0);
    trunc_ln143_3_fu_2742_p1 <= bitcast_ln143_3_fu_2729_p1(23 - 1 downto 0);
    trunc_ln143_4_fu_2791_p1 <= bitcast_ln143_4_fu_2778_p1(23 - 1 downto 0);
    trunc_ln143_5_fu_2840_p1 <= bitcast_ln143_5_fu_2827_p1(23 - 1 downto 0);
    trunc_ln143_6_fu_2889_p1 <= bitcast_ln143_6_fu_2876_p1(23 - 1 downto 0);
    trunc_ln143_7_fu_2938_p1 <= bitcast_ln143_7_fu_2925_p1(23 - 1 downto 0);
    trunc_ln143_8_fu_2987_p1 <= bitcast_ln143_8_fu_2974_p1(23 - 1 downto 0);
    trunc_ln143_9_fu_3036_p1 <= bitcast_ln143_9_fu_3023_p1(23 - 1 downto 0);
    trunc_ln143_fu_2595_p1 <= bitcast_ln143_fu_2582_p1(23 - 1 downto 0);
    zext_ln136_fu_2557_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_3248_pp0_iter5_reg),12));
    zext_ln140_fu_2565_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln140_fu_2560_p2),64));
end behav;
