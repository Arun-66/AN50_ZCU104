

================================================================
== Vitis HLS Report for 'pool5_Pipeline_L4'
================================================================
* Date:           Sun Jan 26 21:40:50 2025

* Version:        2024.2 (Build 5238294 on Nov  8 2024)
* Project:        Alex_Net
* Solution:       NN (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvc1156-2-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  1.651 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |  Interval |                    Pipeline                    |
    |   min   |   max   |    min   |    max   | min | max |                      Type                      |
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |       15|       15|  0.150 us|  0.150 us|   14|   14|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- L4      |       13|       13|         1|          1|          1|    13|       yes|
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 1
  Pipeline-0 : II = 1, D = 1, States = { 1 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.65>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%j = alloca i32 1" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57]   --->   Operation 4 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%mux_case_114 = alloca i32 1"   --->   Operation 5 'alloca' 'mux_case_114' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%mux_case_321 = alloca i32 1"   --->   Operation 6 'alloca' 'mux_case_321' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%mux_case_528 = alloca i32 1"   --->   Operation 7 'alloca' 'mux_case_528' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%mux_case_735 = alloca i32 1"   --->   Operation 8 'alloca' 'mux_case_735' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%mux_case_942 = alloca i32 1"   --->   Operation 9 'alloca' 'mux_case_942' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%mux_case_1149 = alloca i32 1"   --->   Operation 10 'alloca' 'mux_case_1149' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%mux_case_256 = alloca i32 1"   --->   Operation 11 'alloca' 'mux_case_256' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%mux_case_463 = alloca i32 1"   --->   Operation 12 'alloca' 'mux_case_463' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%mux_case_670 = alloca i32 1"   --->   Operation 13 'alloca' 'mux_case_670' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%mux_case_877 = alloca i32 1"   --->   Operation 14 'alloca' 'mux_case_877' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%mux_case_1084 = alloca i32 1"   --->   Operation 15 'alloca' 'mux_case_1084' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%mux_case_1291 = alloca i32 1"   --->   Operation 16 'alloca' 'mux_case_1291' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%empty_84 = alloca i32 1"   --->   Operation 17 'alloca' 'empty_84' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%inp_img_12_load_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %inp_img_12_load"   --->   Operation 18 'read' 'inp_img_12_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%inp_img_11_load_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %inp_img_11_load"   --->   Operation 19 'read' 'inp_img_11_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%inp_img_10_load_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %inp_img_10_load"   --->   Operation 20 'read' 'inp_img_10_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%inp_img_9_load_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %inp_img_9_load"   --->   Operation 21 'read' 'inp_img_9_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%inp_img_8_load_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %inp_img_8_load"   --->   Operation 22 'read' 'inp_img_8_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%inp_img_7_load_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %inp_img_7_load"   --->   Operation 23 'read' 'inp_img_7_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%inp_img_6_load_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %inp_img_6_load"   --->   Operation 24 'read' 'inp_img_6_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%inp_img_5_load_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %inp_img_5_load"   --->   Operation 25 'read' 'inp_img_5_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%inp_img_4_load_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %inp_img_4_load"   --->   Operation 26 'read' 'inp_img_4_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%inp_img_3_load_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %inp_img_3_load"   --->   Operation 27 'read' 'inp_img_3_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%inp_img_2_load_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %inp_img_2_load"   --->   Operation 28 'read' 'inp_img_2_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%inp_img_1_load_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %inp_img_1_load"   --->   Operation 29 'read' 'inp_img_1_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%inp_img_0_load_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %inp_img_0_load"   --->   Operation 30 'read' 'inp_img_0_load_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%mux_case_115_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_115"   --->   Operation 31 'read' 'mux_case_115_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%mux_case_322_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_322"   --->   Operation 32 'read' 'mux_case_322_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%mux_case_529_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_529"   --->   Operation 33 'read' 'mux_case_529_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%mux_case_736_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_736"   --->   Operation 34 'read' 'mux_case_736_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%mux_case_943_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_943"   --->   Operation 35 'read' 'mux_case_943_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%mux_case_1150_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_1150"   --->   Operation 36 'read' 'mux_case_1150_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%mux_case_257_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_257"   --->   Operation 37 'read' 'mux_case_257_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%mux_case_464_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_464"   --->   Operation 38 'read' 'mux_case_464_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%mux_case_671_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_671"   --->   Operation 39 'read' 'mux_case_671_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%mux_case_878_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_878"   --->   Operation 40 'read' 'mux_case_878_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%mux_case_1085_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_1085"   --->   Operation 41 'read' 'mux_case_1085_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%mux_case_1292_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_1292"   --->   Operation 42 'read' 'mux_case_1292_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%tmp = read i32 @_ssdm_op_Read.ap_auto.float, i32 %empty"   --->   Operation 43 'read' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %tmp, i32 %empty_84"   --->   Operation 44 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 45 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_1292_read, i32 %mux_case_1291"   --->   Operation 45 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 46 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_1085_read, i32 %mux_case_1084"   --->   Operation 46 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 47 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_878_read, i32 %mux_case_877"   --->   Operation 47 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 48 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_671_read, i32 %mux_case_670"   --->   Operation 48 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 49 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_464_read, i32 %mux_case_463"   --->   Operation 49 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 50 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_257_read, i32 %mux_case_256"   --->   Operation 50 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 51 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_1150_read, i32 %mux_case_1149"   --->   Operation 51 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 52 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_943_read, i32 %mux_case_942"   --->   Operation 52 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 53 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_736_read, i32 %mux_case_735"   --->   Operation 53 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 54 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_529_read, i32 %mux_case_528"   --->   Operation 54 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 55 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_322_read, i32 %mux_case_321"   --->   Operation 55 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 56 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_115_read, i32 %mux_case_114"   --->   Operation 56 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 57 [1/1] (0.42ns)   --->   "%store_ln57 = store i4 0, i4 %j" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57]   --->   Operation 57 'store' 'store_ln57' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.inc"   --->   Operation 58 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%j_1 = load i4 %j" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57]   --->   Operation 59 'load' 'j_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.79ns)   --->   "%icmp_ln57 = icmp_eq  i4 %j_1, i4 13" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57]   --->   Operation 60 'icmp' 'icmp_ln57' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 61 [1/1] (0.79ns)   --->   "%add_ln57 = add i4 %j_1, i4 1" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57]   --->   Operation 61 'add' 'add_ln57' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%br_ln57 = br i1 %icmp_ln57, void %for.inc.split, void %L5.exitStub" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57]   --->   Operation 62 'br' 'br_ln57' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%specpipeline_ln59 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_2" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:59]   --->   Operation 63 'specpipeline' 'specpipeline_ln59' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%speclooptripcount_ln57 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 13, i64 13, i64 13" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57]   --->   Operation 64 'speclooptripcount' 'speclooptripcount_ln57' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%specloopname_ln57 = specloopname void @_ssdm_op_SpecLoopName, void @empty_8" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57]   --->   Operation 65 'specloopname' 'specloopname_ln57' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.66ns)   --->   "%line_buffer_2D = sparsemux i32 @_ssdm_op_SparseMux.ap_auto.13float.float.i4, i4 0, i32 %inp_img_0_load_read, i4 1, i32 %inp_img_1_load_read, i4 2, i32 %inp_img_2_load_read, i4 3, i32 %inp_img_3_load_read, i4 4, i32 %inp_img_4_load_read, i4 5, i32 %inp_img_5_load_read, i4 6, i32 %inp_img_6_load_read, i4 7, i32 %inp_img_7_load_read, i4 8, i32 %inp_img_8_load_read, i4 9, i32 %inp_img_9_load_read, i4 10, i32 %inp_img_10_load_read, i4 11, i32 %inp_img_11_load_read, i4 12, i32 %inp_img_12_load_read, i32 <undef>, i4 %j_1" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 66 'sparsemux' 'line_buffer_2D' <Predicate = (!icmp_ln57)> <Delay = 0.66> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 149 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 67 [1/1] (0.79ns)   --->   "%switch_ln63 = switch i4 %j_1, void %arrayidx1523.case.12, i4 0, void %for.inc.split.arrayidx1523.exit_crit_edge, i4 1, void %arrayidx1523.case.1, i4 2, void %arrayidx1523.case.2, i4 3, void %arrayidx1523.case.3, i4 4, void %arrayidx1523.case.4, i4 5, void %arrayidx1523.case.5, i4 6, void %arrayidx1523.case.6, i4 7, void %arrayidx1523.case.7, i4 8, void %arrayidx1523.case.8, i4 9, void %arrayidx1523.case.9, i4 10, void %arrayidx1523.case.10, i4 11, void %arrayidx1523.case.11" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 67 'switch' 'switch_ln63' <Predicate = (!icmp_ln57)> <Delay = 0.79>
ST_1 : Operation 68 [1/1] (0.42ns)   --->   "%store_ln63 = store i32 %line_buffer_2D, i32 %mux_case_1149" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 68 'store' 'store_ln63' <Predicate = (!icmp_ln57 & j_1 == 11)> <Delay = 0.42>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%br_ln63 = br void %arrayidx1523.exit" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 69 'br' 'br_ln63' <Predicate = (!icmp_ln57 & j_1 == 11)> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.42ns)   --->   "%store_ln63 = store i32 %line_buffer_2D, i32 %mux_case_1084" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 70 'store' 'store_ln63' <Predicate = (!icmp_ln57 & j_1 == 10)> <Delay = 0.42>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%br_ln63 = br void %arrayidx1523.exit" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 71 'br' 'br_ln63' <Predicate = (!icmp_ln57 & j_1 == 10)> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.42ns)   --->   "%store_ln63 = store i32 %line_buffer_2D, i32 %mux_case_942" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 72 'store' 'store_ln63' <Predicate = (!icmp_ln57 & j_1 == 9)> <Delay = 0.42>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "%br_ln63 = br void %arrayidx1523.exit" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 73 'br' 'br_ln63' <Predicate = (!icmp_ln57 & j_1 == 9)> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.42ns)   --->   "%store_ln63 = store i32 %line_buffer_2D, i32 %mux_case_877" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 74 'store' 'store_ln63' <Predicate = (!icmp_ln57 & j_1 == 8)> <Delay = 0.42>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%br_ln63 = br void %arrayidx1523.exit" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 75 'br' 'br_ln63' <Predicate = (!icmp_ln57 & j_1 == 8)> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (0.42ns)   --->   "%store_ln63 = store i32 %line_buffer_2D, i32 %mux_case_735" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 76 'store' 'store_ln63' <Predicate = (!icmp_ln57 & j_1 == 7)> <Delay = 0.42>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "%br_ln63 = br void %arrayidx1523.exit" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 77 'br' 'br_ln63' <Predicate = (!icmp_ln57 & j_1 == 7)> <Delay = 0.00>
ST_1 : Operation 78 [1/1] (0.42ns)   --->   "%store_ln63 = store i32 %line_buffer_2D, i32 %mux_case_670" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 78 'store' 'store_ln63' <Predicate = (!icmp_ln57 & j_1 == 6)> <Delay = 0.42>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%br_ln63 = br void %arrayidx1523.exit" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 79 'br' 'br_ln63' <Predicate = (!icmp_ln57 & j_1 == 6)> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.42ns)   --->   "%store_ln63 = store i32 %line_buffer_2D, i32 %mux_case_528" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 80 'store' 'store_ln63' <Predicate = (!icmp_ln57 & j_1 == 5)> <Delay = 0.42>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "%br_ln63 = br void %arrayidx1523.exit" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 81 'br' 'br_ln63' <Predicate = (!icmp_ln57 & j_1 == 5)> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.42ns)   --->   "%store_ln63 = store i32 %line_buffer_2D, i32 %mux_case_463" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 82 'store' 'store_ln63' <Predicate = (!icmp_ln57 & j_1 == 4)> <Delay = 0.42>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "%br_ln63 = br void %arrayidx1523.exit" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 83 'br' 'br_ln63' <Predicate = (!icmp_ln57 & j_1 == 4)> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (0.42ns)   --->   "%store_ln63 = store i32 %line_buffer_2D, i32 %mux_case_321" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 84 'store' 'store_ln63' <Predicate = (!icmp_ln57 & j_1 == 3)> <Delay = 0.42>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "%br_ln63 = br void %arrayidx1523.exit" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 85 'br' 'br_ln63' <Predicate = (!icmp_ln57 & j_1 == 3)> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (0.42ns)   --->   "%store_ln63 = store i32 %line_buffer_2D, i32 %mux_case_256" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 86 'store' 'store_ln63' <Predicate = (!icmp_ln57 & j_1 == 2)> <Delay = 0.42>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%br_ln63 = br void %arrayidx1523.exit" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 87 'br' 'br_ln63' <Predicate = (!icmp_ln57 & j_1 == 2)> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.42ns)   --->   "%store_ln63 = store i32 %line_buffer_2D, i32 %mux_case_114" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 88 'store' 'store_ln63' <Predicate = (!icmp_ln57 & j_1 == 1)> <Delay = 0.42>
ST_1 : Operation 89 [1/1] (0.00ns)   --->   "%br_ln63 = br void %arrayidx1523.exit" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 89 'br' 'br_ln63' <Predicate = (!icmp_ln57 & j_1 == 1)> <Delay = 0.00>
ST_1 : Operation 90 [1/1] (0.42ns)   --->   "%store_ln63 = store i32 %line_buffer_2D, i32 %empty_84" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 90 'store' 'store_ln63' <Predicate = (!icmp_ln57 & j_1 == 0)> <Delay = 0.42>
ST_1 : Operation 91 [1/1] (0.00ns)   --->   "%br_ln63 = br void %arrayidx1523.exit" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 91 'br' 'br_ln63' <Predicate = (!icmp_ln57 & j_1 == 0)> <Delay = 0.00>
ST_1 : Operation 92 [1/1] (0.42ns)   --->   "%store_ln63 = store i32 %line_buffer_2D, i32 %mux_case_1291" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 92 'store' 'store_ln63' <Predicate = (!icmp_ln57 & j_1 == 15) | (!icmp_ln57 & j_1 == 14) | (!icmp_ln57 & j_1 == 12)> <Delay = 0.42>
ST_1 : Operation 93 [1/1] (0.00ns)   --->   "%br_ln63 = br void %arrayidx1523.exit" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63]   --->   Operation 93 'br' 'br_ln63' <Predicate = (!icmp_ln57 & j_1 == 15) | (!icmp_ln57 & j_1 == 14) | (!icmp_ln57 & j_1 == 12)> <Delay = 0.00>
ST_1 : Operation 94 [1/1] (0.42ns)   --->   "%store_ln57 = store i4 %add_ln57, i4 %j" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57]   --->   Operation 94 'store' 'store_ln57' <Predicate = (!icmp_ln57)> <Delay = 0.42>
ST_1 : Operation 95 [1/1] (0.00ns)   --->   "%br_ln57 = br void %for.inc" [../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57]   --->   Operation 95 'br' 'br_ln57' <Predicate = (!icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 96 [1/1] (0.00ns)   --->   "%mux_case_114_load = load i32 %mux_case_114"   --->   Operation 96 'load' 'mux_case_114_load' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 97 [1/1] (0.00ns)   --->   "%mux_case_321_load = load i32 %mux_case_321"   --->   Operation 97 'load' 'mux_case_321_load' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 98 [1/1] (0.00ns)   --->   "%mux_case_528_load = load i32 %mux_case_528"   --->   Operation 98 'load' 'mux_case_528_load' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 99 [1/1] (0.00ns)   --->   "%mux_case_735_load = load i32 %mux_case_735"   --->   Operation 99 'load' 'mux_case_735_load' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 100 [1/1] (0.00ns)   --->   "%mux_case_942_load = load i32 %mux_case_942"   --->   Operation 100 'load' 'mux_case_942_load' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 101 [1/1] (0.00ns)   --->   "%mux_case_1149_load = load i32 %mux_case_1149"   --->   Operation 101 'load' 'mux_case_1149_load' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 102 [1/1] (0.00ns)   --->   "%mux_case_256_load = load i32 %mux_case_256"   --->   Operation 102 'load' 'mux_case_256_load' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 103 [1/1] (0.00ns)   --->   "%mux_case_463_load = load i32 %mux_case_463"   --->   Operation 103 'load' 'mux_case_463_load' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 104 [1/1] (0.00ns)   --->   "%mux_case_670_load = load i32 %mux_case_670"   --->   Operation 104 'load' 'mux_case_670_load' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 105 [1/1] (0.00ns)   --->   "%mux_case_877_load = load i32 %mux_case_877"   --->   Operation 105 'load' 'mux_case_877_load' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 106 [1/1] (0.00ns)   --->   "%mux_case_1084_load = load i32 %mux_case_1084"   --->   Operation 106 'load' 'mux_case_1084_load' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 107 [1/1] (0.00ns)   --->   "%mux_case_1291_load = load i32 %mux_case_1291"   --->   Operation 107 'load' 'mux_case_1291_load' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 108 [1/1] (0.00ns)   --->   "%p_load = load i32 %empty_84"   --->   Operation 108 'load' 'p_load' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 109 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %p_out, i32 %p_load"   --->   Operation 109 'write' 'write_ln0' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 110 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %mux_case_1291_out, i32 %mux_case_1291_load"   --->   Operation 110 'write' 'write_ln0' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 111 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %mux_case_1084_out, i32 %mux_case_1084_load"   --->   Operation 111 'write' 'write_ln0' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 112 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %mux_case_877_out, i32 %mux_case_877_load"   --->   Operation 112 'write' 'write_ln0' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 113 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %mux_case_670_out, i32 %mux_case_670_load"   --->   Operation 113 'write' 'write_ln0' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 114 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %mux_case_463_out, i32 %mux_case_463_load"   --->   Operation 114 'write' 'write_ln0' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 115 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %mux_case_256_out, i32 %mux_case_256_load"   --->   Operation 115 'write' 'write_ln0' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 116 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %mux_case_1149_out, i32 %mux_case_1149_load"   --->   Operation 116 'write' 'write_ln0' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 117 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %mux_case_942_out, i32 %mux_case_942_load"   --->   Operation 117 'write' 'write_ln0' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 118 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %mux_case_735_out, i32 %mux_case_735_load"   --->   Operation 118 'write' 'write_ln0' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 119 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %mux_case_528_out, i32 %mux_case_528_load"   --->   Operation 119 'write' 'write_ln0' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 120 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %mux_case_321_out, i32 %mux_case_321_load"   --->   Operation 120 'write' 'write_ln0' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 121 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %mux_case_114_out, i32 %mux_case_114_load"   --->   Operation 121 'write' 'write_ln0' <Predicate = (icmp_ln57)> <Delay = 0.00>
ST_1 : Operation 122 [1/1] (0.42ns)   --->   "%ret_ln0 = ret"   --->   Operation 122 'ret' 'ret_ln0' <Predicate = (icmp_ln57)> <Delay = 0.42>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.651ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln57', ../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57) of constant 0 on local variable 'j', ../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57 [93]  (0.427 ns)
	'load' operation 4 bit ('j', ../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57) on local variable 'j', ../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57 [96]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln57', ../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57) [97]  (0.797 ns)
	'store' operation 0 bit ('store_ln63', ../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63) of variable 'line_buffer_2D', ../AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:63 on local variable 'mux_case_463' [128]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
