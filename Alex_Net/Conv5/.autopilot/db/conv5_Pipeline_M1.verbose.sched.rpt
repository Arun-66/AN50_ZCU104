

================================================================
== Vitis HLS Report for 'conv5_Pipeline_M1'
================================================================
* Date:           Sat Jan 25 18:18:09 2025

* Version:        2024.2 (Build 5238294 on Nov  8 2024)
* Project:        Alex_Net
* Solution:       Conv5 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvc1156-2-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |  Latency (cycles) |  Latency (absolute) |  Interval |                    Pipeline                    |
    |   min   |   max   |    min   |    max   | min | max |                      Type                      |
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+
    |      177|      177|  1.770 us|  1.770 us|  176|  176|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+----------+----------+-----+-----+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- M1      |      175|      175|        20|         13|          1|    13|       yes|
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 13, depth = 20


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 20
* Pipeline : 1
  Pipeline-0 : II = 13, D = 20, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.65>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%i_2 = alloca i32 1" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 23 'alloca' 'i_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%add180_12_129412_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_12_129412_reload"   --->   Operation 24 'read' 'add180_12_129412_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%add180_11_129390_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_11_129390_reload"   --->   Operation 25 'read' 'add180_11_129390_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%add180_10_129377_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_10_129377_reload"   --->   Operation 26 'read' 'add180_10_129377_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%add180_9_129364_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_9_129364_reload"   --->   Operation 27 'read' 'add180_9_129364_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%add180_8_129351_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_8_129351_reload"   --->   Operation 28 'read' 'add180_8_129351_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%add180_7_129338_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_7_129338_reload"   --->   Operation 29 'read' 'add180_7_129338_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%add180_6_129325_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_6_129325_reload"   --->   Operation 30 'read' 'add180_6_129325_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%add180_5_129312_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_5_129312_reload"   --->   Operation 31 'read' 'add180_5_129312_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%add180_4_129299_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_4_129299_reload"   --->   Operation 32 'read' 'add180_4_129299_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%add180_3_129286_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_3_129286_reload"   --->   Operation 33 'read' 'add180_3_129286_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%add180_2_129273_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_2_129273_reload"   --->   Operation 34 'read' 'add180_2_129273_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%add180_1_129260_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_1_129260_reload"   --->   Operation 35 'read' 'add180_1_129260_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%add180_1284449247_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_1284449247_reload"   --->   Operation 36 'read' 'add180_1284449247_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%add180_12_119402_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_12_119402_reload"   --->   Operation 37 'read' 'add180_12_119402_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%add180_11_119389_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_11_119389_reload"   --->   Operation 38 'read' 'add180_11_119389_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%add180_10_119376_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_10_119376_reload"   --->   Operation 39 'read' 'add180_10_119376_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%add180_9_119363_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_9_119363_reload"   --->   Operation 40 'read' 'add180_9_119363_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%add180_8_119350_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_8_119350_reload"   --->   Operation 41 'read' 'add180_8_119350_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%add180_7_119337_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_7_119337_reload"   --->   Operation 42 'read' 'add180_7_119337_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%add180_6_119324_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_6_119324_reload"   --->   Operation 43 'read' 'add180_6_119324_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%add180_5_119311_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_5_119311_reload"   --->   Operation 44 'read' 'add180_5_119311_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%add180_4_119298_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_4_119298_reload"   --->   Operation 45 'read' 'add180_4_119298_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%add180_3_119285_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_3_119285_reload"   --->   Operation 46 'read' 'add180_3_119285_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%add180_2_119272_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_2_119272_reload"   --->   Operation 47 'read' 'add180_2_119272_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%add180_1_119259_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_1_119259_reload"   --->   Operation 48 'read' 'add180_1_119259_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%add180_1184279246_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_1184279246_reload"   --->   Operation 49 'read' 'add180_1184279246_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%add180_12_109401_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_12_109401_reload"   --->   Operation 50 'read' 'add180_12_109401_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%add180_11_109388_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_11_109388_reload"   --->   Operation 51 'read' 'add180_11_109388_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%add180_10_109375_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_10_109375_reload"   --->   Operation 52 'read' 'add180_10_109375_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%add180_9_109362_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_9_109362_reload"   --->   Operation 53 'read' 'add180_9_109362_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%add180_8_109349_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_8_109349_reload"   --->   Operation 54 'read' 'add180_8_109349_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%add180_7_109336_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_7_109336_reload"   --->   Operation 55 'read' 'add180_7_109336_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%add180_6_109323_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_6_109323_reload"   --->   Operation 56 'read' 'add180_6_109323_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%add180_5_109310_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_5_109310_reload"   --->   Operation 57 'read' 'add180_5_109310_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%add180_4_109297_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_4_109297_reload"   --->   Operation 58 'read' 'add180_4_109297_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%add180_3_109284_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_3_109284_reload"   --->   Operation 59 'read' 'add180_3_109284_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%add180_2_109271_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_2_109271_reload"   --->   Operation 60 'read' 'add180_2_109271_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%add180_1_109258_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_1_109258_reload"   --->   Operation 61 'read' 'add180_1_109258_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%add180_1084109245_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_1084109245_reload"   --->   Operation 62 'read' 'add180_1084109245_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%add180_12_99400_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_12_99400_reload"   --->   Operation 63 'read' 'add180_12_99400_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%add180_11_99387_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_11_99387_reload"   --->   Operation 64 'read' 'add180_11_99387_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%add180_10_99374_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_10_99374_reload"   --->   Operation 65 'read' 'add180_10_99374_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%add180_9_99361_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_9_99361_reload"   --->   Operation 66 'read' 'add180_9_99361_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%add180_8_99348_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_8_99348_reload"   --->   Operation 67 'read' 'add180_8_99348_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%add180_7_99335_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_7_99335_reload"   --->   Operation 68 'read' 'add180_7_99335_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%add180_6_99322_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_6_99322_reload"   --->   Operation 69 'read' 'add180_6_99322_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%add180_5_99309_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_5_99309_reload"   --->   Operation 70 'read' 'add180_5_99309_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%add180_4_99296_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_4_99296_reload"   --->   Operation 71 'read' 'add180_4_99296_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%add180_3_99283_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_3_99283_reload"   --->   Operation 72 'read' 'add180_3_99283_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "%add180_2_99270_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_2_99270_reload"   --->   Operation 73 'read' 'add180_2_99270_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%add180_1_99257_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_1_99257_reload"   --->   Operation 74 'read' 'add180_1_99257_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%add180_983939244_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_983939244_reload"   --->   Operation 75 'read' 'add180_983939244_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (0.00ns)   --->   "%add180_12_89399_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_12_89399_reload"   --->   Operation 76 'read' 'add180_12_89399_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "%add180_11_89386_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_11_89386_reload"   --->   Operation 77 'read' 'add180_11_89386_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "%add180_10_89373_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_10_89373_reload"   --->   Operation 78 'read' 'add180_10_89373_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%add180_9_89360_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_9_89360_reload"   --->   Operation 79 'read' 'add180_9_89360_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "%add180_8_89347_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_8_89347_reload"   --->   Operation 80 'read' 'add180_8_89347_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "%add180_7_89334_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_7_89334_reload"   --->   Operation 81 'read' 'add180_7_89334_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%add180_6_89321_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_6_89321_reload"   --->   Operation 82 'read' 'add180_6_89321_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "%add180_5_89308_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_5_89308_reload"   --->   Operation 83 'read' 'add180_5_89308_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (0.00ns)   --->   "%add180_4_89295_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_4_89295_reload"   --->   Operation 84 'read' 'add180_4_89295_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "%add180_3_89282_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_3_89282_reload"   --->   Operation 85 'read' 'add180_3_89282_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (0.00ns)   --->   "%add180_2_89269_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_2_89269_reload"   --->   Operation 86 'read' 'add180_2_89269_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%add180_1_89256_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_1_89256_reload"   --->   Operation 87 'read' 'add180_1_89256_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.00ns)   --->   "%add180_883769243_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_883769243_reload"   --->   Operation 88 'read' 'add180_883769243_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 89 [1/1] (0.00ns)   --->   "%add180_12_79398_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_12_79398_reload"   --->   Operation 89 'read' 'add180_12_79398_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 90 [1/1] (0.00ns)   --->   "%add180_11_79385_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_11_79385_reload"   --->   Operation 90 'read' 'add180_11_79385_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 91 [1/1] (0.00ns)   --->   "%add180_10_79372_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_10_79372_reload"   --->   Operation 91 'read' 'add180_10_79372_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 92 [1/1] (0.00ns)   --->   "%add180_9_79359_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_9_79359_reload"   --->   Operation 92 'read' 'add180_9_79359_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 93 [1/1] (0.00ns)   --->   "%add180_8_79346_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_8_79346_reload"   --->   Operation 93 'read' 'add180_8_79346_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 94 [1/1] (0.00ns)   --->   "%add180_7_79333_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_7_79333_reload"   --->   Operation 94 'read' 'add180_7_79333_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 95 [1/1] (0.00ns)   --->   "%add180_6_79320_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_6_79320_reload"   --->   Operation 95 'read' 'add180_6_79320_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 96 [1/1] (0.00ns)   --->   "%add180_5_79307_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_5_79307_reload"   --->   Operation 96 'read' 'add180_5_79307_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 97 [1/1] (0.00ns)   --->   "%add180_4_79294_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_4_79294_reload"   --->   Operation 97 'read' 'add180_4_79294_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 98 [1/1] (0.00ns)   --->   "%add180_3_79281_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_3_79281_reload"   --->   Operation 98 'read' 'add180_3_79281_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 99 [1/1] (0.00ns)   --->   "%add180_2_79268_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_2_79268_reload"   --->   Operation 99 'read' 'add180_2_79268_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 100 [1/1] (0.00ns)   --->   "%add180_1_79255_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_1_79255_reload"   --->   Operation 100 'read' 'add180_1_79255_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 101 [1/1] (0.00ns)   --->   "%add180_783599242_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_783599242_reload"   --->   Operation 101 'read' 'add180_783599242_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 102 [1/1] (0.00ns)   --->   "%add180_12_69397_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_12_69397_reload"   --->   Operation 102 'read' 'add180_12_69397_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 103 [1/1] (0.00ns)   --->   "%add180_11_69384_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_11_69384_reload"   --->   Operation 103 'read' 'add180_11_69384_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 104 [1/1] (0.00ns)   --->   "%add180_10_69371_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_10_69371_reload"   --->   Operation 104 'read' 'add180_10_69371_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 105 [1/1] (0.00ns)   --->   "%add180_9_69358_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_9_69358_reload"   --->   Operation 105 'read' 'add180_9_69358_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 106 [1/1] (0.00ns)   --->   "%add180_8_69345_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_8_69345_reload"   --->   Operation 106 'read' 'add180_8_69345_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 107 [1/1] (0.00ns)   --->   "%add180_7_69332_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_7_69332_reload"   --->   Operation 107 'read' 'add180_7_69332_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 108 [1/1] (0.00ns)   --->   "%add180_6_69319_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_6_69319_reload"   --->   Operation 108 'read' 'add180_6_69319_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 109 [1/1] (0.00ns)   --->   "%add180_5_69306_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_5_69306_reload"   --->   Operation 109 'read' 'add180_5_69306_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 110 [1/1] (0.00ns)   --->   "%add180_4_69293_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_4_69293_reload"   --->   Operation 110 'read' 'add180_4_69293_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 111 [1/1] (0.00ns)   --->   "%add180_3_69280_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_3_69280_reload"   --->   Operation 111 'read' 'add180_3_69280_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 112 [1/1] (0.00ns)   --->   "%add180_2_69267_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_2_69267_reload"   --->   Operation 112 'read' 'add180_2_69267_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 113 [1/1] (0.00ns)   --->   "%add180_1_69254_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_1_69254_reload"   --->   Operation 113 'read' 'add180_1_69254_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 114 [1/1] (0.00ns)   --->   "%add180_683429241_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_683429241_reload"   --->   Operation 114 'read' 'add180_683429241_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 115 [1/1] (0.00ns)   --->   "%add180_12_59396_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_12_59396_reload"   --->   Operation 115 'read' 'add180_12_59396_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 116 [1/1] (0.00ns)   --->   "%add180_11_59383_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_11_59383_reload"   --->   Operation 116 'read' 'add180_11_59383_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 117 [1/1] (0.00ns)   --->   "%add180_10_59370_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_10_59370_reload"   --->   Operation 117 'read' 'add180_10_59370_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 118 [1/1] (0.00ns)   --->   "%add180_9_59357_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_9_59357_reload"   --->   Operation 118 'read' 'add180_9_59357_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 119 [1/1] (0.00ns)   --->   "%add180_8_59344_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_8_59344_reload"   --->   Operation 119 'read' 'add180_8_59344_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 120 [1/1] (0.00ns)   --->   "%add180_7_59331_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_7_59331_reload"   --->   Operation 120 'read' 'add180_7_59331_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 121 [1/1] (0.00ns)   --->   "%add180_6_59318_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_6_59318_reload"   --->   Operation 121 'read' 'add180_6_59318_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 122 [1/1] (0.00ns)   --->   "%add180_5_59305_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_5_59305_reload"   --->   Operation 122 'read' 'add180_5_59305_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 123 [1/1] (0.00ns)   --->   "%add180_4_59292_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_4_59292_reload"   --->   Operation 123 'read' 'add180_4_59292_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 124 [1/1] (0.00ns)   --->   "%add180_3_59279_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_3_59279_reload"   --->   Operation 124 'read' 'add180_3_59279_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 125 [1/1] (0.00ns)   --->   "%add180_2_59266_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_2_59266_reload"   --->   Operation 125 'read' 'add180_2_59266_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 126 [1/1] (0.00ns)   --->   "%add180_1_59253_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_1_59253_reload"   --->   Operation 126 'read' 'add180_1_59253_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 127 [1/1] (0.00ns)   --->   "%add180_583259240_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_583259240_reload"   --->   Operation 127 'read' 'add180_583259240_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 128 [1/1] (0.00ns)   --->   "%add180_12_49395_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_12_49395_reload"   --->   Operation 128 'read' 'add180_12_49395_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 129 [1/1] (0.00ns)   --->   "%add180_11_49382_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_11_49382_reload"   --->   Operation 129 'read' 'add180_11_49382_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 130 [1/1] (0.00ns)   --->   "%add180_10_49369_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_10_49369_reload"   --->   Operation 130 'read' 'add180_10_49369_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 131 [1/1] (0.00ns)   --->   "%add180_9_49356_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_9_49356_reload"   --->   Operation 131 'read' 'add180_9_49356_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 132 [1/1] (0.00ns)   --->   "%add180_8_49343_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_8_49343_reload"   --->   Operation 132 'read' 'add180_8_49343_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 133 [1/1] (0.00ns)   --->   "%add180_7_49330_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_7_49330_reload"   --->   Operation 133 'read' 'add180_7_49330_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 134 [1/1] (0.00ns)   --->   "%add180_6_49317_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_6_49317_reload"   --->   Operation 134 'read' 'add180_6_49317_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 135 [1/1] (0.00ns)   --->   "%add180_5_49304_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_5_49304_reload"   --->   Operation 135 'read' 'add180_5_49304_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 136 [1/1] (0.00ns)   --->   "%add180_4_49291_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_4_49291_reload"   --->   Operation 136 'read' 'add180_4_49291_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 137 [1/1] (0.00ns)   --->   "%add180_3_49278_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_3_49278_reload"   --->   Operation 137 'read' 'add180_3_49278_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 138 [1/1] (0.00ns)   --->   "%add180_2_49265_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_2_49265_reload"   --->   Operation 138 'read' 'add180_2_49265_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 139 [1/1] (0.00ns)   --->   "%add180_1_49252_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_1_49252_reload"   --->   Operation 139 'read' 'add180_1_49252_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 140 [1/1] (0.00ns)   --->   "%add180_483089239_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_483089239_reload"   --->   Operation 140 'read' 'add180_483089239_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 141 [1/1] (0.00ns)   --->   "%add180_12_39394_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_12_39394_reload"   --->   Operation 141 'read' 'add180_12_39394_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 142 [1/1] (0.00ns)   --->   "%add180_11_39381_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_11_39381_reload"   --->   Operation 142 'read' 'add180_11_39381_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 143 [1/1] (0.00ns)   --->   "%add180_10_39368_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_10_39368_reload"   --->   Operation 143 'read' 'add180_10_39368_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 144 [1/1] (0.00ns)   --->   "%add180_9_39355_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_9_39355_reload"   --->   Operation 144 'read' 'add180_9_39355_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 145 [1/1] (0.00ns)   --->   "%add180_8_39342_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_8_39342_reload"   --->   Operation 145 'read' 'add180_8_39342_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 146 [1/1] (0.00ns)   --->   "%add180_7_39329_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_7_39329_reload"   --->   Operation 146 'read' 'add180_7_39329_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 147 [1/1] (0.00ns)   --->   "%add180_6_39316_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_6_39316_reload"   --->   Operation 147 'read' 'add180_6_39316_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 148 [1/1] (0.00ns)   --->   "%add180_5_39303_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_5_39303_reload"   --->   Operation 148 'read' 'add180_5_39303_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 149 [1/1] (0.00ns)   --->   "%add180_4_39290_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_4_39290_reload"   --->   Operation 149 'read' 'add180_4_39290_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 150 [1/1] (0.00ns)   --->   "%add180_3_39277_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_3_39277_reload"   --->   Operation 150 'read' 'add180_3_39277_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 151 [1/1] (0.00ns)   --->   "%add180_2_39264_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_2_39264_reload"   --->   Operation 151 'read' 'add180_2_39264_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 152 [1/1] (0.00ns)   --->   "%add180_1_39251_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_1_39251_reload"   --->   Operation 152 'read' 'add180_1_39251_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 153 [1/1] (0.00ns)   --->   "%add180_382919238_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_382919238_reload"   --->   Operation 153 'read' 'add180_382919238_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 154 [1/1] (0.00ns)   --->   "%add180_12_29393_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_12_29393_reload"   --->   Operation 154 'read' 'add180_12_29393_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 155 [1/1] (0.00ns)   --->   "%add180_11_29380_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_11_29380_reload"   --->   Operation 155 'read' 'add180_11_29380_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 156 [1/1] (0.00ns)   --->   "%add180_10_29367_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_10_29367_reload"   --->   Operation 156 'read' 'add180_10_29367_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 157 [1/1] (0.00ns)   --->   "%add180_9_29354_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_9_29354_reload"   --->   Operation 157 'read' 'add180_9_29354_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 158 [1/1] (0.00ns)   --->   "%add180_8_29341_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_8_29341_reload"   --->   Operation 158 'read' 'add180_8_29341_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 159 [1/1] (0.00ns)   --->   "%add180_7_29328_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_7_29328_reload"   --->   Operation 159 'read' 'add180_7_29328_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 160 [1/1] (0.00ns)   --->   "%add180_6_29315_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_6_29315_reload"   --->   Operation 160 'read' 'add180_6_29315_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 161 [1/1] (0.00ns)   --->   "%add180_5_29302_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_5_29302_reload"   --->   Operation 161 'read' 'add180_5_29302_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 162 [1/1] (0.00ns)   --->   "%add180_4_29289_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_4_29289_reload"   --->   Operation 162 'read' 'add180_4_29289_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 163 [1/1] (0.00ns)   --->   "%add180_3_29276_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_3_29276_reload"   --->   Operation 163 'read' 'add180_3_29276_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 164 [1/1] (0.00ns)   --->   "%add180_2_29263_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_2_29263_reload"   --->   Operation 164 'read' 'add180_2_29263_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 165 [1/1] (0.00ns)   --->   "%add180_1_29250_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_1_29250_reload"   --->   Operation 165 'read' 'add180_1_29250_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 166 [1/1] (0.00ns)   --->   "%add180_282749237_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_282749237_reload"   --->   Operation 166 'read' 'add180_282749237_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 167 [1/1] (0.00ns)   --->   "%add180_12_19392_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_12_19392_reload"   --->   Operation 167 'read' 'add180_12_19392_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 168 [1/1] (0.00ns)   --->   "%add180_11_19379_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_11_19379_reload"   --->   Operation 168 'read' 'add180_11_19379_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 169 [1/1] (0.00ns)   --->   "%add180_10_19366_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_10_19366_reload"   --->   Operation 169 'read' 'add180_10_19366_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 170 [1/1] (0.00ns)   --->   "%add180_9_19353_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_9_19353_reload"   --->   Operation 170 'read' 'add180_9_19353_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 171 [1/1] (0.00ns)   --->   "%add180_8_19340_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_8_19340_reload"   --->   Operation 171 'read' 'add180_8_19340_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 172 [1/1] (0.00ns)   --->   "%add180_7_19327_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_7_19327_reload"   --->   Operation 172 'read' 'add180_7_19327_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 173 [1/1] (0.00ns)   --->   "%add180_6_19314_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_6_19314_reload"   --->   Operation 173 'read' 'add180_6_19314_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 174 [1/1] (0.00ns)   --->   "%add180_5_19301_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_5_19301_reload"   --->   Operation 174 'read' 'add180_5_19301_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 175 [1/1] (0.00ns)   --->   "%add180_4_19288_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_4_19288_reload"   --->   Operation 175 'read' 'add180_4_19288_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 176 [1/1] (0.00ns)   --->   "%add180_3_19275_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_3_19275_reload"   --->   Operation 176 'read' 'add180_3_19275_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 177 [1/1] (0.00ns)   --->   "%add180_2_19262_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_2_19262_reload"   --->   Operation 177 'read' 'add180_2_19262_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 178 [1/1] (0.00ns)   --->   "%add180_1_19249_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_1_19249_reload"   --->   Operation 178 'read' 'add180_1_19249_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 179 [1/1] (0.00ns)   --->   "%add180_182579236_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_182579236_reload"   --->   Operation 179 'read' 'add180_182579236_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 180 [1/1] (0.00ns)   --->   "%tmp_12 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %empty"   --->   Operation 180 'read' 'tmp_12' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 181 [1/1] (0.00ns)   --->   "%add180_129391_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_129391_reload"   --->   Operation 181 'read' 'add180_129391_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 182 [1/1] (0.00ns)   --->   "%add180_119378_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_119378_reload"   --->   Operation 182 'read' 'add180_119378_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 183 [1/1] (0.00ns)   --->   "%add180_109365_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_109365_reload"   --->   Operation 183 'read' 'add180_109365_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 184 [1/1] (0.00ns)   --->   "%add180_99352_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_99352_reload"   --->   Operation 184 'read' 'add180_99352_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 185 [1/1] (0.00ns)   --->   "%add180_89339_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_89339_reload"   --->   Operation 185 'read' 'add180_89339_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 186 [1/1] (0.00ns)   --->   "%add180_79326_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_79326_reload"   --->   Operation 186 'read' 'add180_79326_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 187 [1/1] (0.00ns)   --->   "%add180_69313_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_69313_reload"   --->   Operation 187 'read' 'add180_69313_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 188 [1/1] (0.00ns)   --->   "%add180_59300_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_59300_reload"   --->   Operation 188 'read' 'add180_59300_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 189 [1/1] (0.00ns)   --->   "%add180_49287_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_49287_reload"   --->   Operation 189 'read' 'add180_49287_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 190 [1/1] (0.00ns)   --->   "%add180_39274_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_39274_reload"   --->   Operation 190 'read' 'add180_39274_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 191 [1/1] (0.00ns)   --->   "%add180_29261_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_29261_reload"   --->   Operation 191 'read' 'add180_29261_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 192 [1/1] (0.00ns)   --->   "%add180_19248_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add180_19248_reload"   --->   Operation 192 'read' 'add180_19248_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 193 [1/1] (0.00ns)   --->   "%add1809235_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %add1809235_reload"   --->   Operation 193 'read' 'add1809235_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 194 [1/1] (0.00ns)   --->   "%sext_ln76_read = read i62 @_ssdm_op_Read.ap_auto.i62, i62 %sext_ln76"   --->   Operation 194 'read' 'sext_ln76_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 195 [1/1] (0.00ns)   --->   "%sext_ln76_cast = sext i62 %sext_ln76_read"   --->   Operation 195 'sext' 'sext_ln76_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 196 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem0, void @empty_0, i32 0, i32 0, void @empty_1, i32 0, i32 0, void @empty_2, void @empty_16, void @empty_1, i32 16, i32 16, i32 16, i32 16, void @empty_1, void @empty_1, i32 4294967295, i32 0, i32 0"   --->   Operation 196 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 197 [1/1] (0.42ns)   --->   "%store_ln135 = store i4 0, i4 %i_2" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 197 'store' 'store_ln135' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 198 [1/1] (0.00ns)   --->   "%br_ln0 = br void %VITIS_LOOP_137_6"   --->   Operation 198 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 199 [1/1] (0.00ns)   --->   "%i = load i4 %i_2" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 199 'load' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 200 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %gmem0"   --->   Operation 200 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 201 [1/1] (0.79ns)   --->   "%icmp_ln135 = icmp_eq  i4 %i, i4 13" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 201 'icmp' 'icmp_ln135' <Predicate = true> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 202 [1/1] (0.79ns)   --->   "%add_ln135 = add i4 %i, i4 1" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 202 'add' 'add_ln135' <Predicate = true> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 203 [1/1] (0.00ns)   --->   "%br_ln135 = br i1 %icmp_ln135, void %VITIS_LOOP_137_6.split, void %for.inc228.exitStub" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 203 'br' 'br_ln135' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 204 [1/1] (0.00ns)   --->   "%gmem0_addr = getelementptr i32 %gmem0, i64 %sext_ln76_cast" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:76]   --->   Operation 204 'getelementptr' 'gmem0_addr' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_1 : Operation 205 [1/1] (0.66ns)   --->   "%tmp = sparsemux i32 @_ssdm_op_SparseMux.ap_auto.13float.float.i4, i4 0, i32 %add1809235_reload_read, i4 1, i32 %add180_19248_reload_read, i4 2, i32 %add180_29261_reload_read, i4 3, i32 %add180_39274_reload_read, i4 4, i32 %add180_49287_reload_read, i4 5, i32 %add180_59300_reload_read, i4 6, i32 %add180_69313_reload_read, i4 7, i32 %add180_79326_reload_read, i4 8, i32 %add180_89339_reload_read, i4 9, i32 %add180_99352_reload_read, i4 10, i32 %add180_109365_reload_read, i4 11, i32 %add180_119378_reload_read, i4 12, i32 %add180_129391_reload_read, i32 <undef>, i4 %i" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 205 'sparsemux' 'tmp' <Predicate = (!icmp_ln135)> <Delay = 0.66> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 149 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 206 [1/1] (0.66ns)   --->   "%tmp_1 = sparsemux i32 @_ssdm_op_SparseMux.ap_auto.13float.float.i4, i4 0, i32 %add180_182579236_reload_read, i4 1, i32 %add180_1_19249_reload_read, i4 2, i32 %add180_2_19262_reload_read, i4 3, i32 %add180_3_19275_reload_read, i4 4, i32 %add180_4_19288_reload_read, i4 5, i32 %add180_5_19301_reload_read, i4 6, i32 %add180_6_19314_reload_read, i4 7, i32 %add180_7_19327_reload_read, i4 8, i32 %add180_8_19340_reload_read, i4 9, i32 %add180_9_19353_reload_read, i4 10, i32 %add180_10_19366_reload_read, i4 11, i32 %add180_11_19379_reload_read, i4 12, i32 %add180_12_19392_reload_read, i32 <undef>, i4 %i" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 206 'sparsemux' 'tmp_1' <Predicate = (!icmp_ln135)> <Delay = 0.66> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 149 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 207 [1/1] (0.66ns)   --->   "%tmp_2 = sparsemux i32 @_ssdm_op_SparseMux.ap_auto.13float.float.i4, i4 0, i32 %add180_282749237_reload_read, i4 1, i32 %add180_1_29250_reload_read, i4 2, i32 %add180_2_29263_reload_read, i4 3, i32 %add180_3_29276_reload_read, i4 4, i32 %add180_4_29289_reload_read, i4 5, i32 %add180_5_29302_reload_read, i4 6, i32 %add180_6_29315_reload_read, i4 7, i32 %add180_7_29328_reload_read, i4 8, i32 %add180_8_29341_reload_read, i4 9, i32 %add180_9_29354_reload_read, i4 10, i32 %add180_10_29367_reload_read, i4 11, i32 %add180_11_29380_reload_read, i4 12, i32 %add180_12_29393_reload_read, i32 <undef>, i4 %i" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 207 'sparsemux' 'tmp_2' <Predicate = (!icmp_ln135)> <Delay = 0.66> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 149 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 208 [1/1] (0.66ns)   --->   "%tmp_3 = sparsemux i32 @_ssdm_op_SparseMux.ap_auto.13float.float.i4, i4 0, i32 %add180_382919238_reload_read, i4 1, i32 %add180_1_39251_reload_read, i4 2, i32 %add180_2_39264_reload_read, i4 3, i32 %add180_3_39277_reload_read, i4 4, i32 %add180_4_39290_reload_read, i4 5, i32 %add180_5_39303_reload_read, i4 6, i32 %add180_6_39316_reload_read, i4 7, i32 %add180_7_39329_reload_read, i4 8, i32 %add180_8_39342_reload_read, i4 9, i32 %add180_9_39355_reload_read, i4 10, i32 %add180_10_39368_reload_read, i4 11, i32 %add180_11_39381_reload_read, i4 12, i32 %add180_12_39394_reload_read, i32 <undef>, i4 %i" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 208 'sparsemux' 'tmp_3' <Predicate = (!icmp_ln135)> <Delay = 0.66> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 149 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 209 [1/1] (0.66ns)   --->   "%tmp_4 = sparsemux i32 @_ssdm_op_SparseMux.ap_auto.13float.float.i4, i4 0, i32 %add180_483089239_reload_read, i4 1, i32 %add180_1_49252_reload_read, i4 2, i32 %add180_2_49265_reload_read, i4 3, i32 %add180_3_49278_reload_read, i4 4, i32 %add180_4_49291_reload_read, i4 5, i32 %add180_5_49304_reload_read, i4 6, i32 %add180_6_49317_reload_read, i4 7, i32 %add180_7_49330_reload_read, i4 8, i32 %add180_8_49343_reload_read, i4 9, i32 %add180_9_49356_reload_read, i4 10, i32 %add180_10_49369_reload_read, i4 11, i32 %add180_11_49382_reload_read, i4 12, i32 %add180_12_49395_reload_read, i32 <undef>, i4 %i" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 209 'sparsemux' 'tmp_4' <Predicate = (!icmp_ln135)> <Delay = 0.66> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 149 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 210 [1/1] (0.66ns)   --->   "%tmp_5 = sparsemux i32 @_ssdm_op_SparseMux.ap_auto.13float.float.i4, i4 0, i32 %add180_583259240_reload_read, i4 1, i32 %add180_1_59253_reload_read, i4 2, i32 %add180_2_59266_reload_read, i4 3, i32 %add180_3_59279_reload_read, i4 4, i32 %add180_4_59292_reload_read, i4 5, i32 %add180_5_59305_reload_read, i4 6, i32 %add180_6_59318_reload_read, i4 7, i32 %add180_7_59331_reload_read, i4 8, i32 %add180_8_59344_reload_read, i4 9, i32 %add180_9_59357_reload_read, i4 10, i32 %add180_10_59370_reload_read, i4 11, i32 %add180_11_59383_reload_read, i4 12, i32 %add180_12_59396_reload_read, i32 <undef>, i4 %i" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 210 'sparsemux' 'tmp_5' <Predicate = (!icmp_ln135)> <Delay = 0.66> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 149 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 211 [1/1] (0.66ns)   --->   "%tmp_6 = sparsemux i32 @_ssdm_op_SparseMux.ap_auto.13float.float.i4, i4 0, i32 %add180_683429241_reload_read, i4 1, i32 %add180_1_69254_reload_read, i4 2, i32 %add180_2_69267_reload_read, i4 3, i32 %add180_3_69280_reload_read, i4 4, i32 %add180_4_69293_reload_read, i4 5, i32 %add180_5_69306_reload_read, i4 6, i32 %add180_6_69319_reload_read, i4 7, i32 %add180_7_69332_reload_read, i4 8, i32 %add180_8_69345_reload_read, i4 9, i32 %add180_9_69358_reload_read, i4 10, i32 %add180_10_69371_reload_read, i4 11, i32 %add180_11_69384_reload_read, i4 12, i32 %add180_12_69397_reload_read, i32 <undef>, i4 %i" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 211 'sparsemux' 'tmp_6' <Predicate = (!icmp_ln135)> <Delay = 0.66> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 149 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 212 [1/1] (0.66ns)   --->   "%tmp_7 = sparsemux i32 @_ssdm_op_SparseMux.ap_auto.13float.float.i4, i4 0, i32 %add180_783599242_reload_read, i4 1, i32 %add180_1_79255_reload_read, i4 2, i32 %add180_2_79268_reload_read, i4 3, i32 %add180_3_79281_reload_read, i4 4, i32 %add180_4_79294_reload_read, i4 5, i32 %add180_5_79307_reload_read, i4 6, i32 %add180_6_79320_reload_read, i4 7, i32 %add180_7_79333_reload_read, i4 8, i32 %add180_8_79346_reload_read, i4 9, i32 %add180_9_79359_reload_read, i4 10, i32 %add180_10_79372_reload_read, i4 11, i32 %add180_11_79385_reload_read, i4 12, i32 %add180_12_79398_reload_read, i32 <undef>, i4 %i" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 212 'sparsemux' 'tmp_7' <Predicate = (!icmp_ln135)> <Delay = 0.66> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 149 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 213 [1/1] (0.66ns)   --->   "%tmp_8 = sparsemux i32 @_ssdm_op_SparseMux.ap_auto.13float.float.i4, i4 0, i32 %add180_883769243_reload_read, i4 1, i32 %add180_1_89256_reload_read, i4 2, i32 %add180_2_89269_reload_read, i4 3, i32 %add180_3_89282_reload_read, i4 4, i32 %add180_4_89295_reload_read, i4 5, i32 %add180_5_89308_reload_read, i4 6, i32 %add180_6_89321_reload_read, i4 7, i32 %add180_7_89334_reload_read, i4 8, i32 %add180_8_89347_reload_read, i4 9, i32 %add180_9_89360_reload_read, i4 10, i32 %add180_10_89373_reload_read, i4 11, i32 %add180_11_89386_reload_read, i4 12, i32 %add180_12_89399_reload_read, i32 <undef>, i4 %i" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 213 'sparsemux' 'tmp_8' <Predicate = (!icmp_ln135)> <Delay = 0.66> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 149 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 214 [1/1] (0.66ns)   --->   "%tmp_9 = sparsemux i32 @_ssdm_op_SparseMux.ap_auto.13float.float.i4, i4 0, i32 %add180_983939244_reload_read, i4 1, i32 %add180_1_99257_reload_read, i4 2, i32 %add180_2_99270_reload_read, i4 3, i32 %add180_3_99283_reload_read, i4 4, i32 %add180_4_99296_reload_read, i4 5, i32 %add180_5_99309_reload_read, i4 6, i32 %add180_6_99322_reload_read, i4 7, i32 %add180_7_99335_reload_read, i4 8, i32 %add180_8_99348_reload_read, i4 9, i32 %add180_9_99361_reload_read, i4 10, i32 %add180_10_99374_reload_read, i4 11, i32 %add180_11_99387_reload_read, i4 12, i32 %add180_12_99400_reload_read, i32 <undef>, i4 %i" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 214 'sparsemux' 'tmp_9' <Predicate = (!icmp_ln135)> <Delay = 0.66> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 149 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 215 [1/1] (0.66ns)   --->   "%tmp_s = sparsemux i32 @_ssdm_op_SparseMux.ap_auto.13float.float.i4, i4 0, i32 %add180_1084109245_reload_read, i4 1, i32 %add180_1_109258_reload_read, i4 2, i32 %add180_2_109271_reload_read, i4 3, i32 %add180_3_109284_reload_read, i4 4, i32 %add180_4_109297_reload_read, i4 5, i32 %add180_5_109310_reload_read, i4 6, i32 %add180_6_109323_reload_read, i4 7, i32 %add180_7_109336_reload_read, i4 8, i32 %add180_8_109349_reload_read, i4 9, i32 %add180_9_109362_reload_read, i4 10, i32 %add180_10_109375_reload_read, i4 11, i32 %add180_11_109388_reload_read, i4 12, i32 %add180_12_109401_reload_read, i32 <undef>, i4 %i" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 215 'sparsemux' 'tmp_s' <Predicate = (!icmp_ln135)> <Delay = 0.66> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 149 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 216 [1/1] (0.66ns)   --->   "%tmp_10 = sparsemux i32 @_ssdm_op_SparseMux.ap_auto.13float.float.i4, i4 0, i32 %add180_1184279246_reload_read, i4 1, i32 %add180_1_119259_reload_read, i4 2, i32 %add180_2_119272_reload_read, i4 3, i32 %add180_3_119285_reload_read, i4 4, i32 %add180_4_119298_reload_read, i4 5, i32 %add180_5_119311_reload_read, i4 6, i32 %add180_6_119324_reload_read, i4 7, i32 %add180_7_119337_reload_read, i4 8, i32 %add180_8_119350_reload_read, i4 9, i32 %add180_9_119363_reload_read, i4 10, i32 %add180_10_119376_reload_read, i4 11, i32 %add180_11_119389_reload_read, i4 12, i32 %add180_12_119402_reload_read, i32 <undef>, i4 %i" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 216 'sparsemux' 'tmp_10' <Predicate = (!icmp_ln135)> <Delay = 0.66> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 149 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 217 [1/1] (0.66ns)   --->   "%tmp_11 = sparsemux i32 @_ssdm_op_SparseMux.ap_auto.13float.float.i4, i4 0, i32 %add180_1284449247_reload_read, i4 1, i32 %add180_1_129260_reload_read, i4 2, i32 %add180_2_129273_reload_read, i4 3, i32 %add180_3_129286_reload_read, i4 4, i32 %add180_4_129299_reload_read, i4 5, i32 %add180_5_129312_reload_read, i4 6, i32 %add180_6_129325_reload_read, i4 7, i32 %add180_7_129338_reload_read, i4 8, i32 %add180_8_129351_reload_read, i4 9, i32 %add180_9_129364_reload_read, i4 10, i32 %add180_10_129377_reload_read, i4 11, i32 %add180_11_129390_reload_read, i4 12, i32 %add180_12_129412_reload_read, i32 <undef>, i4 %i" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 217 'sparsemux' 'tmp_11' <Predicate = (!icmp_ln135)> <Delay = 0.66> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 149 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 0.66> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 218 [1/1] (0.42ns)   --->   "%store_ln135 = store i4 %add_ln135, i4 %i_2" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 218 'store' 'store_ln135' <Predicate = (!icmp_ln135)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 6.43>
ST_2 : Operation 219 [4/4] (6.43ns)   --->   "%out = fadd i32 %tmp, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 219 'fadd' 'out' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 6.43>
ST_3 : Operation 220 [3/4] (6.43ns)   --->   "%out = fadd i32 %tmp, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 220 'fadd' 'out' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 221 [4/4] (6.43ns)   --->   "%out_1 = fadd i32 %tmp_1, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 221 'fadd' 'out_1' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 6.43>
ST_4 : Operation 222 [2/4] (6.43ns)   --->   "%out = fadd i32 %tmp, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 222 'fadd' 'out' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 223 [3/4] (6.43ns)   --->   "%out_1 = fadd i32 %tmp_1, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 223 'fadd' 'out_1' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 224 [4/4] (6.43ns)   --->   "%out_2 = fadd i32 %tmp_2, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 224 'fadd' 'out_2' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 6.43>
ST_5 : Operation 225 [1/4] (6.43ns)   --->   "%out = fadd i32 %tmp, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 225 'fadd' 'out' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 226 [2/4] (6.43ns)   --->   "%out_1 = fadd i32 %tmp_1, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 226 'fadd' 'out_1' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 227 [3/4] (6.43ns)   --->   "%out_2 = fadd i32 %tmp_2, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 227 'fadd' 'out_2' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 228 [4/4] (6.43ns)   --->   "%out_3 = fadd i32 %tmp_3, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 228 'fadd' 'out_3' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 6.43>
ST_6 : Operation 229 [2/2] (2.78ns)   --->   "%tmp_26 = fcmp_ogt  i32 %out, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 229 'fcmp' 'tmp_26' <Predicate = (!icmp_ln135)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 230 [1/4] (6.43ns)   --->   "%out_1 = fadd i32 %tmp_1, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 230 'fadd' 'out_1' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 231 [2/4] (6.43ns)   --->   "%out_2 = fadd i32 %tmp_2, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 231 'fadd' 'out_2' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 232 [3/4] (6.43ns)   --->   "%out_3 = fadd i32 %tmp_3, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 232 'fadd' 'out_3' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 233 [4/4] (6.43ns)   --->   "%out_4 = fadd i32 %tmp_4, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 233 'fadd' 'out_4' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 6.43>
ST_7 : Operation 234 [1/1] (0.00ns)   --->   "%bitcast_ln142 = bitcast i32 %out" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 234 'bitcast' 'bitcast_ln142' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_7 : Operation 235 [1/1] (0.00ns)   --->   "%tmp_25 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln142, i32 23, i32 30" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 235 'partselect' 'tmp_25' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_7 : Operation 236 [1/1] (0.00ns)   --->   "%trunc_ln142 = trunc i32 %bitcast_ln142" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 236 'trunc' 'trunc_ln142' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_7 : Operation 237 [1/1] (0.76ns)   --->   "%icmp_ln142 = icmp_ne  i8 %tmp_25, i8 255" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 237 'icmp' 'icmp_ln142' <Predicate = (!icmp_ln135)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 238 [1/1] (0.92ns)   --->   "%icmp_ln142_1 = icmp_eq  i23 %trunc_ln142, i23 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 238 'icmp' 'icmp_ln142_1' <Predicate = (!icmp_ln135)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 239 [1/1] (0.00ns) (grouped into LUT with out node select_ln135)   --->   "%or_ln142 = or i1 %icmp_ln142_1, i1 %icmp_ln142" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 239 'or' 'or_ln142' <Predicate = (!icmp_ln135)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 240 [1/2] (2.78ns)   --->   "%tmp_26 = fcmp_ogt  i32 %out, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 240 'fcmp' 'tmp_26' <Predicate = (!icmp_ln135)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 241 [1/1] (0.00ns) (grouped into LUT with out node select_ln135)   --->   "%and_ln142 = and i1 %or_ln142, i1 %tmp_26" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 241 'and' 'and_ln142' <Predicate = (!icmp_ln135)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 242 [2/2] (2.78ns)   --->   "%tmp_28 = fcmp_ogt  i32 %out_1, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 242 'fcmp' 'tmp_28' <Predicate = (!icmp_ln135)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 243 [1/4] (6.43ns)   --->   "%out_2 = fadd i32 %tmp_2, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 243 'fadd' 'out_2' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 244 [2/4] (6.43ns)   --->   "%out_3 = fadd i32 %tmp_3, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 244 'fadd' 'out_3' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 245 [3/4] (6.43ns)   --->   "%out_4 = fadd i32 %tmp_4, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 245 'fadd' 'out_4' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 246 [4/4] (6.43ns)   --->   "%out_5 = fadd i32 %tmp_5, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 246 'fadd' 'out_5' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 247 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln135 = select i1 %and_ln142, i32 %bitcast_ln142, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 247 'select' 'select_ln135' <Predicate = (!icmp_ln135)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 418 [1/1] (0.42ns)   --->   "%ret_ln0 = ret"   --->   Operation 418 'ret' 'ret_ln0' <Predicate = (icmp_ln135)> <Delay = 0.42>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 248 [1/1] (0.00ns)   --->   "%bitcast_ln142_1 = bitcast i32 %out_1" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 248 'bitcast' 'bitcast_ln142_1' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_8 : Operation 249 [1/1] (0.00ns)   --->   "%tmp_27 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln142_1, i32 23, i32 30" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 249 'partselect' 'tmp_27' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_8 : Operation 250 [1/1] (0.00ns)   --->   "%trunc_ln142_1 = trunc i32 %bitcast_ln142_1" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 250 'trunc' 'trunc_ln142_1' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_8 : Operation 251 [1/1] (0.76ns)   --->   "%icmp_ln142_2 = icmp_ne  i8 %tmp_27, i8 255" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 251 'icmp' 'icmp_ln142_2' <Predicate = (!icmp_ln135)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 252 [1/1] (0.92ns)   --->   "%icmp_ln142_3 = icmp_eq  i23 %trunc_ln142_1, i23 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 252 'icmp' 'icmp_ln142_3' <Predicate = (!icmp_ln135)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 253 [1/1] (0.00ns) (grouped into LUT with out node select_ln135_1)   --->   "%or_ln142_1 = or i1 %icmp_ln142_3, i1 %icmp_ln142_2" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 253 'or' 'or_ln142_1' <Predicate = (!icmp_ln135)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 254 [1/2] (2.78ns)   --->   "%tmp_28 = fcmp_ogt  i32 %out_1, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 254 'fcmp' 'tmp_28' <Predicate = (!icmp_ln135)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 255 [1/1] (0.00ns) (grouped into LUT with out node select_ln135_1)   --->   "%and_ln142_1 = and i1 %or_ln142_1, i1 %tmp_28" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 255 'and' 'and_ln142_1' <Predicate = (!icmp_ln135)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 256 [2/2] (2.78ns)   --->   "%tmp_30 = fcmp_ogt  i32 %out_2, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 256 'fcmp' 'tmp_30' <Predicate = (!icmp_ln135)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 257 [1/4] (6.43ns)   --->   "%out_3 = fadd i32 %tmp_3, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 257 'fadd' 'out_3' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 258 [2/4] (6.43ns)   --->   "%out_4 = fadd i32 %tmp_4, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 258 'fadd' 'out_4' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 259 [3/4] (6.43ns)   --->   "%out_5 = fadd i32 %tmp_5, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 259 'fadd' 'out_5' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 260 [4/4] (6.43ns)   --->   "%out_6 = fadd i32 %tmp_6, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 260 'fadd' 'out_6' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 261 [1/1] (7.30ns)   --->   "%write_ln135 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem0_addr, i32 %select_ln135, i4 15" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 261 'write' 'write_ln135' <Predicate = (!icmp_ln135)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 262 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln135_1 = select i1 %and_ln142_1, i32 %bitcast_ln142_1, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 262 'select' 'select_ln135_1' <Predicate = (!icmp_ln135)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 263 [1/1] (0.00ns)   --->   "%bitcast_ln142_2 = bitcast i32 %out_2" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 263 'bitcast' 'bitcast_ln142_2' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_9 : Operation 264 [1/1] (0.00ns)   --->   "%tmp_29 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln142_2, i32 23, i32 30" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 264 'partselect' 'tmp_29' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_9 : Operation 265 [1/1] (0.00ns)   --->   "%trunc_ln142_2 = trunc i32 %bitcast_ln142_2" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 265 'trunc' 'trunc_ln142_2' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_9 : Operation 266 [1/1] (0.76ns)   --->   "%icmp_ln142_4 = icmp_ne  i8 %tmp_29, i8 255" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 266 'icmp' 'icmp_ln142_4' <Predicate = (!icmp_ln135)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 267 [1/1] (0.92ns)   --->   "%icmp_ln142_5 = icmp_eq  i23 %trunc_ln142_2, i23 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 267 'icmp' 'icmp_ln142_5' <Predicate = (!icmp_ln135)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 268 [1/1] (0.00ns) (grouped into LUT with out node select_ln135_2)   --->   "%or_ln142_2 = or i1 %icmp_ln142_5, i1 %icmp_ln142_4" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 268 'or' 'or_ln142_2' <Predicate = (!icmp_ln135)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 269 [1/2] (2.78ns)   --->   "%tmp_30 = fcmp_ogt  i32 %out_2, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 269 'fcmp' 'tmp_30' <Predicate = (!icmp_ln135)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 270 [1/1] (0.00ns) (grouped into LUT with out node select_ln135_2)   --->   "%and_ln142_2 = and i1 %or_ln142_2, i1 %tmp_30" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 270 'and' 'and_ln142_2' <Predicate = (!icmp_ln135)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 271 [2/2] (2.78ns)   --->   "%tmp_32 = fcmp_ogt  i32 %out_3, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 271 'fcmp' 'tmp_32' <Predicate = (!icmp_ln135)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 272 [1/4] (6.43ns)   --->   "%out_4 = fadd i32 %tmp_4, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 272 'fadd' 'out_4' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 273 [2/4] (6.43ns)   --->   "%out_5 = fadd i32 %tmp_5, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 273 'fadd' 'out_5' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 274 [3/4] (6.43ns)   --->   "%out_6 = fadd i32 %tmp_6, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 274 'fadd' 'out_6' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 275 [4/4] (6.43ns)   --->   "%out_7 = fadd i32 %tmp_7, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 275 'fadd' 'out_7' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 276 [1/1] (7.30ns)   --->   "%write_ln135 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem0_addr, i32 %select_ln135_1, i4 15" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 276 'write' 'write_ln135' <Predicate = (!icmp_ln135)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 277 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln135_2 = select i1 %and_ln142_2, i32 %bitcast_ln142_2, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 277 'select' 'select_ln135_2' <Predicate = (!icmp_ln135)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 10 <SV = 9> <Delay = 7.30>
ST_10 : Operation 278 [1/1] (0.00ns)   --->   "%bitcast_ln142_3 = bitcast i32 %out_3" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 278 'bitcast' 'bitcast_ln142_3' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_10 : Operation 279 [1/1] (0.00ns)   --->   "%tmp_31 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln142_3, i32 23, i32 30" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 279 'partselect' 'tmp_31' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_10 : Operation 280 [1/1] (0.00ns)   --->   "%trunc_ln142_3 = trunc i32 %bitcast_ln142_3" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 280 'trunc' 'trunc_ln142_3' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_10 : Operation 281 [1/1] (0.76ns)   --->   "%icmp_ln142_6 = icmp_ne  i8 %tmp_31, i8 255" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 281 'icmp' 'icmp_ln142_6' <Predicate = (!icmp_ln135)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 282 [1/1] (0.92ns)   --->   "%icmp_ln142_7 = icmp_eq  i23 %trunc_ln142_3, i23 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 282 'icmp' 'icmp_ln142_7' <Predicate = (!icmp_ln135)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 283 [1/1] (0.00ns) (grouped into LUT with out node select_ln135_3)   --->   "%or_ln142_3 = or i1 %icmp_ln142_7, i1 %icmp_ln142_6" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 283 'or' 'or_ln142_3' <Predicate = (!icmp_ln135)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 284 [1/2] (2.78ns)   --->   "%tmp_32 = fcmp_ogt  i32 %out_3, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 284 'fcmp' 'tmp_32' <Predicate = (!icmp_ln135)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 285 [1/1] (0.00ns) (grouped into LUT with out node select_ln135_3)   --->   "%and_ln142_3 = and i1 %or_ln142_3, i1 %tmp_32" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 285 'and' 'and_ln142_3' <Predicate = (!icmp_ln135)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 286 [2/2] (2.78ns)   --->   "%tmp_34 = fcmp_ogt  i32 %out_4, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 286 'fcmp' 'tmp_34' <Predicate = (!icmp_ln135)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 287 [1/4] (6.43ns)   --->   "%out_5 = fadd i32 %tmp_5, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 287 'fadd' 'out_5' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 288 [2/4] (6.43ns)   --->   "%out_6 = fadd i32 %tmp_6, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 288 'fadd' 'out_6' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 289 [3/4] (6.43ns)   --->   "%out_7 = fadd i32 %tmp_7, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 289 'fadd' 'out_7' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 290 [4/4] (6.43ns)   --->   "%out_8 = fadd i32 %tmp_8, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 290 'fadd' 'out_8' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 291 [1/1] (7.30ns)   --->   "%write_ln135 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem0_addr, i32 %select_ln135_2, i4 15" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 291 'write' 'write_ln135' <Predicate = (!icmp_ln135)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 292 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln135_3 = select i1 %and_ln142_3, i32 %bitcast_ln142_3, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 292 'select' 'select_ln135_3' <Predicate = (!icmp_ln135)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 11 <SV = 10> <Delay = 7.30>
ST_11 : Operation 293 [1/1] (0.00ns)   --->   "%bitcast_ln142_4 = bitcast i32 %out_4" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 293 'bitcast' 'bitcast_ln142_4' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_11 : Operation 294 [1/1] (0.00ns)   --->   "%tmp_33 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln142_4, i32 23, i32 30" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 294 'partselect' 'tmp_33' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_11 : Operation 295 [1/1] (0.00ns)   --->   "%trunc_ln142_4 = trunc i32 %bitcast_ln142_4" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 295 'trunc' 'trunc_ln142_4' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_11 : Operation 296 [1/1] (0.76ns)   --->   "%icmp_ln142_8 = icmp_ne  i8 %tmp_33, i8 255" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 296 'icmp' 'icmp_ln142_8' <Predicate = (!icmp_ln135)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 297 [1/1] (0.92ns)   --->   "%icmp_ln142_9 = icmp_eq  i23 %trunc_ln142_4, i23 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 297 'icmp' 'icmp_ln142_9' <Predicate = (!icmp_ln135)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 298 [1/1] (0.00ns) (grouped into LUT with out node select_ln135_4)   --->   "%or_ln142_4 = or i1 %icmp_ln142_9, i1 %icmp_ln142_8" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 298 'or' 'or_ln142_4' <Predicate = (!icmp_ln135)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 299 [1/2] (2.78ns)   --->   "%tmp_34 = fcmp_ogt  i32 %out_4, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 299 'fcmp' 'tmp_34' <Predicate = (!icmp_ln135)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 300 [1/1] (0.00ns) (grouped into LUT with out node select_ln135_4)   --->   "%and_ln142_4 = and i1 %or_ln142_4, i1 %tmp_34" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 300 'and' 'and_ln142_4' <Predicate = (!icmp_ln135)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 301 [2/2] (2.78ns)   --->   "%tmp_36 = fcmp_ogt  i32 %out_5, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 301 'fcmp' 'tmp_36' <Predicate = (!icmp_ln135)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 302 [1/4] (6.43ns)   --->   "%out_6 = fadd i32 %tmp_6, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 302 'fadd' 'out_6' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 303 [2/4] (6.43ns)   --->   "%out_7 = fadd i32 %tmp_7, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 303 'fadd' 'out_7' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 304 [3/4] (6.43ns)   --->   "%out_8 = fadd i32 %tmp_8, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 304 'fadd' 'out_8' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 305 [4/4] (6.43ns)   --->   "%out_9 = fadd i32 %tmp_9, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 305 'fadd' 'out_9' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 306 [1/1] (7.30ns)   --->   "%write_ln135 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem0_addr, i32 %select_ln135_3, i4 15" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 306 'write' 'write_ln135' <Predicate = (!icmp_ln135)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 307 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln135_4 = select i1 %and_ln142_4, i32 %bitcast_ln142_4, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 307 'select' 'select_ln135_4' <Predicate = (!icmp_ln135)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 308 [1/1] (0.00ns)   --->   "%bitcast_ln142_5 = bitcast i32 %out_5" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 308 'bitcast' 'bitcast_ln142_5' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_12 : Operation 309 [1/1] (0.00ns)   --->   "%tmp_35 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln142_5, i32 23, i32 30" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 309 'partselect' 'tmp_35' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_12 : Operation 310 [1/1] (0.00ns)   --->   "%trunc_ln142_5 = trunc i32 %bitcast_ln142_5" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 310 'trunc' 'trunc_ln142_5' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_12 : Operation 311 [1/1] (0.76ns)   --->   "%icmp_ln142_10 = icmp_ne  i8 %tmp_35, i8 255" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 311 'icmp' 'icmp_ln142_10' <Predicate = (!icmp_ln135)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 312 [1/1] (0.92ns)   --->   "%icmp_ln142_11 = icmp_eq  i23 %trunc_ln142_5, i23 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 312 'icmp' 'icmp_ln142_11' <Predicate = (!icmp_ln135)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 313 [1/1] (0.00ns) (grouped into LUT with out node select_ln135_5)   --->   "%or_ln142_5 = or i1 %icmp_ln142_11, i1 %icmp_ln142_10" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 313 'or' 'or_ln142_5' <Predicate = (!icmp_ln135)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 314 [1/2] (2.78ns)   --->   "%tmp_36 = fcmp_ogt  i32 %out_5, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 314 'fcmp' 'tmp_36' <Predicate = (!icmp_ln135)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 315 [1/1] (0.00ns) (grouped into LUT with out node select_ln135_5)   --->   "%and_ln142_5 = and i1 %or_ln142_5, i1 %tmp_36" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 315 'and' 'and_ln142_5' <Predicate = (!icmp_ln135)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 316 [2/2] (2.78ns)   --->   "%tmp_38 = fcmp_ogt  i32 %out_6, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 316 'fcmp' 'tmp_38' <Predicate = (!icmp_ln135)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 317 [1/4] (6.43ns)   --->   "%out_7 = fadd i32 %tmp_7, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 317 'fadd' 'out_7' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 318 [2/4] (6.43ns)   --->   "%out_8 = fadd i32 %tmp_8, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 318 'fadd' 'out_8' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 319 [3/4] (6.43ns)   --->   "%out_9 = fadd i32 %tmp_9, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 319 'fadd' 'out_9' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 320 [4/4] (6.43ns)   --->   "%out_13 = fadd i32 %tmp_s, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 320 'fadd' 'out_13' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 321 [1/1] (7.30ns)   --->   "%write_ln135 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem0_addr, i32 %select_ln135_4, i4 15" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 321 'write' 'write_ln135' <Predicate = (!icmp_ln135)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 322 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln135_5 = select i1 %and_ln142_5, i32 %bitcast_ln142_5, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 322 'select' 'select_ln135_5' <Predicate = (!icmp_ln135)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 13 <SV = 12> <Delay = 7.30>
ST_13 : Operation 323 [1/1] (0.00ns)   --->   "%bitcast_ln142_6 = bitcast i32 %out_6" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 323 'bitcast' 'bitcast_ln142_6' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_13 : Operation 324 [1/1] (0.00ns)   --->   "%tmp_37 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln142_6, i32 23, i32 30" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 324 'partselect' 'tmp_37' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_13 : Operation 325 [1/1] (0.00ns)   --->   "%trunc_ln142_6 = trunc i32 %bitcast_ln142_6" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 325 'trunc' 'trunc_ln142_6' <Predicate = (!icmp_ln135)> <Delay = 0.00>
ST_13 : Operation 326 [1/1] (0.76ns)   --->   "%icmp_ln142_12 = icmp_ne  i8 %tmp_37, i8 255" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 326 'icmp' 'icmp_ln142_12' <Predicate = (!icmp_ln135)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 327 [1/1] (0.92ns)   --->   "%icmp_ln142_13 = icmp_eq  i23 %trunc_ln142_6, i23 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 327 'icmp' 'icmp_ln142_13' <Predicate = (!icmp_ln135)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 328 [1/1] (0.00ns) (grouped into LUT with out node select_ln135_6)   --->   "%or_ln142_6 = or i1 %icmp_ln142_13, i1 %icmp_ln142_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 328 'or' 'or_ln142_6' <Predicate = (!icmp_ln135)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 329 [1/2] (2.78ns)   --->   "%tmp_38 = fcmp_ogt  i32 %out_6, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 329 'fcmp' 'tmp_38' <Predicate = (!icmp_ln135)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 330 [1/1] (0.00ns) (grouped into LUT with out node select_ln135_6)   --->   "%and_ln142_6 = and i1 %or_ln142_6, i1 %tmp_38" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 330 'and' 'and_ln142_6' <Predicate = (!icmp_ln135)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 331 [2/2] (2.78ns)   --->   "%tmp_40 = fcmp_ogt  i32 %out_7, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 331 'fcmp' 'tmp_40' <Predicate = (!icmp_ln135)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 332 [1/4] (6.43ns)   --->   "%out_8 = fadd i32 %tmp_8, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 332 'fadd' 'out_8' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 333 [2/4] (6.43ns)   --->   "%out_9 = fadd i32 %tmp_9, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 333 'fadd' 'out_9' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 334 [3/4] (6.43ns)   --->   "%out_13 = fadd i32 %tmp_s, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 334 'fadd' 'out_13' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 335 [4/4] (6.43ns)   --->   "%out_14 = fadd i32 %tmp_10, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 335 'fadd' 'out_14' <Predicate = (!icmp_ln135)> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 336 [1/1] (7.30ns)   --->   "%write_ln135 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem0_addr, i32 %select_ln135_5, i4 15" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 336 'write' 'write_ln135' <Predicate = (!icmp_ln135)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 337 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln135_6 = select i1 %and_ln142_6, i32 %bitcast_ln142_6, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 337 'select' 'select_ln135_6' <Predicate = (!icmp_ln135)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 14 <SV = 13> <Delay = 7.30>
ST_14 : Operation 338 [1/1] (0.00ns)   --->   "%bitcast_ln142_7 = bitcast i32 %out_7" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 338 'bitcast' 'bitcast_ln142_7' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 339 [1/1] (0.00ns)   --->   "%tmp_39 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln142_7, i32 23, i32 30" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 339 'partselect' 'tmp_39' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 340 [1/1] (0.00ns)   --->   "%trunc_ln142_7 = trunc i32 %bitcast_ln142_7" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 340 'trunc' 'trunc_ln142_7' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 341 [1/1] (0.76ns)   --->   "%icmp_ln142_14 = icmp_ne  i8 %tmp_39, i8 255" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 341 'icmp' 'icmp_ln142_14' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 342 [1/1] (0.92ns)   --->   "%icmp_ln142_15 = icmp_eq  i23 %trunc_ln142_7, i23 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 342 'icmp' 'icmp_ln142_15' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 343 [1/1] (0.00ns) (grouped into LUT with out node select_ln135_7)   --->   "%or_ln142_7 = or i1 %icmp_ln142_15, i1 %icmp_ln142_14" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 343 'or' 'or_ln142_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 344 [1/2] (2.78ns)   --->   "%tmp_40 = fcmp_ogt  i32 %out_7, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 344 'fcmp' 'tmp_40' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 345 [1/1] (0.00ns) (grouped into LUT with out node select_ln135_7)   --->   "%and_ln142_7 = and i1 %or_ln142_7, i1 %tmp_40" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 345 'and' 'and_ln142_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 346 [2/2] (2.78ns)   --->   "%tmp_42 = fcmp_ogt  i32 %out_8, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 346 'fcmp' 'tmp_42' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 347 [1/4] (6.43ns)   --->   "%out_9 = fadd i32 %tmp_9, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 347 'fadd' 'out_9' <Predicate = true> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 348 [2/4] (6.43ns)   --->   "%out_13 = fadd i32 %tmp_s, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 348 'fadd' 'out_13' <Predicate = true> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 349 [3/4] (6.43ns)   --->   "%out_14 = fadd i32 %tmp_10, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 349 'fadd' 'out_14' <Predicate = true> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 350 [4/4] (6.43ns)   --->   "%out_15 = fadd i32 %tmp_11, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 350 'fadd' 'out_15' <Predicate = true> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 351 [1/1] (7.30ns)   --->   "%write_ln135 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem0_addr, i32 %select_ln135_6, i4 15" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 351 'write' 'write_ln135' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_14 : Operation 352 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln135_7 = select i1 %and_ln142_7, i32 %bitcast_ln142_7, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 352 'select' 'select_ln135_7' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 15 <SV = 14> <Delay = 7.30>
ST_15 : Operation 353 [1/1] (0.00ns)   --->   "%bitcast_ln142_8 = bitcast i32 %out_8" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 353 'bitcast' 'bitcast_ln142_8' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 354 [1/1] (0.00ns)   --->   "%tmp_41 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln142_8, i32 23, i32 30" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 354 'partselect' 'tmp_41' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 355 [1/1] (0.00ns)   --->   "%trunc_ln142_8 = trunc i32 %bitcast_ln142_8" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 355 'trunc' 'trunc_ln142_8' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 356 [1/1] (0.76ns)   --->   "%icmp_ln142_16 = icmp_ne  i8 %tmp_41, i8 255" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 356 'icmp' 'icmp_ln142_16' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 357 [1/1] (0.92ns)   --->   "%icmp_ln142_17 = icmp_eq  i23 %trunc_ln142_8, i23 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 357 'icmp' 'icmp_ln142_17' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 358 [1/1] (0.00ns) (grouped into LUT with out node select_ln135_8)   --->   "%or_ln142_8 = or i1 %icmp_ln142_17, i1 %icmp_ln142_16" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 358 'or' 'or_ln142_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 359 [1/2] (2.78ns)   --->   "%tmp_42 = fcmp_ogt  i32 %out_8, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 359 'fcmp' 'tmp_42' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 360 [1/1] (0.00ns) (grouped into LUT with out node select_ln135_8)   --->   "%and_ln142_8 = and i1 %or_ln142_8, i1 %tmp_42" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 360 'and' 'and_ln142_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 361 [2/2] (2.78ns)   --->   "%tmp_44 = fcmp_ogt  i32 %out_9, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 361 'fcmp' 'tmp_44' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 362 [1/4] (6.43ns)   --->   "%out_13 = fadd i32 %tmp_s, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 362 'fadd' 'out_13' <Predicate = true> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 363 [2/4] (6.43ns)   --->   "%out_14 = fadd i32 %tmp_10, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 363 'fadd' 'out_14' <Predicate = true> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 364 [3/4] (6.43ns)   --->   "%out_15 = fadd i32 %tmp_11, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 364 'fadd' 'out_15' <Predicate = true> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 365 [1/1] (7.30ns)   --->   "%write_ln135 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem0_addr, i32 %select_ln135_7, i4 15" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 365 'write' 'write_ln135' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_15 : Operation 366 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln135_8 = select i1 %and_ln142_8, i32 %bitcast_ln142_8, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 366 'select' 'select_ln135_8' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 16 <SV = 15> <Delay = 7.30>
ST_16 : Operation 367 [1/1] (0.00ns)   --->   "%bitcast_ln142_9 = bitcast i32 %out_9" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 367 'bitcast' 'bitcast_ln142_9' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 368 [1/1] (0.00ns)   --->   "%tmp_43 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln142_9, i32 23, i32 30" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 368 'partselect' 'tmp_43' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 369 [1/1] (0.00ns)   --->   "%trunc_ln142_9 = trunc i32 %bitcast_ln142_9" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 369 'trunc' 'trunc_ln142_9' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 370 [1/1] (0.76ns)   --->   "%icmp_ln142_18 = icmp_ne  i8 %tmp_43, i8 255" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 370 'icmp' 'icmp_ln142_18' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 371 [1/1] (0.92ns)   --->   "%icmp_ln142_19 = icmp_eq  i23 %trunc_ln142_9, i23 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 371 'icmp' 'icmp_ln142_19' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 372 [1/1] (0.00ns) (grouped into LUT with out node select_ln135_9)   --->   "%or_ln142_9 = or i1 %icmp_ln142_19, i1 %icmp_ln142_18" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 372 'or' 'or_ln142_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 373 [1/2] (2.78ns)   --->   "%tmp_44 = fcmp_ogt  i32 %out_9, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 373 'fcmp' 'tmp_44' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 374 [1/1] (0.00ns) (grouped into LUT with out node select_ln135_9)   --->   "%and_ln142_9 = and i1 %or_ln142_9, i1 %tmp_44" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 374 'and' 'and_ln142_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 375 [2/2] (2.78ns)   --->   "%tmp_46 = fcmp_ogt  i32 %out_13, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 375 'fcmp' 'tmp_46' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 376 [1/4] (6.43ns)   --->   "%out_14 = fadd i32 %tmp_10, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 376 'fadd' 'out_14' <Predicate = true> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 377 [2/4] (6.43ns)   --->   "%out_15 = fadd i32 %tmp_11, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 377 'fadd' 'out_15' <Predicate = true> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 378 [1/1] (7.30ns)   --->   "%write_ln135 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem0_addr, i32 %select_ln135_8, i4 15" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 378 'write' 'write_ln135' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 379 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln135_9 = select i1 %and_ln142_9, i32 %bitcast_ln142_9, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 379 'select' 'select_ln135_9' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 17 <SV = 16> <Delay = 7.30>
ST_17 : Operation 380 [1/1] (0.00ns)   --->   "%bitcast_ln142_10 = bitcast i32 %out_13" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 380 'bitcast' 'bitcast_ln142_10' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 381 [1/1] (0.00ns)   --->   "%tmp_45 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln142_10, i32 23, i32 30" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 381 'partselect' 'tmp_45' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 382 [1/1] (0.00ns)   --->   "%trunc_ln142_10 = trunc i32 %bitcast_ln142_10" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 382 'trunc' 'trunc_ln142_10' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 383 [1/1] (0.76ns)   --->   "%icmp_ln142_20 = icmp_ne  i8 %tmp_45, i8 255" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 383 'icmp' 'icmp_ln142_20' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 384 [1/1] (0.92ns)   --->   "%icmp_ln142_21 = icmp_eq  i23 %trunc_ln142_10, i23 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 384 'icmp' 'icmp_ln142_21' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 385 [1/1] (0.00ns) (grouped into LUT with out node select_ln135_10)   --->   "%or_ln142_10 = or i1 %icmp_ln142_21, i1 %icmp_ln142_20" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 385 'or' 'or_ln142_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 386 [1/2] (2.78ns)   --->   "%tmp_46 = fcmp_ogt  i32 %out_13, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 386 'fcmp' 'tmp_46' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 387 [1/1] (0.00ns) (grouped into LUT with out node select_ln135_10)   --->   "%and_ln142_10 = and i1 %or_ln142_10, i1 %tmp_46" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 387 'and' 'and_ln142_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 388 [2/2] (2.78ns)   --->   "%tmp_48 = fcmp_ogt  i32 %out_14, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 388 'fcmp' 'tmp_48' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 389 [1/4] (6.43ns)   --->   "%out_15 = fadd i32 %tmp_11, i32 %tmp_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139]   --->   Operation 389 'fadd' 'out_15' <Predicate = true> <Delay = 6.43> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 3> <II = 1> <Delay = 6.43> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 390 [1/1] (7.30ns)   --->   "%write_ln135 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem0_addr, i32 %select_ln135_9, i4 15" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 390 'write' 'write_ln135' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_17 : Operation 391 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln135_10 = select i1 %and_ln142_10, i32 %bitcast_ln142_10, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 391 'select' 'select_ln135_10' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 18 <SV = 17> <Delay = 7.30>
ST_18 : Operation 392 [1/1] (0.00ns)   --->   "%bitcast_ln142_11 = bitcast i32 %out_14" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 392 'bitcast' 'bitcast_ln142_11' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 393 [1/1] (0.00ns)   --->   "%tmp_47 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln142_11, i32 23, i32 30" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 393 'partselect' 'tmp_47' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 394 [1/1] (0.00ns)   --->   "%trunc_ln142_11 = trunc i32 %bitcast_ln142_11" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 394 'trunc' 'trunc_ln142_11' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 395 [1/1] (0.76ns)   --->   "%icmp_ln142_22 = icmp_ne  i8 %tmp_47, i8 255" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 395 'icmp' 'icmp_ln142_22' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 396 [1/1] (0.92ns)   --->   "%icmp_ln142_23 = icmp_eq  i23 %trunc_ln142_11, i23 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 396 'icmp' 'icmp_ln142_23' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 397 [1/1] (0.00ns) (grouped into LUT with out node select_ln135_11)   --->   "%or_ln142_11 = or i1 %icmp_ln142_23, i1 %icmp_ln142_22" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 397 'or' 'or_ln142_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 398 [1/2] (2.78ns)   --->   "%tmp_48 = fcmp_ogt  i32 %out_14, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 398 'fcmp' 'tmp_48' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 399 [1/1] (0.00ns) (grouped into LUT with out node select_ln135_11)   --->   "%and_ln142_11 = and i1 %or_ln142_11, i1 %tmp_48" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 399 'and' 'and_ln142_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 400 [2/2] (2.78ns)   --->   "%tmp_50 = fcmp_ogt  i32 %out_15, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 400 'fcmp' 'tmp_50' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 401 [1/1] (7.30ns)   --->   "%write_ln135 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem0_addr, i32 %select_ln135_10, i4 15" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 401 'write' 'write_ln135' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_18 : Operation 402 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln135_11 = select i1 %and_ln142_11, i32 %bitcast_ln142_11, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 402 'select' 'select_ln135_11' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 19 <SV = 18> <Delay = 7.30>
ST_19 : Operation 403 [1/1] (0.00ns)   --->   "%bitcast_ln142_12 = bitcast i32 %out_15" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 403 'bitcast' 'bitcast_ln142_12' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 404 [1/1] (0.00ns)   --->   "%tmp_49 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln142_12, i32 23, i32 30" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 404 'partselect' 'tmp_49' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 405 [1/1] (0.00ns)   --->   "%trunc_ln142_12 = trunc i32 %bitcast_ln142_12" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 405 'trunc' 'trunc_ln142_12' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 406 [1/1] (0.76ns)   --->   "%icmp_ln142_24 = icmp_ne  i8 %tmp_49, i8 255" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 406 'icmp' 'icmp_ln142_24' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 407 [1/1] (0.92ns)   --->   "%icmp_ln142_25 = icmp_eq  i23 %trunc_ln142_12, i23 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 407 'icmp' 'icmp_ln142_25' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 408 [1/1] (0.00ns) (grouped into LUT with out node select_ln135_12)   --->   "%or_ln142_12 = or i1 %icmp_ln142_25, i1 %icmp_ln142_24" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 408 'or' 'or_ln142_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 409 [1/2] (2.78ns)   --->   "%tmp_50 = fcmp_ogt  i32 %out_15, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 409 'fcmp' 'tmp_50' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 410 [1/1] (0.00ns) (grouped into LUT with out node select_ln135_12)   --->   "%and_ln142_12 = and i1 %or_ln142_12, i1 %tmp_50" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:142]   --->   Operation 410 'and' 'and_ln142_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 411 [1/1] (7.30ns)   --->   "%write_ln135 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem0_addr, i32 %select_ln135_11, i4 15" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 411 'write' 'write_ln135' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_19 : Operation 412 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln135_12 = select i1 %and_ln142_12, i32 %bitcast_ln142_12, i32 0" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 412 'select' 'select_ln135_12' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 20 <SV = 19> <Delay = 7.30>
ST_20 : Operation 413 [1/1] (0.00ns)   --->   "%specpipeline_ln136 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_1" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:136]   --->   Operation 413 'specpipeline' 'specpipeline_ln136' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 414 [1/1] (0.00ns)   --->   "%speclooptripcount_ln135 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 13, i64 13, i64 13" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 414 'speclooptripcount' 'speclooptripcount_ln135' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 415 [1/1] (0.00ns)   --->   "%specloopname_ln135 = specloopname void @_ssdm_op_SpecLoopName, void @empty_25" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 415 'specloopname' 'specloopname_ln135' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 416 [1/1] (7.30ns)   --->   "%write_ln135 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem0_addr, i32 %select_ln135_12, i4 15" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 416 'write' 'write_ln135' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 417 [1/1] (0.00ns)   --->   "%br_ln135 = br void %VITIS_LOOP_137_6" [AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135]   --->   Operation 417 'br' 'br_ln135' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.651ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln135', AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) of constant 0 on local variable 'i', AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135 [347]  (0.427 ns)
	'load' operation 4 bit ('i', AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) on local variable 'i', AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135 [350]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln135', AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) [352]  (0.797 ns)
	'store' operation 0 bit ('store_ln135', AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) of variable 'add_ln135', AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135 on local variable 'i', AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135 [516]  (0.427 ns)

 <State 2>: 6.437ns
The critical path consists of the following:
	'fadd' operation 32 bit ('out', AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139) [361]  (6.437 ns)

 <State 3>: 6.437ns
The critical path consists of the following:
	'fadd' operation 32 bit ('out', AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139) [361]  (6.437 ns)

 <State 4>: 6.437ns
The critical path consists of the following:
	'fadd' operation 32 bit ('out', AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139) [361]  (6.437 ns)

 <State 5>: 6.437ns
The critical path consists of the following:
	'fadd' operation 32 bit ('out', AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139) [361]  (6.437 ns)

 <State 6>: 6.437ns
The critical path consists of the following:
	'fadd' operation 32 bit ('out', AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139) [371]  (6.437 ns)

 <State 7>: 6.437ns
The critical path consists of the following:
	'fadd' operation 32 bit ('out', AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:139) [381]  (6.437 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus write operation ('write_ln135', AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) on port 'gmem0' (AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) [491]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus write operation ('write_ln135', AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) on port 'gmem0' (AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) [493]  (7.300 ns)

 <State 10>: 7.300ns
The critical path consists of the following:
	bus write operation ('write_ln135', AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) on port 'gmem0' (AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) [495]  (7.300 ns)

 <State 11>: 7.300ns
The critical path consists of the following:
	bus write operation ('write_ln135', AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) on port 'gmem0' (AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) [497]  (7.300 ns)

 <State 12>: 7.300ns
The critical path consists of the following:
	bus write operation ('write_ln135', AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) on port 'gmem0' (AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) [499]  (7.300 ns)

 <State 13>: 7.300ns
The critical path consists of the following:
	bus write operation ('write_ln135', AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) on port 'gmem0' (AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) [501]  (7.300 ns)

 <State 14>: 7.300ns
The critical path consists of the following:
	bus write operation ('write_ln135', AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) on port 'gmem0' (AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) [503]  (7.300 ns)

 <State 15>: 7.300ns
The critical path consists of the following:
	bus write operation ('write_ln135', AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) on port 'gmem0' (AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) [505]  (7.300 ns)

 <State 16>: 7.300ns
The critical path consists of the following:
	bus write operation ('write_ln135', AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) on port 'gmem0' (AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) [507]  (7.300 ns)

 <State 17>: 7.300ns
The critical path consists of the following:
	bus write operation ('write_ln135', AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) on port 'gmem0' (AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) [509]  (7.300 ns)

 <State 18>: 7.300ns
The critical path consists of the following:
	bus write operation ('write_ln135', AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) on port 'gmem0' (AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) [511]  (7.300 ns)

 <State 19>: 7.300ns
The critical path consists of the following:
	bus write operation ('write_ln135', AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) on port 'gmem0' (AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) [513]  (7.300 ns)

 <State 20>: 7.300ns
The critical path consists of the following:
	bus write operation ('write_ln135', AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) on port 'gmem0' (AlexNet-FPGA-implementation/Conv5/src/conv5.cpp:135) [515]  (7.300 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
