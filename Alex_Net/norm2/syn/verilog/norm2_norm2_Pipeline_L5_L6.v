// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module norm2_norm2_Pipeline_L5_L6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem0_0_AWVALID,
        m_axi_gmem0_0_AWREADY,
        m_axi_gmem0_0_AWADDR,
        m_axi_gmem0_0_AWID,
        m_axi_gmem0_0_AWLEN,
        m_axi_gmem0_0_AWSIZE,
        m_axi_gmem0_0_AWBURST,
        m_axi_gmem0_0_AWLOCK,
        m_axi_gmem0_0_AWCACHE,
        m_axi_gmem0_0_AWPROT,
        m_axi_gmem0_0_AWQOS,
        m_axi_gmem0_0_AWREGION,
        m_axi_gmem0_0_AWUSER,
        m_axi_gmem0_0_WVALID,
        m_axi_gmem0_0_WREADY,
        m_axi_gmem0_0_WDATA,
        m_axi_gmem0_0_WSTRB,
        m_axi_gmem0_0_WLAST,
        m_axi_gmem0_0_WID,
        m_axi_gmem0_0_WUSER,
        m_axi_gmem0_0_ARVALID,
        m_axi_gmem0_0_ARREADY,
        m_axi_gmem0_0_ARADDR,
        m_axi_gmem0_0_ARID,
        m_axi_gmem0_0_ARLEN,
        m_axi_gmem0_0_ARSIZE,
        m_axi_gmem0_0_ARBURST,
        m_axi_gmem0_0_ARLOCK,
        m_axi_gmem0_0_ARCACHE,
        m_axi_gmem0_0_ARPROT,
        m_axi_gmem0_0_ARQOS,
        m_axi_gmem0_0_ARREGION,
        m_axi_gmem0_0_ARUSER,
        m_axi_gmem0_0_RVALID,
        m_axi_gmem0_0_RREADY,
        m_axi_gmem0_0_RDATA,
        m_axi_gmem0_0_RLAST,
        m_axi_gmem0_0_RID,
        m_axi_gmem0_0_RFIFONUM,
        m_axi_gmem0_0_RUSER,
        m_axi_gmem0_0_RRESP,
        m_axi_gmem0_0_BVALID,
        m_axi_gmem0_0_BREADY,
        m_axi_gmem0_0_BRESP,
        m_axi_gmem0_0_BID,
        m_axi_gmem0_0_BUSER,
        sext_ln74,
        inp_image_address0,
        inp_image_ce0,
        inp_image_q0,
        inp_image_1_address0,
        inp_image_1_ce0,
        inp_image_1_q0,
        inp_image_2_address0,
        inp_image_2_ce0,
        inp_image_2_q0,
        inp_image_3_address0,
        inp_image_3_ce0,
        inp_image_3_q0,
        grp_fu_2033_p_din0,
        grp_fu_2033_p_din1,
        grp_fu_2033_p_opcode,
        grp_fu_2033_p_dout0,
        grp_fu_2033_p_ce,
        grp_fu_2037_p_din0,
        grp_fu_2037_p_din1,
        grp_fu_2037_p_opcode,
        grp_fu_2037_p_dout0,
        grp_fu_2037_p_ce,
        grp_fu_2041_p_din0,
        grp_fu_2041_p_din1,
        grp_fu_2041_p_opcode,
        grp_fu_2041_p_dout0,
        grp_fu_2041_p_ce,
        grp_fu_2111_p_din0,
        grp_fu_2111_p_din1,
        grp_fu_2111_p_opcode,
        grp_fu_2111_p_dout0,
        grp_fu_2111_p_ce,
        grp_fu_2045_p_din0,
        grp_fu_2045_p_din1,
        grp_fu_2045_p_dout0,
        grp_fu_2045_p_ce,
        grp_fu_2049_p_din0,
        grp_fu_2049_p_dout0,
        grp_fu_2049_p_ce,
        grp_fu_2052_p_din0,
        grp_fu_2052_p_dout0,
        grp_fu_2052_p_ce,
        grp_fu_2055_p_din0,
        grp_fu_2055_p_din1,
        grp_fu_2055_p_opcode,
        grp_fu_2055_p_dout0,
        grp_fu_2055_p_ce,
        grp_fu_2059_p_din0,
        grp_fu_2059_p_din1,
        grp_fu_2059_p_dout0,
        grp_fu_2059_p_ce,
        grp_pow_generic_float_s_fu_2063_p_din1,
        grp_pow_generic_float_s_fu_2063_p_din2,
        grp_pow_generic_float_s_fu_2063_p_dout0,
        grp_pow_generic_float_s_fu_2063_p_ce,
        grp_pow_generic_float_s_fu_2075_p_din1,
        grp_pow_generic_float_s_fu_2075_p_din2,
        grp_pow_generic_float_s_fu_2075_p_dout0,
        grp_pow_generic_float_s_fu_2075_p_ce,
        grp_pow_generic_float_s_fu_2087_p_din1,
        grp_pow_generic_float_s_fu_2087_p_din2,
        grp_pow_generic_float_s_fu_2087_p_dout0,
        grp_pow_generic_float_s_fu_2087_p_ce,
        grp_pow_generic_float_s_fu_2099_p_din1,
        grp_pow_generic_float_s_fu_2099_p_din2,
        grp_pow_generic_float_s_fu_2099_p_dout0,
        grp_pow_generic_float_s_fu_2099_p_ce,
        grp_pow_generic_float_s_fu_2115_p_din1,
        grp_pow_generic_float_s_fu_2115_p_din2,
        grp_pow_generic_float_s_fu_2115_p_dout0,
        grp_pow_generic_float_s_fu_2115_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem0_0_AWVALID;
input   m_axi_gmem0_0_AWREADY;
output  [63:0] m_axi_gmem0_0_AWADDR;
output  [0:0] m_axi_gmem0_0_AWID;
output  [31:0] m_axi_gmem0_0_AWLEN;
output  [2:0] m_axi_gmem0_0_AWSIZE;
output  [1:0] m_axi_gmem0_0_AWBURST;
output  [1:0] m_axi_gmem0_0_AWLOCK;
output  [3:0] m_axi_gmem0_0_AWCACHE;
output  [2:0] m_axi_gmem0_0_AWPROT;
output  [3:0] m_axi_gmem0_0_AWQOS;
output  [3:0] m_axi_gmem0_0_AWREGION;
output  [0:0] m_axi_gmem0_0_AWUSER;
output   m_axi_gmem0_0_WVALID;
input   m_axi_gmem0_0_WREADY;
output  [31:0] m_axi_gmem0_0_WDATA;
output  [3:0] m_axi_gmem0_0_WSTRB;
output   m_axi_gmem0_0_WLAST;
output  [0:0] m_axi_gmem0_0_WID;
output  [0:0] m_axi_gmem0_0_WUSER;
output   m_axi_gmem0_0_ARVALID;
input   m_axi_gmem0_0_ARREADY;
output  [63:0] m_axi_gmem0_0_ARADDR;
output  [0:0] m_axi_gmem0_0_ARID;
output  [31:0] m_axi_gmem0_0_ARLEN;
output  [2:0] m_axi_gmem0_0_ARSIZE;
output  [1:0] m_axi_gmem0_0_ARBURST;
output  [1:0] m_axi_gmem0_0_ARLOCK;
output  [3:0] m_axi_gmem0_0_ARCACHE;
output  [2:0] m_axi_gmem0_0_ARPROT;
output  [3:0] m_axi_gmem0_0_ARQOS;
output  [3:0] m_axi_gmem0_0_ARREGION;
output  [0:0] m_axi_gmem0_0_ARUSER;
input   m_axi_gmem0_0_RVALID;
output   m_axi_gmem0_0_RREADY;
input  [31:0] m_axi_gmem0_0_RDATA;
input   m_axi_gmem0_0_RLAST;
input  [0:0] m_axi_gmem0_0_RID;
input  [8:0] m_axi_gmem0_0_RFIFONUM;
input  [0:0] m_axi_gmem0_0_RUSER;
input  [1:0] m_axi_gmem0_0_RRESP;
input   m_axi_gmem0_0_BVALID;
output   m_axi_gmem0_0_BREADY;
input  [1:0] m_axi_gmem0_0_BRESP;
input  [0:0] m_axi_gmem0_0_BID;
input  [0:0] m_axi_gmem0_0_BUSER;
input  [61:0] sext_ln74;
output  [7:0] inp_image_address0;
output   inp_image_ce0;
input  [31:0] inp_image_q0;
output  [7:0] inp_image_1_address0;
output   inp_image_1_ce0;
input  [31:0] inp_image_1_q0;
output  [7:0] inp_image_2_address0;
output   inp_image_2_ce0;
input  [31:0] inp_image_2_q0;
output  [7:0] inp_image_3_address0;
output   inp_image_3_ce0;
input  [31:0] inp_image_3_q0;
output  [31:0] grp_fu_2033_p_din0;
output  [31:0] grp_fu_2033_p_din1;
output  [1:0] grp_fu_2033_p_opcode;
input  [31:0] grp_fu_2033_p_dout0;
output   grp_fu_2033_p_ce;
output  [31:0] grp_fu_2037_p_din0;
output  [31:0] grp_fu_2037_p_din1;
output  [1:0] grp_fu_2037_p_opcode;
input  [31:0] grp_fu_2037_p_dout0;
output   grp_fu_2037_p_ce;
output  [31:0] grp_fu_2041_p_din0;
output  [31:0] grp_fu_2041_p_din1;
output  [1:0] grp_fu_2041_p_opcode;
input  [31:0] grp_fu_2041_p_dout0;
output   grp_fu_2041_p_ce;
output  [31:0] grp_fu_2111_p_din0;
output  [31:0] grp_fu_2111_p_din1;
output  [1:0] grp_fu_2111_p_opcode;
input  [31:0] grp_fu_2111_p_dout0;
output   grp_fu_2111_p_ce;
output  [31:0] grp_fu_2045_p_din0;
output  [31:0] grp_fu_2045_p_din1;
input  [31:0] grp_fu_2045_p_dout0;
output   grp_fu_2045_p_ce;
output  [63:0] grp_fu_2049_p_din0;
input  [31:0] grp_fu_2049_p_dout0;
output   grp_fu_2049_p_ce;
output  [31:0] grp_fu_2052_p_din0;
input  [63:0] grp_fu_2052_p_dout0;
output   grp_fu_2052_p_ce;
output  [63:0] grp_fu_2055_p_din0;
output  [63:0] grp_fu_2055_p_din1;
output  [1:0] grp_fu_2055_p_opcode;
input  [63:0] grp_fu_2055_p_dout0;
output   grp_fu_2055_p_ce;
output  [63:0] grp_fu_2059_p_din0;
output  [63:0] grp_fu_2059_p_din1;
input  [63:0] grp_fu_2059_p_dout0;
output   grp_fu_2059_p_ce;
output  [31:0] grp_pow_generic_float_s_fu_2063_p_din1;
output  [31:0] grp_pow_generic_float_s_fu_2063_p_din2;
input  [31:0] grp_pow_generic_float_s_fu_2063_p_dout0;
output   grp_pow_generic_float_s_fu_2063_p_ce;
output  [31:0] grp_pow_generic_float_s_fu_2075_p_din1;
output  [31:0] grp_pow_generic_float_s_fu_2075_p_din2;
input  [31:0] grp_pow_generic_float_s_fu_2075_p_dout0;
output   grp_pow_generic_float_s_fu_2075_p_ce;
output  [31:0] grp_pow_generic_float_s_fu_2087_p_din1;
output  [31:0] grp_pow_generic_float_s_fu_2087_p_din2;
input  [31:0] grp_pow_generic_float_s_fu_2087_p_dout0;
output   grp_pow_generic_float_s_fu_2087_p_ce;
output  [31:0] grp_pow_generic_float_s_fu_2099_p_din1;
output  [31:0] grp_pow_generic_float_s_fu_2099_p_din2;
input  [31:0] grp_pow_generic_float_s_fu_2099_p_dout0;
output   grp_pow_generic_float_s_fu_2099_p_ce;
output  [31:0] grp_pow_generic_float_s_fu_2115_p_din1;
output  [31:0] grp_pow_generic_float_s_fu_2115_p_din2;
input  [31:0] grp_pow_generic_float_s_fu_2115_p_dout0;
output   grp_pow_generic_float_s_fu_2115_p_ce;

reg ap_idle;
reg m_axi_gmem0_0_WVALID;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_enable_reg_pp0_iter57;
reg    ap_enable_reg_pp0_iter58;
reg    ap_enable_reg_pp0_iter59;
reg    ap_enable_reg_pp0_iter60;
reg    ap_enable_reg_pp0_iter61;
reg    ap_enable_reg_pp0_iter62;
reg    ap_enable_reg_pp0_iter63;
reg    ap_enable_reg_pp0_iter64;
reg    ap_enable_reg_pp0_iter65;
reg    ap_enable_reg_pp0_iter66;
reg    ap_enable_reg_pp0_iter67;
reg    ap_enable_reg_pp0_iter68;
reg    ap_idle_pp0;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln74_fu_337_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem0_blk_n_W;
wire    ap_block_pp0_stage0_grp1;
reg    ap_block_pp0_stage0_11001_grp1;
reg    ap_block_pp0_stage0_11001;
wire   [3:0] select_ln74_fu_367_p3;
reg   [3:0] select_ln74_reg_464;
reg   [3:0] select_ln74_reg_464_pp0_iter1_reg;
wire   [63:0] zext_ln82_2_fu_411_p1;
reg   [63:0] zext_ln82_2_reg_479;
reg   [63:0] zext_ln82_2_reg_479_pp0_iter4_reg;
reg   [63:0] zext_ln82_2_reg_479_pp0_iter5_reg;
reg   [63:0] zext_ln82_2_reg_479_pp0_iter6_reg;
reg   [63:0] zext_ln82_2_reg_479_pp0_iter7_reg;
reg   [63:0] zext_ln82_2_reg_479_pp0_iter8_reg;
reg   [63:0] zext_ln82_2_reg_479_pp0_iter9_reg;
reg   [63:0] zext_ln82_2_reg_479_pp0_iter10_reg;
reg   [63:0] zext_ln82_2_reg_479_pp0_iter11_reg;
reg   [63:0] zext_ln82_2_reg_479_pp0_iter12_reg;
reg   [63:0] zext_ln82_2_reg_479_pp0_iter13_reg;
reg   [63:0] zext_ln82_2_reg_479_pp0_iter14_reg;
reg   [31:0] inp_image_1_load_reg_501;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter9_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter10_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter11_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter12_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter13_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter14_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter15_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter16_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter17_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter18_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter19_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter20_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter21_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter22_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter23_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter24_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter25_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter26_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter27_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter28_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter29_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter30_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter31_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter32_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter33_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter34_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter35_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter36_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter37_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter38_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter39_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter40_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter41_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter42_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter43_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter44_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter45_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter46_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter47_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter48_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter49_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter50_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter51_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter52_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter53_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter54_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter55_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter56_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter57_reg;
reg   [31:0] inp_image_1_load_reg_501_pp0_iter58_reg;
reg   [31:0] tmp_13_reg_522;
reg    ap_block_pp0_stage0_11001_ignoreCallOp140;
reg   [31:0] add2_reg_532;
reg   [31:0] tmp_14_reg_537;
reg    ap_block_pp0_stage0_11001_ignoreCallOp158_grp1;
reg   [31:0] add106_1_reg_542;
reg   [31:0] tmp_15_reg_547;
reg    ap_block_pp0_stage0_11001_ignoreCallOp171_grp1;
reg   [31:0] add106_2_reg_552;
reg   [31:0] tmp_16_reg_557;
reg    ap_block_pp0_stage0_11001_ignoreCallOp180_grp1;
reg   [31:0] add106_3_reg_562;
reg   [63:0] conv2_reg_567;
reg   [63:0] mul1_reg_572;
reg   [63:0] add3_reg_577;
reg   [31:0] tmp_17_reg_587;
reg    ap_block_pp0_stage0_11001_ignoreCallOp211_grp1;
reg   [31:0] div1_reg_592;
reg    grp_pow_generic_float_s_fu_168_ap_ce;
reg    ap_block_pp0_stage0_11001_ignoreCallOp108;
reg    grp_pow_generic_float_s_fu_190_ap_ce;
reg    ap_block_pp0_stage0_11001_ignoreCallOp116_grp1;
reg    grp_pow_generic_float_s_fu_212_ap_ce;
reg    ap_block_pp0_stage0_11001_ignoreCallOp128_grp1;
reg    grp_pow_generic_float_s_fu_234_ap_ce;
reg    ap_block_pp0_stage0_11001_ignoreCallOp144_grp1;
reg    grp_pow_generic_float_s_fu_256_ap_ce;
reg    ap_block_pp0_stage0_11001_ignoreCallOp199_grp1;
wire    ap_block_pp0_stage0_ignoreCallOp108;
wire    ap_block_pp0_stage0_ignoreCallOp116_grp1;
wire    ap_block_pp0_stage0_ignoreCallOp128_grp1;
wire    ap_block_pp0_stage0_ignoreCallOp144_grp1;
wire    ap_block_pp0_stage0_ignoreCallOp199_grp1;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage0_01001_grp1;
reg   [3:0] y_fu_90;
wire   [3:0] add_ln77_fu_387_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_y_load;
reg   [3:0] x_fu_94;
wire   [3:0] select_ln74_1_fu_375_p3;
reg   [3:0] ap_sig_allocacmp_x_load;
reg   [7:0] indvar_flatten26_fu_98;
wire   [7:0] add_ln74_fu_343_p2;
reg   [7:0] ap_sig_allocacmp_indvar_flatten26_load;
reg    inp_image_ce0_local;
reg    inp_image_1_ce0_local;
reg    inp_image_2_ce0_local;
reg    inp_image_3_ce0_local;
wire   [0:0] icmp_ln77_fu_361_p2;
wire   [3:0] add_ln74_1_fu_355_p2;
wire   [7:0] grp_fu_425_p3;
wire   [3:0] grp_fu_425_p0;
wire   [3:0] grp_fu_425_p1;
wire   [3:0] grp_fu_425_p2;
reg    grp_fu_277_ce;
reg    grp_fu_282_ce;
reg    grp_fu_286_ce;
reg    grp_fu_290_ce;
reg    grp_fu_294_ce;
reg    grp_fu_298_ce;
reg    grp_fu_302_ce;
reg    grp_fu_305_ce;
reg    grp_fu_310_ce;
reg    grp_fu_425_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg    ap_loop_exit_ready_pp0_iter43_reg;
reg    ap_loop_exit_ready_pp0_iter44_reg;
reg    ap_loop_exit_ready_pp0_iter45_reg;
reg    ap_loop_exit_ready_pp0_iter46_reg;
reg    ap_loop_exit_ready_pp0_iter47_reg;
reg    ap_loop_exit_ready_pp0_iter48_reg;
reg    ap_loop_exit_ready_pp0_iter49_reg;
reg    ap_loop_exit_ready_pp0_iter50_reg;
reg    ap_loop_exit_ready_pp0_iter51_reg;
reg    ap_loop_exit_ready_pp0_iter52_reg;
reg    ap_loop_exit_ready_pp0_iter53_reg;
reg    ap_loop_exit_ready_pp0_iter54_reg;
reg    ap_loop_exit_ready_pp0_iter55_reg;
reg    ap_loop_exit_ready_pp0_iter56_reg;
reg    ap_loop_exit_ready_pp0_iter57_reg;
reg    ap_loop_exit_ready_pp0_iter58_reg;
reg    ap_loop_exit_ready_pp0_iter59_reg;
reg    ap_loop_exit_ready_pp0_iter60_reg;
reg    ap_loop_exit_ready_pp0_iter61_reg;
reg    ap_loop_exit_ready_pp0_iter62_reg;
reg    ap_loop_exit_ready_pp0_iter63_reg;
reg    ap_loop_exit_ready_pp0_iter64_reg;
reg    ap_loop_exit_ready_pp0_iter65_reg;
reg    ap_loop_exit_ready_pp0_iter66_reg;
reg    ap_loop_exit_ready_pp0_iter67_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_block_pp0_stage0_00001_grp1;
wire   [7:0] grp_fu_425_p00;
wire   [7:0] grp_fu_425_p20;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter57 = 1'b0;
#0 ap_enable_reg_pp0_iter58 = 1'b0;
#0 ap_enable_reg_pp0_iter59 = 1'b0;
#0 ap_enable_reg_pp0_iter60 = 1'b0;
#0 ap_enable_reg_pp0_iter61 = 1'b0;
#0 ap_enable_reg_pp0_iter62 = 1'b0;
#0 ap_enable_reg_pp0_iter63 = 1'b0;
#0 ap_enable_reg_pp0_iter64 = 1'b0;
#0 ap_enable_reg_pp0_iter65 = 1'b0;
#0 ap_enable_reg_pp0_iter66 = 1'b0;
#0 ap_enable_reg_pp0_iter67 = 1'b0;
#0 ap_enable_reg_pp0_iter68 = 1'b0;
#0 y_fu_90 = 4'd0;
#0 x_fu_94 = 4'd0;
#0 indvar_flatten26_fu_98 = 8'd0;
#0 ap_done_reg = 1'b0;
end

norm2_mac_muladd_4ns_4ns_4ns_8_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 4 ),
    .din2_WIDTH( 4 ),
    .dout_WIDTH( 8 ))
mac_muladd_4ns_4ns_4ns_8_4_1_U320(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_425_p0),
    .din1(grp_fu_425_p1),
    .din2(grp_fu_425_p2),
    .ce(grp_fu_425_ce),
    .dout(grp_fu_425_p3)
);

norm2_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter67_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter58 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter59 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter60 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter60 <= ap_enable_reg_pp0_iter59;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter61 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter61 <= ap_enable_reg_pp0_iter60;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter62 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter62 <= ap_enable_reg_pp0_iter61;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter63 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter63 <= ap_enable_reg_pp0_iter62;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter64 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter64 <= ap_enable_reg_pp0_iter63;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter65 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter65 <= ap_enable_reg_pp0_iter64;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter66 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter66 <= ap_enable_reg_pp0_iter65;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter67 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter67 <= ap_enable_reg_pp0_iter66;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter68 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter68 <= ap_enable_reg_pp0_iter67;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln74_fu_337_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten26_fu_98 <= add_ln74_fu_343_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten26_fu_98 <= 8'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln74_fu_337_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            x_fu_94 <= select_ln74_1_fu_375_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_94 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln74_fu_337_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            y_fu_90 <= add_ln77_fu_387_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            y_fu_90 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        add106_1_reg_542 <= grp_fu_2037_p_dout0;
        add106_2_reg_552 <= grp_fu_2041_p_dout0;
        add106_3_reg_562 <= grp_fu_2111_p_dout0;
        add2_reg_532 <= grp_fu_2033_p_dout0;
        add3_reg_577 <= grp_fu_2055_p_dout0;
        conv2_reg_567 <= grp_fu_2052_p_dout0;
        div1_reg_592 <= grp_fu_2045_p_dout0;
        inp_image_1_load_reg_501 <= inp_image_1_q0;
        inp_image_1_load_reg_501_pp0_iter10_reg <= inp_image_1_load_reg_501_pp0_iter9_reg;
        inp_image_1_load_reg_501_pp0_iter11_reg <= inp_image_1_load_reg_501_pp0_iter10_reg;
        inp_image_1_load_reg_501_pp0_iter12_reg <= inp_image_1_load_reg_501_pp0_iter11_reg;
        inp_image_1_load_reg_501_pp0_iter13_reg <= inp_image_1_load_reg_501_pp0_iter12_reg;
        inp_image_1_load_reg_501_pp0_iter14_reg <= inp_image_1_load_reg_501_pp0_iter13_reg;
        inp_image_1_load_reg_501_pp0_iter15_reg <= inp_image_1_load_reg_501_pp0_iter14_reg;
        inp_image_1_load_reg_501_pp0_iter16_reg <= inp_image_1_load_reg_501_pp0_iter15_reg;
        inp_image_1_load_reg_501_pp0_iter17_reg <= inp_image_1_load_reg_501_pp0_iter16_reg;
        inp_image_1_load_reg_501_pp0_iter18_reg <= inp_image_1_load_reg_501_pp0_iter17_reg;
        inp_image_1_load_reg_501_pp0_iter19_reg <= inp_image_1_load_reg_501_pp0_iter18_reg;
        inp_image_1_load_reg_501_pp0_iter20_reg <= inp_image_1_load_reg_501_pp0_iter19_reg;
        inp_image_1_load_reg_501_pp0_iter21_reg <= inp_image_1_load_reg_501_pp0_iter20_reg;
        inp_image_1_load_reg_501_pp0_iter22_reg <= inp_image_1_load_reg_501_pp0_iter21_reg;
        inp_image_1_load_reg_501_pp0_iter23_reg <= inp_image_1_load_reg_501_pp0_iter22_reg;
        inp_image_1_load_reg_501_pp0_iter24_reg <= inp_image_1_load_reg_501_pp0_iter23_reg;
        inp_image_1_load_reg_501_pp0_iter25_reg <= inp_image_1_load_reg_501_pp0_iter24_reg;
        inp_image_1_load_reg_501_pp0_iter26_reg <= inp_image_1_load_reg_501_pp0_iter25_reg;
        inp_image_1_load_reg_501_pp0_iter27_reg <= inp_image_1_load_reg_501_pp0_iter26_reg;
        inp_image_1_load_reg_501_pp0_iter28_reg <= inp_image_1_load_reg_501_pp0_iter27_reg;
        inp_image_1_load_reg_501_pp0_iter29_reg <= inp_image_1_load_reg_501_pp0_iter28_reg;
        inp_image_1_load_reg_501_pp0_iter30_reg <= inp_image_1_load_reg_501_pp0_iter29_reg;
        inp_image_1_load_reg_501_pp0_iter31_reg <= inp_image_1_load_reg_501_pp0_iter30_reg;
        inp_image_1_load_reg_501_pp0_iter32_reg <= inp_image_1_load_reg_501_pp0_iter31_reg;
        inp_image_1_load_reg_501_pp0_iter33_reg <= inp_image_1_load_reg_501_pp0_iter32_reg;
        inp_image_1_load_reg_501_pp0_iter34_reg <= inp_image_1_load_reg_501_pp0_iter33_reg;
        inp_image_1_load_reg_501_pp0_iter35_reg <= inp_image_1_load_reg_501_pp0_iter34_reg;
        inp_image_1_load_reg_501_pp0_iter36_reg <= inp_image_1_load_reg_501_pp0_iter35_reg;
        inp_image_1_load_reg_501_pp0_iter37_reg <= inp_image_1_load_reg_501_pp0_iter36_reg;
        inp_image_1_load_reg_501_pp0_iter38_reg <= inp_image_1_load_reg_501_pp0_iter37_reg;
        inp_image_1_load_reg_501_pp0_iter39_reg <= inp_image_1_load_reg_501_pp0_iter38_reg;
        inp_image_1_load_reg_501_pp0_iter40_reg <= inp_image_1_load_reg_501_pp0_iter39_reg;
        inp_image_1_load_reg_501_pp0_iter41_reg <= inp_image_1_load_reg_501_pp0_iter40_reg;
        inp_image_1_load_reg_501_pp0_iter42_reg <= inp_image_1_load_reg_501_pp0_iter41_reg;
        inp_image_1_load_reg_501_pp0_iter43_reg <= inp_image_1_load_reg_501_pp0_iter42_reg;
        inp_image_1_load_reg_501_pp0_iter44_reg <= inp_image_1_load_reg_501_pp0_iter43_reg;
        inp_image_1_load_reg_501_pp0_iter45_reg <= inp_image_1_load_reg_501_pp0_iter44_reg;
        inp_image_1_load_reg_501_pp0_iter46_reg <= inp_image_1_load_reg_501_pp0_iter45_reg;
        inp_image_1_load_reg_501_pp0_iter47_reg <= inp_image_1_load_reg_501_pp0_iter46_reg;
        inp_image_1_load_reg_501_pp0_iter48_reg <= inp_image_1_load_reg_501_pp0_iter47_reg;
        inp_image_1_load_reg_501_pp0_iter49_reg <= inp_image_1_load_reg_501_pp0_iter48_reg;
        inp_image_1_load_reg_501_pp0_iter50_reg <= inp_image_1_load_reg_501_pp0_iter49_reg;
        inp_image_1_load_reg_501_pp0_iter51_reg <= inp_image_1_load_reg_501_pp0_iter50_reg;
        inp_image_1_load_reg_501_pp0_iter52_reg <= inp_image_1_load_reg_501_pp0_iter51_reg;
        inp_image_1_load_reg_501_pp0_iter53_reg <= inp_image_1_load_reg_501_pp0_iter52_reg;
        inp_image_1_load_reg_501_pp0_iter54_reg <= inp_image_1_load_reg_501_pp0_iter53_reg;
        inp_image_1_load_reg_501_pp0_iter55_reg <= inp_image_1_load_reg_501_pp0_iter54_reg;
        inp_image_1_load_reg_501_pp0_iter56_reg <= inp_image_1_load_reg_501_pp0_iter55_reg;
        inp_image_1_load_reg_501_pp0_iter57_reg <= inp_image_1_load_reg_501_pp0_iter56_reg;
        inp_image_1_load_reg_501_pp0_iter58_reg <= inp_image_1_load_reg_501_pp0_iter57_reg;
        inp_image_1_load_reg_501_pp0_iter9_reg <= inp_image_1_load_reg_501;
        mul1_reg_572 <= grp_fu_2059_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
        ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
        ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
        ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
        ap_loop_exit_ready_pp0_iter46_reg <= ap_loop_exit_ready_pp0_iter45_reg;
        ap_loop_exit_ready_pp0_iter47_reg <= ap_loop_exit_ready_pp0_iter46_reg;
        ap_loop_exit_ready_pp0_iter48_reg <= ap_loop_exit_ready_pp0_iter47_reg;
        ap_loop_exit_ready_pp0_iter49_reg <= ap_loop_exit_ready_pp0_iter48_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter50_reg <= ap_loop_exit_ready_pp0_iter49_reg;
        ap_loop_exit_ready_pp0_iter51_reg <= ap_loop_exit_ready_pp0_iter50_reg;
        ap_loop_exit_ready_pp0_iter52_reg <= ap_loop_exit_ready_pp0_iter51_reg;
        ap_loop_exit_ready_pp0_iter53_reg <= ap_loop_exit_ready_pp0_iter52_reg;
        ap_loop_exit_ready_pp0_iter54_reg <= ap_loop_exit_ready_pp0_iter53_reg;
        ap_loop_exit_ready_pp0_iter55_reg <= ap_loop_exit_ready_pp0_iter54_reg;
        ap_loop_exit_ready_pp0_iter56_reg <= ap_loop_exit_ready_pp0_iter55_reg;
        ap_loop_exit_ready_pp0_iter57_reg <= ap_loop_exit_ready_pp0_iter56_reg;
        ap_loop_exit_ready_pp0_iter58_reg <= ap_loop_exit_ready_pp0_iter57_reg;
        ap_loop_exit_ready_pp0_iter59_reg <= ap_loop_exit_ready_pp0_iter58_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter60_reg <= ap_loop_exit_ready_pp0_iter59_reg;
        ap_loop_exit_ready_pp0_iter61_reg <= ap_loop_exit_ready_pp0_iter60_reg;
        ap_loop_exit_ready_pp0_iter62_reg <= ap_loop_exit_ready_pp0_iter61_reg;
        ap_loop_exit_ready_pp0_iter63_reg <= ap_loop_exit_ready_pp0_iter62_reg;
        ap_loop_exit_ready_pp0_iter64_reg <= ap_loop_exit_ready_pp0_iter63_reg;
        ap_loop_exit_ready_pp0_iter65_reg <= ap_loop_exit_ready_pp0_iter64_reg;
        ap_loop_exit_ready_pp0_iter66_reg <= ap_loop_exit_ready_pp0_iter65_reg;
        ap_loop_exit_ready_pp0_iter67_reg <= ap_loop_exit_ready_pp0_iter66_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        zext_ln82_2_reg_479[7 : 0] <= zext_ln82_2_fu_411_p1[7 : 0];
        zext_ln82_2_reg_479_pp0_iter10_reg[7 : 0] <= zext_ln82_2_reg_479_pp0_iter9_reg[7 : 0];
        zext_ln82_2_reg_479_pp0_iter11_reg[7 : 0] <= zext_ln82_2_reg_479_pp0_iter10_reg[7 : 0];
        zext_ln82_2_reg_479_pp0_iter12_reg[7 : 0] <= zext_ln82_2_reg_479_pp0_iter11_reg[7 : 0];
        zext_ln82_2_reg_479_pp0_iter13_reg[7 : 0] <= zext_ln82_2_reg_479_pp0_iter12_reg[7 : 0];
        zext_ln82_2_reg_479_pp0_iter14_reg[7 : 0] <= zext_ln82_2_reg_479_pp0_iter13_reg[7 : 0];
        zext_ln82_2_reg_479_pp0_iter4_reg[7 : 0] <= zext_ln82_2_reg_479[7 : 0];
        zext_ln82_2_reg_479_pp0_iter5_reg[7 : 0] <= zext_ln82_2_reg_479_pp0_iter4_reg[7 : 0];
        zext_ln82_2_reg_479_pp0_iter6_reg[7 : 0] <= zext_ln82_2_reg_479_pp0_iter5_reg[7 : 0];
        zext_ln82_2_reg_479_pp0_iter7_reg[7 : 0] <= zext_ln82_2_reg_479_pp0_iter6_reg[7 : 0];
        zext_ln82_2_reg_479_pp0_iter8_reg[7 : 0] <= zext_ln82_2_reg_479_pp0_iter7_reg[7 : 0];
        zext_ln82_2_reg_479_pp0_iter9_reg[7 : 0] <= zext_ln82_2_reg_479_pp0_iter8_reg[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        select_ln74_reg_464 <= select_ln74_fu_367_p3;
        select_ln74_reg_464_pp0_iter1_reg <= select_ln74_reg_464;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp140)) begin
        tmp_13_reg_522 <= grp_pow_generic_float_s_fu_2063_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp158_grp1)) begin
        tmp_14_reg_537 <= grp_pow_generic_float_s_fu_2075_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp171_grp1)) begin
        tmp_15_reg_547 <= grp_pow_generic_float_s_fu_2087_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp180_grp1)) begin
        tmp_16_reg_557 <= grp_pow_generic_float_s_fu_2099_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp211_grp1)) begin
        tmp_17_reg_587 <= grp_pow_generic_float_s_fu_2115_p_dout0;
    end
end

always @ (*) begin
    if (((icmp_ln74_fu_337_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter67_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b0) & (ap_enable_reg_pp0_iter67 == 1'b0) 
    & (ap_enable_reg_pp0_iter66 == 1'b0) & (ap_enable_reg_pp0_iter65 == 1'b0) & (ap_enable_reg_pp0_iter64 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter63 == 1'b0) & (ap_enable_reg_pp0_iter62 == 1'b0) & (ap_enable_reg_pp0_iter61 == 1'b0) & (ap_enable_reg_pp0_iter60 == 1'b0) & (ap_enable_reg_pp0_iter59 == 1'b0) & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter57 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 
    == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvar_flatten26_load = 8'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten26_load = indvar_flatten26_fu_98;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_load = 4'd0;
    end else begin
        ap_sig_allocacmp_x_load = x_fu_94;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_y_load = 4'd0;
    end else begin
        ap_sig_allocacmp_y_load = y_fu_90;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter68 == 1'b1))) begin
        gmem0_blk_n_W = m_axi_gmem0_0_WREADY;
    end else begin
        gmem0_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        grp_fu_277_ce = 1'b1;
    end else begin
        grp_fu_277_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        grp_fu_282_ce = 1'b1;
    end else begin
        grp_fu_282_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        grp_fu_286_ce = 1'b1;
    end else begin
        grp_fu_286_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        grp_fu_290_ce = 1'b1;
    end else begin
        grp_fu_290_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        grp_fu_294_ce = 1'b1;
    end else begin
        grp_fu_294_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        grp_fu_298_ce = 1'b1;
    end else begin
        grp_fu_298_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        grp_fu_302_ce = 1'b1;
    end else begin
        grp_fu_302_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        grp_fu_305_ce = 1'b1;
    end else begin
        grp_fu_305_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_grp1)) begin
        grp_fu_310_ce = 1'b1;
    end else begin
        grp_fu_310_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_425_ce = 1'b1;
    end else begin
        grp_fu_425_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp108)) begin
        grp_pow_generic_float_s_fu_168_ap_ce = 1'b1;
    end else begin
        grp_pow_generic_float_s_fu_168_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp116_grp1)) begin
        grp_pow_generic_float_s_fu_190_ap_ce = 1'b1;
    end else begin
        grp_pow_generic_float_s_fu_190_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp128_grp1)) begin
        grp_pow_generic_float_s_fu_212_ap_ce = 1'b1;
    end else begin
        grp_pow_generic_float_s_fu_212_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp144_grp1)) begin
        grp_pow_generic_float_s_fu_234_ap_ce = 1'b1;
    end else begin
        grp_pow_generic_float_s_fu_234_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp199_grp1)) begin
        grp_pow_generic_float_s_fu_256_ap_ce = 1'b1;
    end else begin
        grp_pow_generic_float_s_fu_256_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        inp_image_1_ce0_local = 1'b1;
    end else begin
        inp_image_1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        inp_image_2_ce0_local = 1'b1;
    end else begin
        inp_image_2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001_grp1))) begin
        inp_image_3_ce0_local = 1'b1;
    end else begin
        inp_image_3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        inp_image_ce0_local = 1'b1;
    end else begin
        inp_image_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter68 == 1'b1))) begin
        m_axi_gmem0_0_WVALID = 1'b1;
    end else begin
        m_axi_gmem0_0_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln74_1_fu_355_p2 = (ap_sig_allocacmp_x_load + 4'd1);

assign add_ln74_fu_343_p2 = (ap_sig_allocacmp_indvar_flatten26_load + 8'd1);

assign add_ln77_fu_387_p2 = (select_ln74_fu_367_p3 + 4'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001_grp1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001_grp1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((m_axi_gmem0_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp1 = ((m_axi_gmem0_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp108 = ((m_axi_gmem0_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp116_grp1 = ((m_axi_gmem0_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp128_grp1 = ((m_axi_gmem0_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp140 = ((m_axi_gmem0_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp144_grp1 = ((m_axi_gmem0_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp158_grp1 = ((m_axi_gmem0_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp171_grp1 = ((m_axi_gmem0_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp180_grp1 = ((m_axi_gmem0_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp199_grp1 = ((m_axi_gmem0_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp211_grp1 = ((m_axi_gmem0_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b1));
end

assign ap_block_pp0_stage0_grp1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp108 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp116_grp1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp128_grp1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp144_grp1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp199_grp1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((m_axi_gmem0_0_WREADY == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b1));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign grp_fu_2033_p_ce = grp_fu_277_ce;

assign grp_fu_2033_p_din0 = tmp_13_reg_522;

assign grp_fu_2033_p_din1 = 32'd0;

assign grp_fu_2033_p_opcode = 2'd0;

assign grp_fu_2037_p_ce = grp_fu_282_ce;

assign grp_fu_2037_p_din0 = add2_reg_532;

assign grp_fu_2037_p_din1 = tmp_14_reg_537;

assign grp_fu_2037_p_opcode = 2'd0;

assign grp_fu_2041_p_ce = grp_fu_286_ce;

assign grp_fu_2041_p_din0 = add106_1_reg_542;

assign grp_fu_2041_p_din1 = tmp_15_reg_547;

assign grp_fu_2041_p_opcode = 2'd0;

assign grp_fu_2045_p_ce = grp_fu_294_ce;

assign grp_fu_2045_p_din0 = inp_image_1_load_reg_501_pp0_iter58_reg;

assign grp_fu_2045_p_din1 = tmp_17_reg_587;

assign grp_fu_2049_p_ce = grp_fu_298_ce;

assign grp_fu_2049_p_din0 = add3_reg_577;

assign grp_fu_2052_p_ce = grp_fu_302_ce;

assign grp_fu_2052_p_din0 = add106_3_reg_562;

assign grp_fu_2055_p_ce = grp_fu_305_ce;

assign grp_fu_2055_p_din0 = mul1_reg_572;

assign grp_fu_2055_p_din1 = 64'd4607182418800017408;

assign grp_fu_2055_p_opcode = 2'd0;

assign grp_fu_2059_p_ce = grp_fu_310_ce;

assign grp_fu_2059_p_din0 = conv2_reg_567;

assign grp_fu_2059_p_din1 = 64'd4536524183238306033;

assign grp_fu_2111_p_ce = grp_fu_290_ce;

assign grp_fu_2111_p_din0 = add106_2_reg_552;

assign grp_fu_2111_p_din1 = tmp_16_reg_557;

assign grp_fu_2111_p_opcode = 2'd0;

assign grp_fu_425_p0 = grp_fu_425_p00;

assign grp_fu_425_p00 = select_ln74_1_fu_375_p3;

assign grp_fu_425_p1 = 8'd13;

assign grp_fu_425_p2 = grp_fu_425_p20;

assign grp_fu_425_p20 = select_ln74_reg_464_pp0_iter1_reg;

assign grp_pow_generic_float_s_fu_2063_p_ce = grp_pow_generic_float_s_fu_168_ap_ce;

assign grp_pow_generic_float_s_fu_2063_p_din1 = inp_image_q0;

assign grp_pow_generic_float_s_fu_2063_p_din2 = 32'd1073741824;

assign grp_pow_generic_float_s_fu_2075_p_ce = grp_pow_generic_float_s_fu_190_ap_ce;

assign grp_pow_generic_float_s_fu_2075_p_din1 = inp_image_1_q0;

assign grp_pow_generic_float_s_fu_2075_p_din2 = 32'd1073741824;

assign grp_pow_generic_float_s_fu_2087_p_ce = grp_pow_generic_float_s_fu_212_ap_ce;

assign grp_pow_generic_float_s_fu_2087_p_din1 = inp_image_2_q0;

assign grp_pow_generic_float_s_fu_2087_p_din2 = 32'd1073741824;

assign grp_pow_generic_float_s_fu_2099_p_ce = grp_pow_generic_float_s_fu_234_ap_ce;

assign grp_pow_generic_float_s_fu_2099_p_din1 = inp_image_3_q0;

assign grp_pow_generic_float_s_fu_2099_p_din2 = 32'd1073741824;

assign grp_pow_generic_float_s_fu_2115_p_ce = grp_pow_generic_float_s_fu_256_ap_ce;

assign grp_pow_generic_float_s_fu_2115_p_din1 = grp_fu_2049_p_dout0;

assign grp_pow_generic_float_s_fu_2115_p_din2 = 32'd1061158912;

assign icmp_ln74_fu_337_p2 = ((ap_sig_allocacmp_indvar_flatten26_load == 8'd169) ? 1'b1 : 1'b0);

assign icmp_ln77_fu_361_p2 = ((ap_sig_allocacmp_y_load == 4'd13) ? 1'b1 : 1'b0);

assign inp_image_1_address0 = zext_ln82_2_reg_479_pp0_iter6_reg;

assign inp_image_1_ce0 = inp_image_1_ce0_local;

assign inp_image_2_address0 = zext_ln82_2_reg_479_pp0_iter10_reg;

assign inp_image_2_ce0 = inp_image_2_ce0_local;

assign inp_image_3_address0 = zext_ln82_2_reg_479_pp0_iter14_reg;

assign inp_image_3_ce0 = inp_image_3_ce0_local;

assign inp_image_address0 = zext_ln82_2_fu_411_p1;

assign inp_image_ce0 = inp_image_ce0_local;

assign m_axi_gmem0_0_ARADDR = 64'd0;

assign m_axi_gmem0_0_ARBURST = 2'd0;

assign m_axi_gmem0_0_ARCACHE = 4'd0;

assign m_axi_gmem0_0_ARID = 1'd0;

assign m_axi_gmem0_0_ARLEN = 32'd0;

assign m_axi_gmem0_0_ARLOCK = 2'd0;

assign m_axi_gmem0_0_ARPROT = 3'd0;

assign m_axi_gmem0_0_ARQOS = 4'd0;

assign m_axi_gmem0_0_ARREGION = 4'd0;

assign m_axi_gmem0_0_ARSIZE = 3'd0;

assign m_axi_gmem0_0_ARUSER = 1'd0;

assign m_axi_gmem0_0_ARVALID = 1'b0;

assign m_axi_gmem0_0_AWADDR = 64'd0;

assign m_axi_gmem0_0_AWBURST = 2'd0;

assign m_axi_gmem0_0_AWCACHE = 4'd0;

assign m_axi_gmem0_0_AWID = 1'd0;

assign m_axi_gmem0_0_AWLEN = 32'd0;

assign m_axi_gmem0_0_AWLOCK = 2'd0;

assign m_axi_gmem0_0_AWPROT = 3'd0;

assign m_axi_gmem0_0_AWQOS = 4'd0;

assign m_axi_gmem0_0_AWREGION = 4'd0;

assign m_axi_gmem0_0_AWSIZE = 3'd0;

assign m_axi_gmem0_0_AWUSER = 1'd0;

assign m_axi_gmem0_0_AWVALID = 1'b0;

assign m_axi_gmem0_0_BREADY = 1'b0;

assign m_axi_gmem0_0_RREADY = 1'b0;

assign m_axi_gmem0_0_WDATA = div1_reg_592;

assign m_axi_gmem0_0_WID = 1'd0;

assign m_axi_gmem0_0_WLAST = 1'b0;

assign m_axi_gmem0_0_WSTRB = 4'd15;

assign m_axi_gmem0_0_WUSER = 1'd0;

assign select_ln74_1_fu_375_p3 = ((icmp_ln77_fu_361_p2[0:0] == 1'b1) ? add_ln74_1_fu_355_p2 : ap_sig_allocacmp_x_load);

assign select_ln74_fu_367_p3 = ((icmp_ln77_fu_361_p2[0:0] == 1'b1) ? 4'd0 : ap_sig_allocacmp_y_load);

assign zext_ln82_2_fu_411_p1 = grp_fu_425_p3;

always @ (posedge ap_clk) begin
    zext_ln82_2_reg_479[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln82_2_reg_479_pp0_iter4_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln82_2_reg_479_pp0_iter5_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln82_2_reg_479_pp0_iter6_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln82_2_reg_479_pp0_iter7_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln82_2_reg_479_pp0_iter8_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln82_2_reg_479_pp0_iter9_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln82_2_reg_479_pp0_iter10_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln82_2_reg_479_pp0_iter11_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln82_2_reg_479_pp0_iter12_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln82_2_reg_479_pp0_iter13_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln82_2_reg_479_pp0_iter14_reg[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //norm2_norm2_Pipeline_L5_L6
