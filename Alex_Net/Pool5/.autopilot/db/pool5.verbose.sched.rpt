

================================================================
== Vitis HLS Report for 'pool5'
================================================================
* Date:           Sat Jan 25 23:57:34 2025

* Version:        2024.2 (Build 5238294 on Nov  8 2024)
* Project:        Alex_Net
* Solution:       Pool5 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvc1156-2-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-------+-------+---------+
    |  Latency (cycles) |  Latency (absolute) |    Interval   | Pipeline|
    |   min   |   max   |    min   |    max   |  min  |  max  |   Type  |
    +---------+---------+----------+----------+-------+-------+---------+
    |    68103|    68103|  0.681 ms|  0.681 ms|  68104|  68104|       no|
    +---------+---------+----------+----------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                   |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |     Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- VITIS_LOOP_51_1  |    68096|    68096|       266|          -|          -|   256|        no|
        +-------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 20
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 16 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 3 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%phi_mul16 = alloca i32 1"   --->   Operation 21 'alloca' 'phi_mul16' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%phi_mul = alloca i32 1"   --->   Operation 22 'alloca' 'phi_mul' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%empty = alloca i32 1"   --->   Operation 23 'alloca' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%empty_37 = alloca i32 1"   --->   Operation 24 'alloca' 'empty_37' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%empty_38 = alloca i32 1"   --->   Operation 25 'alloca' 'empty_38' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%c = alloca i32 1" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51]   --->   Operation 26 'alloca' 'c' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%mux_case_115 = alloca i32 1"   --->   Operation 27 'alloca' 'mux_case_115' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%mux_case_322 = alloca i32 1"   --->   Operation 28 'alloca' 'mux_case_322' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%mux_case_529 = alloca i32 1"   --->   Operation 29 'alloca' 'mux_case_529' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%mux_case_736 = alloca i32 1"   --->   Operation 30 'alloca' 'mux_case_736' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%mux_case_943 = alloca i32 1"   --->   Operation 31 'alloca' 'mux_case_943' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%mux_case_1150 = alloca i32 1"   --->   Operation 32 'alloca' 'mux_case_1150' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%mux_case_257 = alloca i32 1"   --->   Operation 33 'alloca' 'mux_case_257' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%mux_case_464 = alloca i32 1"   --->   Operation 34 'alloca' 'mux_case_464' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%mux_case_671 = alloca i32 1"   --->   Operation 35 'alloca' 'mux_case_671' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%mux_case_878 = alloca i32 1"   --->   Operation 36 'alloca' 'mux_case_878' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%mux_case_1085 = alloca i32 1"   --->   Operation 37 'alloca' 'mux_case_1085' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%mux_case_1292 = alloca i32 1"   --->   Operation 38 'alloca' 'mux_case_1292' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%empty_39 = alloca i32 1"   --->   Operation 39 'alloca' 'empty_39' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (1.00ns)   --->   "%out_img_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %out_img"   --->   Operation 40 'read' 'out_img_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 120 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 41 [1/1] (1.00ns)   --->   "%inp_img_read = read i64 @_ssdm_op_Read.s_axilite.i64, i64 %inp_img"   --->   Operation 41 'read' 'inp_img_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 120 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%mux_case_114_loc = alloca i64 1"   --->   Operation 42 'alloca' 'mux_case_114_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%mux_case_321_loc = alloca i64 1"   --->   Operation 43 'alloca' 'mux_case_321_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%mux_case_528_loc = alloca i64 1"   --->   Operation 44 'alloca' 'mux_case_528_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%mux_case_735_loc = alloca i64 1"   --->   Operation 45 'alloca' 'mux_case_735_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%mux_case_942_loc = alloca i64 1"   --->   Operation 46 'alloca' 'mux_case_942_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%mux_case_1149_loc = alloca i64 1"   --->   Operation 47 'alloca' 'mux_case_1149_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%mux_case_256_loc = alloca i64 1"   --->   Operation 48 'alloca' 'mux_case_256_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%mux_case_463_loc = alloca i64 1"   --->   Operation 49 'alloca' 'mux_case_463_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%mux_case_670_loc = alloca i64 1"   --->   Operation 50 'alloca' 'mux_case_670_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%mux_case_877_loc = alloca i64 1"   --->   Operation 51 'alloca' 'mux_case_877_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%mux_case_1084_loc = alloca i64 1"   --->   Operation 52 'alloca' 'mux_case_1084_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%mux_case_1291_loc = alloca i64 1"   --->   Operation 53 'alloca' 'mux_case_1291_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%p_loc = alloca i64 1"   --->   Operation 54 'alloca' 'p_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%trunc_ln = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %out_img_read, i32 2, i32 63" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51]   --->   Operation 55 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.42ns)   --->   "%store_ln51 = store i9 0, i9 %c" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51]   --->   Operation 56 'store' 'store_ln51' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 57 [1/1] (0.42ns)   --->   "%store_ln0 = store i16 0, i16 %phi_mul"   --->   Operation 57 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 58 [1/1] (0.42ns)   --->   "%store_ln0 = store i18 0, i18 %phi_mul16"   --->   Operation 58 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%spectopmodule_ln25 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_8" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:25]   --->   Operation 59 'spectopmodule' 'spectopmodule_ln25' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem, void @empty, i32 0, i32 0, void @empty_11, i32 0, i32 290400, void @empty_0, void @empty_1, void @empty_11, i32 16, i32 16, i32 16, i32 16, void @empty_11, void @empty_11, i32 4294967295, i32 0, i32 0"   --->   Operation 60 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %gmem"   --->   Operation 61 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %inp_img, void @empty_2, i32 4294967295, i32 4294967295, void @empty_3, i32 0, i32 0, void @empty_4, void @empty_5, void @empty_11, i32 0, i32 0, i32 0, i32 0, void @empty_11, void @empty_12, i32 4294967295, i32 0, i32 0"   --->   Operation 62 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %inp_img, void @empty_6, i32 4294967295, i32 4294967295, void @empty_11, i32 0, i32 0, void @empty_11, void @empty_11, void @empty_11, i32 0, i32 0, i32 0, i32 0, void @empty_11, void @empty_12, i32 4294967295, i32 0, i32 0"   --->   Operation 63 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out_img, void @empty_2, i32 4294967295, i32 4294967295, void @empty_3, i32 0, i32 0, void @empty_4, void @empty_7, void @empty_11, i32 0, i32 0, i32 0, i32 0, void @empty_11, void @empty_12, i32 4294967295, i32 0, i32 0"   --->   Operation 64 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %out_img, void @empty_6, i32 4294967295, i32 4294967295, void @empty_11, i32 0, i32 0, void @empty_11, void @empty_11, void @empty_11, i32 0, i32 0, i32 0, i32 0, void @empty_11, void @empty_12, i32 4294967295, i32 0, i32 0"   --->   Operation 65 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty_2, i32 0, i32 0, void @empty_11, i32 0, i32 0, void @empty_4, void @empty_11, void @empty_11, i32 0, i32 0, i32 0, i32 0, void @empty_11, void @empty_11, i32 4294967295, i32 0, i32 0"   --->   Operation 66 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%sext_ln51 = sext i62 %trunc_ln" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51]   --->   Operation 67 'sext' 'sext_ln51' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i32 %gmem, i64 %sext_ln51" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51]   --->   Operation 68 'getelementptr' 'gmem_addr' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 69 [1/1] (7.30ns)   --->   "%empty_40 = writereq i1 @_ssdm_op_WriteReq.m_axi.p1i32, i32 %gmem_addr, i64 9216" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51]   --->   Operation 69 'writereq' 'empty_40' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 9> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 70 [1/1] (0.00ns)   --->   "%br_ln51 = br void %L3" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51]   --->   Operation 70 'br' 'br_ln51' <Predicate = true> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.30>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%phi_mul16_load = load i18 %phi_mul16" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51]   --->   Operation 71 'load' 'phi_mul16_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%phi_mul_load = load i16 %phi_mul" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51]   --->   Operation 72 'load' 'phi_mul_load' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%c_1 = load i9 %c" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51]   --->   Operation 73 'load' 'c_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.87ns)   --->   "%add_ln51_1 = add i18 %phi_mul16_load, i18 676" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51]   --->   Operation 74 'add' 'add_ln51_1' <Predicate = true> <Delay = 0.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 75 [1/1] (0.85ns)   --->   "%add_ln51_2 = add i16 %phi_mul_load, i16 169" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51]   --->   Operation 75 'add' 'add_ln51_2' <Predicate = true> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.85> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 76 [1/1] (0.77ns)   --->   "%icmp_ln51 = icmp_eq  i9 %c_1, i9 256" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51]   --->   Operation 76 'icmp' 'icmp_ln51' <Predicate = true> <Delay = 0.77> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 77 [1/1] (0.77ns)   --->   "%add_ln51 = add i9 %c_1, i9 1" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51]   --->   Operation 77 'add' 'add_ln51' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "%br_ln51 = br i1 %icmp_ln51, void %L3.split, void %for.end270" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51]   --->   Operation 78 'br' 'br_ln51' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%p_cast10 = zext i18 %phi_mul16_load" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51]   --->   Operation 79 'zext' 'p_cast10' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_3 : Operation 80 [1/1] (1.08ns)   --->   "%empty_41 = add i64 %p_cast10, i64 %inp_img_read" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51]   --->   Operation 80 'add' 'empty_41' <Predicate = (!icmp_ln51)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%trunc_ln1 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %empty_41, i32 2, i32 63" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57]   --->   Operation 81 'partselect' 'trunc_ln1' <Predicate = (!icmp_ln51)> <Delay = 0.00>
ST_3 : Operation 82 [1/1] (0.42ns)   --->   "%store_ln51 = store i9 %add_ln51, i9 %c" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51]   --->   Operation 82 'store' 'store_ln51' <Predicate = (!icmp_ln51)> <Delay = 0.42>
ST_3 : Operation 83 [1/1] (0.42ns)   --->   "%store_ln51 = store i16 %add_ln51_2, i16 %phi_mul" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51]   --->   Operation 83 'store' 'store_ln51' <Predicate = (!icmp_ln51)> <Delay = 0.42>
ST_3 : Operation 84 [1/1] (0.42ns)   --->   "%store_ln51 = store i18 %add_ln51_1, i18 %phi_mul16" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51]   --->   Operation 84 'store' 'store_ln51' <Predicate = (!icmp_ln51)> <Delay = 0.42>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 85 [1/1] (0.00ns)   --->   "%sext_ln57 = sext i62 %trunc_ln1" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57]   --->   Operation 85 'sext' 'sext_ln57' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "%gmem_addr_1 = getelementptr i32 %gmem, i64 %sext_ln57" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57]   --->   Operation 86 'getelementptr' 'gmem_addr_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 87 [8/8] (7.30ns)   --->   "%empty_42 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i64 13" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57]   --->   Operation 87 'readreq' 'empty_42' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 88 [7/8] (7.30ns)   --->   "%empty_42 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i64 13" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57]   --->   Operation 88 'readreq' 'empty_42' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 89 [6/8] (7.30ns)   --->   "%empty_42 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i64 13" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57]   --->   Operation 89 'readreq' 'empty_42' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 90 [5/8] (7.30ns)   --->   "%empty_42 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i64 13" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57]   --->   Operation 90 'readreq' 'empty_42' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 91 [4/8] (7.30ns)   --->   "%empty_42 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i64 13" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57]   --->   Operation 91 'readreq' 'empty_42' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 92 [3/8] (7.30ns)   --->   "%empty_42 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i64 13" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57]   --->   Operation 92 'readreq' 'empty_42' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 7.30>
ST_10 : Operation 93 [2/8] (7.30ns)   --->   "%empty_42 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i64 13" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57]   --->   Operation 93 'readreq' 'empty_42' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 7.30>
ST_11 : Operation 94 [1/8] (7.30ns)   --->   "%empty_42 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i64 13" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57]   --->   Operation 94 'readreq' 'empty_42' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 0.42>
ST_12 : Operation 95 [1/1] (0.00ns)   --->   "%mux_case_115_load = load i32 %mux_case_115"   --->   Operation 95 'load' 'mux_case_115_load' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 96 [1/1] (0.00ns)   --->   "%mux_case_322_load = load i32 %mux_case_322"   --->   Operation 96 'load' 'mux_case_322_load' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 97 [1/1] (0.00ns)   --->   "%mux_case_529_load = load i32 %mux_case_529"   --->   Operation 97 'load' 'mux_case_529_load' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 98 [1/1] (0.00ns)   --->   "%mux_case_736_load = load i32 %mux_case_736"   --->   Operation 98 'load' 'mux_case_736_load' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 99 [1/1] (0.00ns)   --->   "%mux_case_943_load = load i32 %mux_case_943"   --->   Operation 99 'load' 'mux_case_943_load' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 100 [1/1] (0.00ns)   --->   "%mux_case_1150_load = load i32 %mux_case_1150"   --->   Operation 100 'load' 'mux_case_1150_load' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 101 [1/1] (0.00ns)   --->   "%mux_case_257_load = load i32 %mux_case_257"   --->   Operation 101 'load' 'mux_case_257_load' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 102 [1/1] (0.00ns)   --->   "%mux_case_464_load = load i32 %mux_case_464"   --->   Operation 102 'load' 'mux_case_464_load' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 103 [1/1] (0.00ns)   --->   "%mux_case_671_load = load i32 %mux_case_671"   --->   Operation 103 'load' 'mux_case_671_load' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 104 [1/1] (0.00ns)   --->   "%mux_case_878_load = load i32 %mux_case_878"   --->   Operation 104 'load' 'mux_case_878_load' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 105 [1/1] (0.00ns)   --->   "%mux_case_1085_load = load i32 %mux_case_1085"   --->   Operation 105 'load' 'mux_case_1085_load' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 106 [1/1] (0.00ns)   --->   "%mux_case_1292_load = load i32 %mux_case_1292"   --->   Operation 106 'load' 'mux_case_1292_load' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 107 [1/1] (0.00ns)   --->   "%p_load = load i32 %empty_39"   --->   Operation 107 'load' 'p_load' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 108 [2/2] (0.42ns)   --->   "%call_ln57 = call void @pool5_Pipeline_L4, i32 %p_load, i32 %mux_case_1292_load, i32 %mux_case_1085_load, i32 %mux_case_878_load, i32 %mux_case_671_load, i32 %mux_case_464_load, i32 %mux_case_257_load, i32 %mux_case_1150_load, i32 %mux_case_943_load, i32 %mux_case_736_load, i32 %mux_case_529_load, i32 %mux_case_322_load, i32 %mux_case_115_load, i32 %gmem, i62 %trunc_ln1, i32 %p_loc, i32 %mux_case_1291_loc, i32 %mux_case_1084_loc, i32 %mux_case_877_loc, i32 %mux_case_670_loc, i32 %mux_case_463_loc, i32 %mux_case_256_loc, i32 %mux_case_1149_loc, i32 %mux_case_942_loc, i32 %mux_case_735_loc, i32 %mux_case_528_loc, i32 %mux_case_321_loc, i32 %mux_case_114_loc" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57]   --->   Operation 108 'call' 'call_ln57' <Predicate = true> <Delay = 0.42> <CoreType = "Generic">   --->   Generic Core

State 13 <SV = 12> <Delay = 0.00>
ST_13 : Operation 109 [1/1] (0.00ns)   --->   "%p_load29 = load i32 %empty"   --->   Operation 109 'load' 'p_load29' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 110 [1/1] (0.00ns)   --->   "%p_load28 = load i32 %empty_37"   --->   Operation 110 'load' 'p_load28' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 111 [1/1] (0.00ns)   --->   "%p_load27 = load i32 %empty_38"   --->   Operation 111 'load' 'p_load27' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 112 [1/2] (0.00ns)   --->   "%call_ln57 = call void @pool5_Pipeline_L4, i32 %p_load, i32 %mux_case_1292_load, i32 %mux_case_1085_load, i32 %mux_case_878_load, i32 %mux_case_671_load, i32 %mux_case_464_load, i32 %mux_case_257_load, i32 %mux_case_1150_load, i32 %mux_case_943_load, i32 %mux_case_736_load, i32 %mux_case_529_load, i32 %mux_case_322_load, i32 %mux_case_115_load, i32 %gmem, i62 %trunc_ln1, i32 %p_loc, i32 %mux_case_1291_loc, i32 %mux_case_1084_loc, i32 %mux_case_877_loc, i32 %mux_case_670_loc, i32 %mux_case_463_loc, i32 %mux_case_256_loc, i32 %mux_case_1149_loc, i32 %mux_case_942_loc, i32 %mux_case_735_loc, i32 %mux_case_528_loc, i32 %mux_case_321_loc, i32 %mux_case_114_loc" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57]   --->   Operation 112 'call' 'call_ln57' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Generic Core

State 14 <SV = 13> <Delay = 1.93>
ST_14 : Operation 113 [1/1] (0.00ns)   --->   "%p_loc_load = load i32 %p_loc"   --->   Operation 113 'load' 'p_loc_load' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 114 [1/1] (0.00ns)   --->   "%mux_case_1291_loc_load = load i32 %mux_case_1291_loc"   --->   Operation 114 'load' 'mux_case_1291_loc_load' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 115 [1/1] (0.00ns)   --->   "%mux_case_1084_loc_load = load i32 %mux_case_1084_loc"   --->   Operation 115 'load' 'mux_case_1084_loc_load' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 116 [1/1] (0.00ns)   --->   "%mux_case_877_loc_load = load i32 %mux_case_877_loc"   --->   Operation 116 'load' 'mux_case_877_loc_load' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 117 [1/1] (0.00ns)   --->   "%mux_case_670_loc_load = load i32 %mux_case_670_loc"   --->   Operation 117 'load' 'mux_case_670_loc_load' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 118 [1/1] (0.00ns)   --->   "%mux_case_463_loc_load = load i32 %mux_case_463_loc"   --->   Operation 118 'load' 'mux_case_463_loc_load' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 119 [1/1] (0.00ns)   --->   "%mux_case_256_loc_load = load i32 %mux_case_256_loc"   --->   Operation 119 'load' 'mux_case_256_loc_load' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 120 [1/1] (0.00ns)   --->   "%mux_case_1149_loc_load = load i32 %mux_case_1149_loc"   --->   Operation 120 'load' 'mux_case_1149_loc_load' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 121 [1/1] (0.00ns)   --->   "%mux_case_942_loc_load = load i32 %mux_case_942_loc"   --->   Operation 121 'load' 'mux_case_942_loc_load' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 122 [1/1] (0.00ns)   --->   "%mux_case_735_loc_load = load i32 %mux_case_735_loc"   --->   Operation 122 'load' 'mux_case_735_loc_load' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 123 [1/1] (0.00ns)   --->   "%mux_case_528_loc_load = load i32 %mux_case_528_loc"   --->   Operation 123 'load' 'mux_case_528_loc_load' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 124 [1/1] (0.00ns)   --->   "%mux_case_321_loc_load = load i32 %mux_case_321_loc"   --->   Operation 124 'load' 'mux_case_321_loc_load' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 125 [1/1] (0.00ns)   --->   "%mux_case_114_loc_load = load i32 %mux_case_114_loc"   --->   Operation 125 'load' 'mux_case_114_loc_load' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 126 [2/2] (1.93ns)   --->   "%call_ln51 = call void @pool5_Pipeline_L5_L6, i32 %p_loc_load, i32 %mux_case_1291_loc_load, i32 %mux_case_1084_loc_load, i32 %mux_case_877_loc_load, i32 %mux_case_670_loc_load, i32 %mux_case_463_loc_load, i32 %mux_case_256_loc_load, i32 %mux_case_1149_loc_load, i32 %mux_case_942_loc_load, i32 %mux_case_735_loc_load, i32 %mux_case_528_loc_load, i32 %mux_case_321_loc_load, i32 %mux_case_114_loc_load, i32 %p_load27, i32 %p_load28, i32 %p_load29, i32 %gmem, i62 %trunc_ln, i16 %phi_mul_load, i64 %inp_img_read, i32 %empty_39, i32 %mux_case_1292, i32 %mux_case_1085, i32 %mux_case_878, i32 %mux_case_671, i32 %mux_case_464, i32 %mux_case_257, i32 %mux_case_1150, i32 %mux_case_943, i32 %mux_case_736, i32 %mux_case_529, i32 %mux_case_322, i32 %mux_case_115, i32 %empty_38, i32 %empty_37, i32 %empty" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51]   --->   Operation 126 'call' 'call_ln51' <Predicate = true> <Delay = 1.93> <CoreType = "Generic">   --->   Generic Core

State 15 <SV = 14> <Delay = 0.00>
ST_15 : Operation 127 [1/1] (0.00ns)   --->   "%speclooptripcount_ln51 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 256, i64 256, i64 256" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51]   --->   Operation 127 'speclooptripcount' 'speclooptripcount_ln51' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 128 [1/1] (0.00ns)   --->   "%specloopname_ln51 = specloopname void @_ssdm_op_SpecLoopName, void @empty_10" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51]   --->   Operation 128 'specloopname' 'specloopname_ln51' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 129 [1/2] (0.00ns)   --->   "%call_ln51 = call void @pool5_Pipeline_L5_L6, i32 %p_loc_load, i32 %mux_case_1291_loc_load, i32 %mux_case_1084_loc_load, i32 %mux_case_877_loc_load, i32 %mux_case_670_loc_load, i32 %mux_case_463_loc_load, i32 %mux_case_256_loc_load, i32 %mux_case_1149_loc_load, i32 %mux_case_942_loc_load, i32 %mux_case_735_loc_load, i32 %mux_case_528_loc_load, i32 %mux_case_321_loc_load, i32 %mux_case_114_loc_load, i32 %p_load27, i32 %p_load28, i32 %p_load29, i32 %gmem, i62 %trunc_ln, i16 %phi_mul_load, i64 %inp_img_read, i32 %empty_39, i32 %mux_case_1292, i32 %mux_case_1085, i32 %mux_case_878, i32 %mux_case_671, i32 %mux_case_464, i32 %mux_case_257, i32 %mux_case_1150, i32 %mux_case_943, i32 %mux_case_736, i32 %mux_case_529, i32 %mux_case_322, i32 %mux_case_115, i32 %empty_38, i32 %empty_37, i32 %empty" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51]   --->   Operation 129 'call' 'call_ln51' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Generic Core
ST_15 : Operation 130 [1/1] (0.00ns)   --->   "%br_ln51 = br void %L3" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51]   --->   Operation 130 'br' 'br_ln51' <Predicate = true> <Delay = 0.00>

State 16 <SV = 3> <Delay = 7.30>
ST_16 : Operation 131 [5/5] (7.30ns)   --->   "%empty_43 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:167]   --->   Operation 131 'writeresp' 'empty_43' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 17 <SV = 4> <Delay = 7.30>
ST_17 : Operation 132 [4/5] (7.30ns)   --->   "%empty_43 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:167]   --->   Operation 132 'writeresp' 'empty_43' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 18 <SV = 5> <Delay = 7.30>
ST_18 : Operation 133 [3/5] (7.30ns)   --->   "%empty_43 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:167]   --->   Operation 133 'writeresp' 'empty_43' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 19 <SV = 6> <Delay = 7.30>
ST_19 : Operation 134 [2/5] (7.30ns)   --->   "%empty_43 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:167]   --->   Operation 134 'writeresp' 'empty_43' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 20 <SV = 7> <Delay = 7.30>
ST_20 : Operation 135 [1/5] (7.30ns)   --->   "%empty_43 = writeresp i1 @_ssdm_op_WriteResp.m_axi.p1i32, i32 %gmem_addr" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:167]   --->   Operation 135 'writeresp' 'empty_43' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_20 : Operation 136 [1/1] (0.00ns)   --->   "%ret_ln167 = ret" [AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:167]   --->   Operation 136 'ret' 'ret_ln167' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 1.000ns
The critical path consists of the following:
	s_axi read operation ('out_img_read') on port 'out_img' [23]  (1.000 ns)

 <State 2>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation 32 bit ('gmem_addr', AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51) [48]  (0.000 ns)
	bus request operation ('empty_40', AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51) on port 'gmem' (AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51) [49]  (7.300 ns)

 <State 3>: 1.300ns
The critical path consists of the following:
	'load' operation 18 bit ('phi_mul16_load', AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51) on local variable 'phi_mul16' [55]  (0.000 ns)
	'add' operation 18 bit ('add_ln51_1', AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51) [58]  (0.873 ns)
	'store' operation 0 bit ('store_ln51', AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51) of variable 'add_ln51_1', AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51 on local variable 'phi_mul16' [105]  (0.427 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation 32 bit ('gmem_addr_1', AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57) [86]  (0.000 ns)
	bus request operation ('empty_42', AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57) on port 'gmem' (AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57) [87]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_42', AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57) on port 'gmem' (AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57) [87]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_42', AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57) on port 'gmem' (AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57) [87]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_42', AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57) on port 'gmem' (AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57) [87]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_42', AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57) on port 'gmem' (AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57) [87]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_42', AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57) on port 'gmem' (AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57) [87]  (7.300 ns)

 <State 10>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_42', AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57) on port 'gmem' (AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57) [87]  (7.300 ns)

 <State 11>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_42', AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57) on port 'gmem' (AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57) [87]  (7.300 ns)

 <State 12>: 0.427ns
The critical path consists of the following:
	'load' operation 32 bit ('mux_case_115_load') on local variable 'mux_case_115' [67]  (0.000 ns)
	'call' operation 0 bit ('call_ln57', AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:57) to 'pool5_Pipeline_L4' [88]  (0.427 ns)

 <State 13>: 0.000ns
The critical path consists of the following:

 <State 14>: 1.938ns
The critical path consists of the following:
	'load' operation 32 bit ('p_loc_load') on local variable 'p_loc' [89]  (0.000 ns)
	'call' operation 0 bit ('call_ln51', AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:51) to 'pool5_Pipeline_L5_L6' [102]  (1.938 ns)

 <State 15>: 0.000ns
The critical path consists of the following:

 <State 16>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_43', AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:167) on port 'gmem' (AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:167) [108]  (7.300 ns)

 <State 17>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_43', AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:167) on port 'gmem' (AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:167) [108]  (7.300 ns)

 <State 18>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_43', AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:167) on port 'gmem' (AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:167) [108]  (7.300 ns)

 <State 19>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_43', AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:167) on port 'gmem' (AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:167) [108]  (7.300 ns)

 <State 20>: 7.300ns
The critical path consists of the following:
	bus response operation ('empty_43', AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:167) on port 'gmem' (AlexNet-FPGA-implementation/Pool5/src/pool5.cpp:167) [108]  (7.300 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
