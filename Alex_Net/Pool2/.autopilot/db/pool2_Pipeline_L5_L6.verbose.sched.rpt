

================================================================
== Vitis HLS Report for 'pool2_Pipeline_L5_L6'
================================================================
* Date:           Sat Jan 25 23:53:53 2025

* Version:        2024.2 (Build 5238294 on Nov  8 2024)
* Project:        Alex_Net
* Solution:       Pool2 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvc1156-2-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+------------------------------------------------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  |                    Pipeline                    |
    |   min   |   max   |    min    |    max    |  min |  max |                      Type                      |
    +---------+---------+-----------+-----------+------+------+------------------------------------------------+
    |     1035|     1035|  10.350 us|  10.350 us|  1020|  1020|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+-----------+-----------+------+------+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- L5_L6   |     1033|     1033|        26|          6|          1|   169|       yes|
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 6, depth = 26


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 26
* Pipeline : 1
  Pipeline-0 : II = 6, D = 26, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 5.87>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%col = alloca i32 1" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:71]   --->   Operation 29 'alloca' 'col' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%indvar370 = alloca i32 1"   --->   Operation 30 'alloca' 'indvar370' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%indvar = alloca i32 1"   --->   Operation 31 'alloca' 'indvar' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 32 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%line_buffer_2D = alloca i32 1" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:42]   --->   Operation 33 'alloca' 'line_buffer_2D' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%line_buffer_2D_2 = alloca i32 1" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:42]   --->   Operation 34 'alloca' 'line_buffer_2D_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%line_buffer_2D_1 = alloca i32 1" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:42]   --->   Operation 35 'alloca' 'line_buffer_2D_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%empty_22 = alloca i32 1"   --->   Operation 36 'alloca' 'empty_22' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%empty_23 = alloca i32 1"   --->   Operation 37 'alloca' 'empty_23' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%empty_24 = alloca i32 1"   --->   Operation 38 'alloca' 'empty_24' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%inp_img_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %inp_img"   --->   Operation 39 'read' 'inp_img_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%phi_mul_read = read i18 @_ssdm_op_Read.ap_auto.i18, i18 %phi_mul"   --->   Operation 40 'read' 'phi_mul_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%sext_ln51_read = read i62 @_ssdm_op_Read.ap_auto.i62, i62 %sext_ln51"   --->   Operation 41 'read' 'sext_ln51_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%tmp_45 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %empty"   --->   Operation 42 'read' 'tmp_45' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%tmp_46 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %empty_14"   --->   Operation 43 'read' 'tmp_46' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%tmp_47 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %empty_13"   --->   Operation 44 'read' 'tmp_47' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%mux_case_114_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_114_reload"   --->   Operation 45 'read' 'mux_case_114_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%mux_case_321_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_321_reload"   --->   Operation 46 'read' 'mux_case_321_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%mux_case_528_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_528_reload"   --->   Operation 47 'read' 'mux_case_528_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%mux_case_735_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_735_reload"   --->   Operation 48 'read' 'mux_case_735_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%mux_case_942_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_942_reload"   --->   Operation 49 'read' 'mux_case_942_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%mux_case_1149_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_1149_reload"   --->   Operation 50 'read' 'mux_case_1149_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%mux_case_1356_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_1356_reload"   --->   Operation 51 'read' 'mux_case_1356_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%mux_case_1563_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_1563_reload"   --->   Operation 52 'read' 'mux_case_1563_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%mux_case_1770_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_1770_reload"   --->   Operation 53 'read' 'mux_case_1770_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%mux_case_1977_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_1977_reload"   --->   Operation 54 'read' 'mux_case_1977_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%mux_case_2184_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_2184_reload"   --->   Operation 55 'read' 'mux_case_2184_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%mux_case_2391_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_2391_reload"   --->   Operation 56 'read' 'mux_case_2391_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%mux_case_2598_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_2598_reload"   --->   Operation 57 'read' 'mux_case_2598_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%mux_case_2105_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_2105_reload"   --->   Operation 58 'read' 'mux_case_2105_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%mux_case_4112_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_4112_reload"   --->   Operation 59 'read' 'mux_case_4112_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%mux_case_6119_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_6119_reload"   --->   Operation 60 'read' 'mux_case_6119_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%mux_case_8126_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_8126_reload"   --->   Operation 61 'read' 'mux_case_8126_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%mux_case_10133_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_10133_reload"   --->   Operation 62 'read' 'mux_case_10133_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%mux_case_12140_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_12140_reload"   --->   Operation 63 'read' 'mux_case_12140_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%mux_case_14147_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_14147_reload"   --->   Operation 64 'read' 'mux_case_14147_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%mux_case_16154_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_16154_reload"   --->   Operation 65 'read' 'mux_case_16154_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%mux_case_18161_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_18161_reload"   --->   Operation 66 'read' 'mux_case_18161_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%mux_case_20168_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_20168_reload"   --->   Operation 67 'read' 'mux_case_20168_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%mux_case_22175_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_22175_reload"   --->   Operation 68 'read' 'mux_case_22175_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%mux_case_24182_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_24182_reload"   --->   Operation 69 'read' 'mux_case_24182_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%mux_case_26189_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_26189_reload"   --->   Operation 70 'read' 'mux_case_26189_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%p_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %p_reload"   --->   Operation 71 'read' 'p_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%sext_ln51_cast = sext i62 %sext_ln51_read"   --->   Operation 72 'sext' 'sext_ln51_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem, void @empty, i32 0, i32 0, void @empty_11, i32 0, i32 290400, void @empty_0, void @empty_1, void @empty_11, i32 16, i32 16, i32 16, i32 16, void @empty_11, void @empty_11, i32 4294967295, i32 0, i32 0"   --->   Operation 73 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_26189_reload_read, i32 %mux_case_26_out"   --->   Operation 74 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 75 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_24182_reload_read, i32 %mux_case_24_out"   --->   Operation 75 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 76 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_22175_reload_read, i32 %mux_case_22_out"   --->   Operation 76 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 77 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_20168_reload_read, i32 %mux_case_20_out"   --->   Operation 77 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 78 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_18161_reload_read, i32 %mux_case_18_out"   --->   Operation 78 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 79 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_16154_reload_read, i32 %mux_case_16_out"   --->   Operation 79 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 80 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_14147_reload_read, i32 %mux_case_14_out"   --->   Operation 80 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 81 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_12140_reload_read, i32 %mux_case_12_out"   --->   Operation 81 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 82 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_10133_reload_read, i32 %mux_case_10_out"   --->   Operation 82 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 83 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_8126_reload_read, i32 %mux_case_8_out"   --->   Operation 83 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 84 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_6119_reload_read, i32 %mux_case_6_out"   --->   Operation 84 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 85 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_4112_reload_read, i32 %mux_case_4_out"   --->   Operation 85 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 86 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_2598_reload_read, i32 %mux_case_25_out"   --->   Operation 86 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 87 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_2391_reload_read, i32 %mux_case_23_out"   --->   Operation 87 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 88 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_2184_reload_read, i32 %mux_case_21_out"   --->   Operation 88 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 89 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_1977_reload_read, i32 %mux_case_19_out"   --->   Operation 89 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 90 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_1770_reload_read, i32 %mux_case_17_out"   --->   Operation 90 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 91 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_1563_reload_read, i32 %mux_case_15_out"   --->   Operation 91 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 92 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_1356_reload_read, i32 %mux_case_13_out"   --->   Operation 92 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 93 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_1149_reload_read, i32 %mux_case_11_out"   --->   Operation 93 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 94 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_942_reload_read, i32 %mux_case_9_out"   --->   Operation 94 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 95 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_735_reload_read, i32 %mux_case_7_out"   --->   Operation 95 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 96 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_528_reload_read, i32 %mux_case_5_out"   --->   Operation 96 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 97 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_321_reload_read, i32 %mux_case_3_out"   --->   Operation 97 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 98 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %tmp_47, i32 %empty_24"   --->   Operation 98 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 99 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %tmp_46, i32 %empty_23"   --->   Operation 99 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 100 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %tmp_45, i32 %empty_22"   --->   Operation 100 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 101 [1/1] (0.42ns)   --->   "%store_ln42 = store i32 %p_reload_read, i32 %line_buffer_2D_1" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:42]   --->   Operation 101 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 102 [1/1] (0.42ns)   --->   "%store_ln42 = store i32 %mux_case_2105_reload_read, i32 %line_buffer_2D_2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:42]   --->   Operation 102 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 103 [1/1] (0.42ns)   --->   "%store_ln42 = store i32 %mux_case_114_reload_read, i32 %line_buffer_2D" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:42]   --->   Operation 103 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 104 [1/1] (0.42ns)   --->   "%store_ln0 = store i8 0, i8 %indvar_flatten"   --->   Operation 104 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 105 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 0, i4 %indvar"   --->   Operation 105 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 106 [1/1] (0.42ns)   --->   "%store_ln0 = store i4 0, i4 %indvar370"   --->   Operation 106 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 107 [1/1] (0.42ns)   --->   "%store_ln71 = store i5 2, i5 %col" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:71]   --->   Operation 107 'store' 'store_ln71' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 108 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body26"   --->   Operation 108 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 109 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i8 %indvar_flatten" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 109 'load' 'indvar_flatten_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 110 [1/1] (0.76ns)   --->   "%icmp_ln68 = icmp_eq  i8 %indvar_flatten_load, i8 169" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 110 'icmp' 'icmp_ln68' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 111 [1/1] (0.76ns)   --->   "%add_ln68 = add i8 %indvar_flatten_load, i8 1" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 111 'add' 'add_ln68' <Predicate = true> <Delay = 0.76> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 112 [1/1] (0.00ns)   --->   "%col_load = load i5 %col" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:71]   --->   Operation 112 'load' 'col_load' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 113 [1/1] (0.00ns)   --->   "%indvar370_load = load i4 %indvar370" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:71]   --->   Operation 113 'load' 'indvar370_load' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 114 [1/1] (0.00ns)   --->   "%indvar_load = load i4 %indvar" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 114 'load' 'indvar_load' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 115 [1/1] (0.79ns)   --->   "%icmp_ln71 = icmp_eq  i4 %indvar370_load, i4 13" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:71]   --->   Operation 115 'icmp' 'icmp_ln71' <Predicate = (!icmp_ln68)> <Delay = 0.79> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 116 [1/1] (0.39ns)   --->   "%select_ln71 = select i1 %icmp_ln71, i4 0, i4 %indvar370_load" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:71]   --->   Operation 116 'select' 'select_ln71' <Predicate = (!icmp_ln68)> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 117 [1/1] (0.41ns)   --->   "%select_ln71_1 = select i1 %icmp_ln71, i5 2, i5 %col_load" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:71]   --->   Operation 117 'select' 'select_ln71_1' <Predicate = (!icmp_ln68)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 118 [1/1] (0.79ns)   --->   "%add_ln68_1 = add i4 %indvar_load, i4 1" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 118 'add' 'add_ln68_1' <Predicate = (!icmp_ln68)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 119 [1/1] (0.39ns)   --->   "%select_ln68 = select i1 %icmp_ln71, i4 %add_ln68_1, i4 %indvar_load" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 119 'select' 'select_ln68' <Predicate = (!icmp_ln68)> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 120 [1/1] (0.00ns)   --->   "%zext_ln68 = zext i4 %select_ln68" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 120 'zext' 'zext_ln68' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 121 [1/1] (1.51ns)   --->   "%empty_27 = mul i10 %zext_ln68, i10 54" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 121 'mul' 'empty_27' <Predicate = (!icmp_ln68)> <Delay = 1.51> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 1.51> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 122 [1/1] (0.78ns)   --->   "%tmp2 = add i10 %empty_27, i10 27" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 122 'add' 'tmp2' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 123 [1/1] (0.00ns)   --->   "%tmp2_cast = zext i10 %tmp2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 123 'zext' 'tmp2_cast' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 124 [1/1] (0.87ns)   --->   "%empty_30 = add i18 %tmp2_cast, i18 %phi_mul_read" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 124 'add' 'empty_30' <Predicate = (!icmp_ln68)> <Delay = 0.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 125 [1/1] (0.00ns)   --->   "%tmp_3 = bitconcatenate i20 @_ssdm_op_BitConcatenate.i20.i18.i2, i18 %empty_30, i2 0" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 125 'bitconcatenate' 'tmp_3' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 126 [1/1] (0.00ns)   --->   "%p_cast12 = zext i20 %tmp_3" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 126 'zext' 'p_cast12' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 127 [1/1] (1.08ns)   --->   "%empty_31 = add i64 %p_cast12, i64 %inp_img_read" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 127 'add' 'empty_31' <Predicate = (!icmp_ln68)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 128 [1/1] (0.78ns)   --->   "%tmp4 = add i10 %empty_27, i10 28" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 128 'add' 'tmp4' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 129 [1/1] (0.00ns)   --->   "%tmp4_cast = zext i10 %tmp4" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 129 'zext' 'tmp4_cast' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 130 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%empty_33 = add i18 %tmp4_cast, i18 %phi_mul_read" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 130 'add' 'empty_33' <Predicate = (!icmp_ln68)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 131 [1/1] (0.00ns)   --->   "%p_cast8 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %empty_31, i32 2, i32 63" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 131 'partselect' 'p_cast8' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 132 [1/1] (0.00ns)   --->   "%p_cast8_cast = sext i62 %p_cast8" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 132 'sext' 'p_cast8_cast' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 133 [1/1] (0.00ns)   --->   "%gmem_addr_1 = getelementptr i32 %gmem, i64 %p_cast8_cast" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 133 'getelementptr' 'gmem_addr_1' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 134 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i4.i1, i4 %select_ln71, i1 0" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:76]   --->   Operation 134 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 135 [1/1] (0.00ns)   --->   "%zext_ln76 = zext i5 %shl_ln" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:76]   --->   Operation 135 'zext' 'zext_ln76' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 136 [1/1] (0.69ns) (root node of TernaryAdder)   --->   "%add_ln76_2 = add i18 %empty_33, i18 %zext_ln76" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:76]   --->   Operation 136 'add' 'add_ln76_2' <Predicate = (!icmp_ln68)> <Delay = 0.69> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 137 [1/1] (0.00ns)   --->   "%shl_ln76_2 = bitconcatenate i20 @_ssdm_op_BitConcatenate.i20.i18.i2, i18 %add_ln76_2, i2 0" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:76]   --->   Operation 137 'bitconcatenate' 'shl_ln76_2' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 138 [1/1] (0.00ns)   --->   "%zext_ln76_2 = zext i20 %shl_ln76_2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:76]   --->   Operation 138 'zext' 'zext_ln76_2' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 139 [1/1] (1.08ns)   --->   "%add_ln76_3 = add i64 %zext_ln76_2, i64 %inp_img_read" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:76]   --->   Operation 139 'add' 'add_ln76_3' <Predicate = (!icmp_ln68)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 140 [1/1] (0.78ns)   --->   "%icmp_ln76 = icmp_eq  i5 %select_ln71_1, i5 2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:76]   --->   Operation 140 'icmp' 'icmp_ln76' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 141 [1/1] (0.78ns)   --->   "%icmp_ln25 = icmp_eq  i5 %select_ln71_1, i5 24" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:25]   --->   Operation 141 'icmp' 'icmp_ln25' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 142 [1/1] (0.78ns)   --->   "%icmp_ln25_1 = icmp_eq  i5 %select_ln71_1, i5 22" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:25]   --->   Operation 142 'icmp' 'icmp_ln25_1' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 143 [1/1] (0.78ns)   --->   "%icmp_ln25_2 = icmp_eq  i5 %select_ln71_1, i5 20" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:25]   --->   Operation 143 'icmp' 'icmp_ln25_2' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 144 [1/1] (0.78ns)   --->   "%icmp_ln25_3 = icmp_eq  i5 %select_ln71_1, i5 18" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:25]   --->   Operation 144 'icmp' 'icmp_ln25_3' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 145 [1/1] (0.78ns)   --->   "%icmp_ln25_4 = icmp_eq  i5 %select_ln71_1, i5 16" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:25]   --->   Operation 145 'icmp' 'icmp_ln25_4' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 146 [1/1] (0.78ns)   --->   "%icmp_ln25_5 = icmp_eq  i5 %select_ln71_1, i5 14" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:25]   --->   Operation 146 'icmp' 'icmp_ln25_5' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 147 [1/1] (0.78ns)   --->   "%icmp_ln25_6 = icmp_eq  i5 %select_ln71_1, i5 12" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:25]   --->   Operation 147 'icmp' 'icmp_ln25_6' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 148 [1/1] (0.78ns)   --->   "%icmp_ln25_7 = icmp_eq  i5 %select_ln71_1, i5 10" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:25]   --->   Operation 148 'icmp' 'icmp_ln25_7' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 149 [1/1] (0.78ns)   --->   "%icmp_ln25_8 = icmp_eq  i5 %select_ln71_1, i5 8" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:25]   --->   Operation 149 'icmp' 'icmp_ln25_8' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 150 [1/1] (0.78ns)   --->   "%icmp_ln25_9 = icmp_eq  i5 %select_ln71_1, i5 6" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:25]   --->   Operation 150 'icmp' 'icmp_ln25_9' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 151 [1/1] (0.78ns)   --->   "%icmp_ln25_10 = icmp_eq  i5 %select_ln71_1, i5 4" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:25]   --->   Operation 151 'icmp' 'icmp_ln25_10' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 152 [1/1] (0.28ns)   --->   "%or_ln25 = or i1 %icmp_ln25_1, i1 %icmp_ln25" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:25]   --->   Operation 152 'or' 'or_ln25' <Predicate = (!icmp_ln68)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 153 [1/1] (0.00ns)   --->   "%trunc_ln2 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln76_3, i32 2, i32 63" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 153 'partselect' 'trunc_ln2' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_1 : Operation 154 [1/1] (0.00ns)   --->   "%sext_ln126 = sext i62 %trunc_ln2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 154 'sext' 'sext_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_1 : Operation 155 [1/1] (0.00ns)   --->   "%gmem_addr_3 = getelementptr i32 %gmem, i64 %sext_ln126" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 155 'getelementptr' 'gmem_addr_3' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_1 : Operation 156 [1/1] (0.00ns) (grouped into LUT with out node or_ln25_5)   --->   "%or_ln25_1 = or i1 %icmp_ln25_2, i1 %or_ln25" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:25]   --->   Operation 156 'or' 'or_ln25_1' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node or_ln25_5)   --->   "%or_ln25_2 = or i1 %icmp_ln25_3, i1 %or_ln25_1" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:25]   --->   Operation 157 'or' 'or_ln25_2' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node or_ln25_5)   --->   "%or_ln25_3 = or i1 %icmp_ln25_4, i1 %or_ln25_2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:25]   --->   Operation 158 'or' 'or_ln25_3' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 159 [1/1] (0.00ns) (grouped into LUT with out node or_ln25_5)   --->   "%or_ln25_4 = or i1 %icmp_ln25_5, i1 %or_ln25_3" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:25]   --->   Operation 159 'or' 'or_ln25_4' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 160 [1/1] (0.28ns) (out node of the LUT)   --->   "%or_ln25_5 = or i1 %icmp_ln25_6, i1 %or_ln25_4" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:25]   --->   Operation 160 'or' 'or_ln25_5' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 161 [1/1] (0.00ns) (grouped into LUT with out node or_ln25_9)   --->   "%or_ln25_6 = or i1 %icmp_ln25_7, i1 %or_ln25_5" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:25]   --->   Operation 161 'or' 'or_ln25_6' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 162 [1/1] (0.00ns) (grouped into LUT with out node or_ln25_9)   --->   "%or_ln25_7 = or i1 %icmp_ln25_8, i1 %or_ln25_6" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:25]   --->   Operation 162 'or' 'or_ln25_7' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 163 [1/1] (0.00ns) (grouped into LUT with out node or_ln25_9)   --->   "%or_ln25_8 = or i1 %icmp_ln25_9, i1 %or_ln25_7" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:25]   --->   Operation 163 'or' 'or_ln25_8' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 164 [1/1] (0.28ns) (out node of the LUT)   --->   "%or_ln25_9 = or i1 %icmp_ln25_10, i1 %or_ln25_8" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:25]   --->   Operation 164 'or' 'or_ln25_9' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 165 [1/1] (0.00ns)   --->   "%br_ln25 = br i1 %or_ln25_9, void %arrayidx12312.case.25, void %arrayidx12312.exit" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:25]   --->   Operation 165 'br' 'br_ln25' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_1 : Operation 166 [1/1] (0.00ns)   --->   "%br_ln114 = br void %arrayidx12312.exit" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 166 'br' 'br_ln114' <Predicate = (!icmp_ln68 & !icmp_ln76 & !or_ln25_9)> <Delay = 0.00>
ST_1 : Operation 167 [1/1] (0.00ns)   --->   "%br_ln25 = br i1 %or_ln25_9, void %arrayidx12312.1.case.26, void %arrayidx12312.1.exit" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:25]   --->   Operation 167 'br' 'br_ln25' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_1 : Operation 168 [1/1] (0.00ns)   --->   "%br_ln114 = br void %arrayidx12312.1.exit" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 168 'br' 'br_ln114' <Predicate = (!icmp_ln68 & !icmp_ln76 & !or_ln25_9)> <Delay = 0.00>
ST_1 : Operation 169 [1/1] (0.00ns)   --->   "%br_ln25 = br i1 %or_ln25_9, void %arrayidx1649.case.25, void %arrayidx1649.exit" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:25]   --->   Operation 169 'br' 'br_ln25' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_1 : Operation 170 [1/1] (0.00ns)   --->   "%br_ln127 = br void %arrayidx1649.exit" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:127]   --->   Operation 170 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & !or_ln25_9)> <Delay = 0.00>
ST_1 : Operation 171 [1/1] (0.00ns)   --->   "%br_ln25 = br i1 %or_ln25_9, void %arrayidx1649.151.case.26, void %arrayidx1649.151.exit" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:25]   --->   Operation 171 'br' 'br_ln25' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_1 : Operation 172 [1/1] (0.00ns)   --->   "%br_ln127 = br void %arrayidx1649.151.exit" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:127]   --->   Operation 172 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & !or_ln25_9)> <Delay = 0.00>
ST_1 : Operation 173 [1/1] (0.78ns)   --->   "%switch_ln127 = switch i5 %select_ln71_1, void %arrayidx11811.1.case.26, i5 24, void %arrayidx11811.1.case.24, i5 4, void %arrayidx11811.1.case.4, i5 6, void %arrayidx11811.1.case.6, i5 8, void %arrayidx11811.1.case.8, i5 10, void %arrayidx11811.1.case.10, i5 12, void %arrayidx11811.1.case.12, i5 14, void %arrayidx11811.1.case.14, i5 16, void %arrayidx11811.1.case.16, i5 18, void %arrayidx11811.1.case.18, i5 20, void %arrayidx11811.1.case.20, i5 22, void %arrayidx1649.151.exit.for.body232_crit_edge" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:127]   --->   Operation 173 'switch' 'switch_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.78>
ST_1 : Operation 174 [1/1] (0.78ns)   --->   "%add_ln71 = add i5 %select_ln71_1, i5 2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:71]   --->   Operation 174 'add' 'add_ln71' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 175 [1/1] (0.79ns)   --->   "%add_ln71_1 = add i4 %select_ln71, i4 1" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:71]   --->   Operation 175 'add' 'add_ln71_1' <Predicate = (!icmp_ln68)> <Delay = 0.79> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.79> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 176 [1/1] (0.42ns)   --->   "%store_ln68 = store i8 %add_ln68, i8 %indvar_flatten" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 176 'store' 'store_ln68' <Predicate = (!icmp_ln68)> <Delay = 0.42>
ST_1 : Operation 177 [1/1] (0.42ns)   --->   "%store_ln68 = store i4 %select_ln68, i4 %indvar" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 177 'store' 'store_ln68' <Predicate = (!icmp_ln68)> <Delay = 0.42>
ST_1 : Operation 178 [1/1] (0.42ns)   --->   "%store_ln71 = store i4 %add_ln71_1, i4 %indvar370" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:71]   --->   Operation 178 'store' 'store_ln71' <Predicate = (!icmp_ln68)> <Delay = 0.42>
ST_1 : Operation 179 [1/1] (0.42ns)   --->   "%store_ln71 = store i5 %add_ln71, i5 %col" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:71]   --->   Operation 179 'store' 'store_ln71' <Predicate = (!icmp_ln68)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 180 [8/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_3, i64 2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 180 'readreq' 'empty_34' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 181 [8/8] (7.30ns)   --->   "%empty_25 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i64 3" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 181 'readreq' 'empty_25' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 182 [1/1] (0.78ns)   --->   "%tmp3 = add i10 %empty_27, i10 55" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 182 'add' 'tmp3' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 183 [1/1] (0.00ns)   --->   "%tmp3_cast = zext i10 %tmp3" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 183 'zext' 'tmp3_cast' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_3 : Operation 184 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%empty_32 = add i18 %tmp3_cast, i18 %phi_mul_read" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 184 'add' 'empty_32' <Predicate = (!icmp_ln68)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 185 [1/1] (0.69ns) (root node of TernaryAdder)   --->   "%add_ln76 = add i18 %empty_32, i18 %zext_ln76" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:76]   --->   Operation 185 'add' 'add_ln76' <Predicate = (!icmp_ln68)> <Delay = 0.69> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 186 [1/1] (0.00ns)   --->   "%shl_ln76_1 = bitconcatenate i20 @_ssdm_op_BitConcatenate.i20.i18.i2, i18 %add_ln76, i2 0" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:76]   --->   Operation 186 'bitconcatenate' 'shl_ln76_1' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_3 : Operation 187 [1/1] (0.00ns)   --->   "%zext_ln76_1 = zext i20 %shl_ln76_1" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:76]   --->   Operation 187 'zext' 'zext_ln76_1' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_3 : Operation 188 [1/1] (1.08ns)   --->   "%add_ln76_1 = add i64 %zext_ln76_1, i64 %inp_img_read" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:76]   --->   Operation 188 'add' 'add_ln76_1' <Predicate = (!icmp_ln68)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 189 [7/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_3, i64 2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 189 'readreq' 'empty_34' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 190 [1/1] (0.00ns)   --->   "%trunc_ln126_1 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln76_1, i32 2, i32 63" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 190 'partselect' 'trunc_ln126_1' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_3 : Operation 191 [1/1] (0.00ns)   --->   "%sext_ln126_1 = sext i62 %trunc_ln126_1" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 191 'sext' 'sext_ln126_1' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_3 : Operation 192 [1/1] (0.00ns)   --->   "%gmem_addr_4 = getelementptr i32 %gmem, i64 %sext_ln126_1" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 192 'getelementptr' 'gmem_addr_4' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_3 : Operation 193 [7/8] (7.30ns)   --->   "%empty_25 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i64 3" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 193 'readreq' 'empty_25' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 194 [1/1] (0.78ns)   --->   "%tmp1 = add i10 %empty_27, i10 54" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 194 'add' 'tmp1' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 195 [1/1] (0.00ns)   --->   "%tmp1_cast = zext i10 %tmp1" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 195 'zext' 'tmp1_cast' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_4 : Operation 196 [1/1] (0.87ns)   --->   "%empty_28 = add i18 %tmp1_cast, i18 %phi_mul_read" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 196 'add' 'empty_28' <Predicate = (!icmp_ln68)> <Delay = 0.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 197 [1/1] (0.00ns)   --->   "%tmp_1 = bitconcatenate i20 @_ssdm_op_BitConcatenate.i20.i18.i2, i18 %empty_28, i2 0" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 197 'bitconcatenate' 'tmp_1' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_4 : Operation 198 [1/1] (0.00ns)   --->   "%p_cast11 = zext i20 %tmp_1" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 198 'zext' 'p_cast11' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_4 : Operation 199 [1/1] (1.08ns)   --->   "%empty_29 = add i64 %p_cast11, i64 %inp_img_read" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 199 'add' 'empty_29' <Predicate = (!icmp_ln68)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 200 [1/1] (0.00ns)   --->   "%p_cast9 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %empty_29, i32 2, i32 63" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 200 'partselect' 'p_cast9' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_4 : Operation 201 [1/1] (0.00ns)   --->   "%p_cast9_cast = sext i62 %p_cast9" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 201 'sext' 'p_cast9_cast' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_4 : Operation 202 [1/1] (0.00ns)   --->   "%gmem_addr_2 = getelementptr i32 %gmem, i64 %p_cast9_cast" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 202 'getelementptr' 'gmem_addr_2' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_4 : Operation 203 [6/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_3, i64 2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 203 'readreq' 'empty_34' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 204 [8/8] (7.30ns)   --->   "%empty_35 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_4, i64 2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 204 'readreq' 'empty_35' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 205 [6/8] (7.30ns)   --->   "%empty_25 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i64 3" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 205 'readreq' 'empty_25' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 206 [5/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_3, i64 2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 206 'readreq' 'empty_34' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 207 [7/8] (7.30ns)   --->   "%empty_35 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_4, i64 2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 207 'readreq' 'empty_35' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 208 [5/8] (7.30ns)   --->   "%empty_25 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i64 3" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 208 'readreq' 'empty_25' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 209 [8/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_2, i64 3" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 209 'readreq' 'empty_26' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 210 [4/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_3, i64 2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 210 'readreq' 'empty_34' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 211 [6/8] (7.30ns)   --->   "%empty_35 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_4, i64 2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 211 'readreq' 'empty_35' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 212 [4/8] (7.30ns)   --->   "%empty_25 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i64 3" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 212 'readreq' 'empty_25' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 213 [7/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_2, i64 3" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 213 'readreq' 'empty_26' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 214 [3/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_3, i64 2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 214 'readreq' 'empty_34' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 215 [5/8] (7.30ns)   --->   "%empty_35 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_4, i64 2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 215 'readreq' 'empty_35' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 216 [3/8] (7.30ns)   --->   "%empty_25 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i64 3" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 216 'readreq' 'empty_25' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 217 [6/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_2, i64 3" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 217 'readreq' 'empty_26' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 218 [2/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_3, i64 2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 218 'readreq' 'empty_34' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 219 [4/8] (7.30ns)   --->   "%empty_35 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_4, i64 2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 219 'readreq' 'empty_35' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 220 [2/8] (7.30ns)   --->   "%empty_25 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i64 3" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 220 'readreq' 'empty_25' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 221 [5/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_2, i64 3" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 221 'readreq' 'empty_26' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 222 [1/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_3, i64 2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 222 'readreq' 'empty_34' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 223 [3/8] (7.30ns)   --->   "%empty_35 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_4, i64 2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 223 'readreq' 'empty_35' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 224 [1/8] (7.30ns)   --->   "%empty_25 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i64 3" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 224 'readreq' 'empty_25' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 225 [4/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_2, i64 3" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 225 'readreq' 'empty_26' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 7.30>
ST_10 : Operation 226 [1/1] (7.30ns)   --->   "%gmem_addr_3_read = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr_3" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 226 'read' 'gmem_addr_3_read' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 227 [2/8] (7.30ns)   --->   "%empty_35 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_4, i64 2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 227 'readreq' 'empty_35' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 228 [1/1] (7.30ns)   --->   "%gmem_addr_1_read = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr_1" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 228 'read' 'gmem_addr_1_read' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 229 [3/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_2, i64 3" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 229 'readreq' 'empty_26' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 7.30>
ST_11 : Operation 230 [1/1] (7.30ns)   --->   "%gmem_addr_3_read_1 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr_3" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 230 'read' 'gmem_addr_3_read_1' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 231 [1/8] (7.30ns)   --->   "%empty_35 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_4, i64 2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 231 'readreq' 'empty_35' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 232 [1/1] (7.30ns)   --->   "%gmem_addr_1_read_1 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr_1" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 232 'read' 'gmem_addr_1_read_1' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 233 [2/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_2, i64 3" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 233 'readreq' 'empty_26' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 234 [1/1] (7.30ns)   --->   "%gmem_addr_4_read = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr_4" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 234 'read' 'gmem_addr_4_read' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 235 [1/1] (0.00ns)   --->   "%line_buffer_2D_21 = bitcast i32 %gmem_addr_4_read" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 235 'bitcast' 'line_buffer_2D_21' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_12 : Operation 236 [1/1] (7.30ns)   --->   "%gmem_addr_1_read_2 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr_1" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 236 'read' 'gmem_addr_1_read_2' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 237 [1/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_2, i64 3" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 237 'readreq' 'empty_26' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 7.30>
ST_13 : Operation 238 [1/1] (7.30ns)   --->   "%gmem_addr_4_read_1 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr_4" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 238 'read' 'gmem_addr_4_read_1' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 239 [1/1] (7.30ns)   --->   "%gmem_addr_2_read = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr_2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 239 'read' 'gmem_addr_2_read' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 7.30>
ST_14 : Operation 240 [1/1] (7.30ns)   --->   "%gmem_addr_2_read_1 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr_2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 240 'read' 'gmem_addr_2_read_1' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 7.30>
ST_15 : Operation 241 [1/1] (0.00ns)   --->   "%p_load86 = load i32 %empty_22"   --->   Operation 241 'load' 'p_load86' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 242 [1/1] (0.00ns)   --->   "%p_load85 = load i32 %empty_23"   --->   Operation 242 'load' 'p_load85' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 243 [1/1] (0.00ns)   --->   "%p_load = load i32 %empty_24"   --->   Operation 243 'load' 'p_load' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 244 [1/1] (0.00ns)   --->   "%mux_case_3_out_load = load i32 %mux_case_3_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 244 'load' 'mux_case_3_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 4)> <Delay = 0.00>
ST_15 : Operation 245 [1/1] (0.00ns)   --->   "%mux_case_5_out_load = load i32 %mux_case_5_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 245 'load' 'mux_case_5_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 6)> <Delay = 0.00>
ST_15 : Operation 246 [1/1] (0.00ns)   --->   "%mux_case_7_out_load = load i32 %mux_case_7_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 246 'load' 'mux_case_7_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 8)> <Delay = 0.00>
ST_15 : Operation 247 [1/1] (0.00ns)   --->   "%mux_case_9_out_load = load i32 %mux_case_9_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 247 'load' 'mux_case_9_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 10)> <Delay = 0.00>
ST_15 : Operation 248 [1/1] (0.00ns)   --->   "%mux_case_11_out_load = load i32 %mux_case_11_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 248 'load' 'mux_case_11_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 12)> <Delay = 0.00>
ST_15 : Operation 249 [1/1] (0.00ns)   --->   "%mux_case_13_out_load = load i32 %mux_case_13_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 249 'load' 'mux_case_13_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 14)> <Delay = 0.00>
ST_15 : Operation 250 [1/1] (0.00ns)   --->   "%mux_case_15_out_load = load i32 %mux_case_15_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 250 'load' 'mux_case_15_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 16)> <Delay = 0.00>
ST_15 : Operation 251 [1/1] (0.00ns)   --->   "%mux_case_17_out_load = load i32 %mux_case_17_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 251 'load' 'mux_case_17_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 18)> <Delay = 0.00>
ST_15 : Operation 252 [1/1] (0.00ns)   --->   "%mux_case_19_out_load = load i32 %mux_case_19_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 252 'load' 'mux_case_19_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 20)> <Delay = 0.00>
ST_15 : Operation 253 [1/1] (0.00ns)   --->   "%mux_case_21_out_load = load i32 %mux_case_21_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 253 'load' 'mux_case_21_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 22)> <Delay = 0.00>
ST_15 : Operation 254 [1/1] (0.00ns)   --->   "%mux_case_23_out_load = load i32 %mux_case_23_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 254 'load' 'mux_case_23_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 24)> <Delay = 0.00>
ST_15 : Operation 255 [1/1] (0.00ns)   --->   "%mux_case_25_out_load = load i32 %mux_case_25_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 255 'load' 'mux_case_25_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 26)> <Delay = 0.00>
ST_15 : Operation 256 [1/1] (0.00ns)   --->   "%mux_case_4_out_load = load i32 %mux_case_4_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 256 'load' 'mux_case_4_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 4)> <Delay = 0.00>
ST_15 : Operation 257 [1/1] (0.00ns)   --->   "%mux_case_6_out_load = load i32 %mux_case_6_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 257 'load' 'mux_case_6_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 6)> <Delay = 0.00>
ST_15 : Operation 258 [1/1] (0.00ns)   --->   "%mux_case_8_out_load = load i32 %mux_case_8_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 258 'load' 'mux_case_8_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 8)> <Delay = 0.00>
ST_15 : Operation 259 [1/1] (0.00ns)   --->   "%mux_case_10_out_load = load i32 %mux_case_10_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 259 'load' 'mux_case_10_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 10)> <Delay = 0.00>
ST_15 : Operation 260 [1/1] (0.00ns)   --->   "%mux_case_12_out_load = load i32 %mux_case_12_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 260 'load' 'mux_case_12_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 12)> <Delay = 0.00>
ST_15 : Operation 261 [1/1] (0.00ns)   --->   "%mux_case_14_out_load = load i32 %mux_case_14_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 261 'load' 'mux_case_14_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 14)> <Delay = 0.00>
ST_15 : Operation 262 [1/1] (0.00ns)   --->   "%mux_case_16_out_load = load i32 %mux_case_16_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 262 'load' 'mux_case_16_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 16)> <Delay = 0.00>
ST_15 : Operation 263 [1/1] (0.00ns)   --->   "%mux_case_18_out_load = load i32 %mux_case_18_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 263 'load' 'mux_case_18_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 18)> <Delay = 0.00>
ST_15 : Operation 264 [1/1] (0.00ns)   --->   "%mux_case_20_out_load = load i32 %mux_case_20_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 264 'load' 'mux_case_20_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 20)> <Delay = 0.00>
ST_15 : Operation 265 [1/1] (0.00ns)   --->   "%mux_case_22_out_load = load i32 %mux_case_22_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 265 'load' 'mux_case_22_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 22)> <Delay = 0.00>
ST_15 : Operation 266 [1/1] (0.00ns)   --->   "%mux_case_24_out_load = load i32 %mux_case_24_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 266 'load' 'mux_case_24_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 24)> <Delay = 0.00>
ST_15 : Operation 267 [1/1] (0.00ns)   --->   "%mux_case_26_out_load = load i32 %mux_case_26_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 267 'load' 'mux_case_26_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 26)> <Delay = 0.00>
ST_15 : Operation 268 [1/1] (0.72ns)   --->   "%line_buffer_2D_18 = sparsemux i32 @_ssdm_op_SparseMux.ap_auto.12float.float.i5, i5 4, i32 %mux_case_3_out_load, i5 6, i32 %mux_case_5_out_load, i5 8, i32 %mux_case_7_out_load, i5 10, i32 %mux_case_9_out_load, i5 12, i32 %mux_case_11_out_load, i5 14, i32 %mux_case_13_out_load, i5 16, i32 %mux_case_15_out_load, i5 18, i32 %mux_case_17_out_load, i5 20, i32 %mux_case_19_out_load, i5 22, i32 %mux_case_21_out_load, i5 24, i32 %mux_case_23_out_load, i5 26, i32 %mux_case_25_out_load, i32 <undef>, i5 %select_ln71_1" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 268 'sparsemux' 'line_buffer_2D_18' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.72> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 149 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 269 [1/1] (0.00ns)   --->   "%line_buffer_2D_19 = bitcast i32 %gmem_addr_3_read" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 269 'bitcast' 'line_buffer_2D_19' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_15 : Operation 270 [1/1] (0.00ns)   --->   "%line_buffer_2D_20 = bitcast i32 %gmem_addr_3_read_1" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 270 'bitcast' 'line_buffer_2D_20' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_15 : Operation 271 [1/1] (0.00ns)   --->   "%line_buffer_2D_22 = bitcast i32 %gmem_addr_4_read_1" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 271 'bitcast' 'line_buffer_2D_22' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_15 : Operation 272 [1/1] (0.72ns)   --->   "%line_buffer_2D_10 = sparsemux i32 @_ssdm_op_SparseMux.ap_auto.12float.float.i5, i5 4, i32 %mux_case_4_out_load, i5 6, i32 %mux_case_6_out_load, i5 8, i32 %mux_case_8_out_load, i5 10, i32 %mux_case_10_out_load, i5 12, i32 %mux_case_12_out_load, i5 14, i32 %mux_case_14_out_load, i5 16, i32 %mux_case_16_out_load, i5 18, i32 %mux_case_18_out_load, i5 20, i32 %mux_case_20_out_load, i5 22, i32 %mux_case_22_out_load, i5 24, i32 %mux_case_24_out_load, i5 26, i32 %mux_case_26_out_load, i32 <undef>, i5 %select_ln71_1" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 272 'sparsemux' 'line_buffer_2D_10' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.72> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 149 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 0.72> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 273 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_22_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 273 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 22)> <Delay = 0.42>
ST_15 : Operation 274 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_21_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 274 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 22)> <Delay = 0.42>
ST_15 : Operation 275 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:127]   --->   Operation 275 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 22)> <Delay = 0.42>
ST_15 : Operation 276 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_20_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 276 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 20)> <Delay = 0.42>
ST_15 : Operation 277 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_19_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 277 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 20)> <Delay = 0.42>
ST_15 : Operation 278 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:127]   --->   Operation 278 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 20)> <Delay = 0.42>
ST_15 : Operation 279 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_18_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 279 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 18)> <Delay = 0.42>
ST_15 : Operation 280 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_17_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 280 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 18)> <Delay = 0.42>
ST_15 : Operation 281 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:127]   --->   Operation 281 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 18)> <Delay = 0.42>
ST_15 : Operation 282 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_16_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 282 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 16)> <Delay = 0.42>
ST_15 : Operation 283 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_15_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 283 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 16)> <Delay = 0.42>
ST_15 : Operation 284 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:127]   --->   Operation 284 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 16)> <Delay = 0.42>
ST_15 : Operation 285 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_14_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 285 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 14)> <Delay = 0.42>
ST_15 : Operation 286 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_13_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 286 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 14)> <Delay = 0.42>
ST_15 : Operation 287 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:127]   --->   Operation 287 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 14)> <Delay = 0.42>
ST_15 : Operation 288 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_12_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 288 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 12)> <Delay = 0.42>
ST_15 : Operation 289 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_11_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 289 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 12)> <Delay = 0.42>
ST_15 : Operation 290 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:127]   --->   Operation 290 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 12)> <Delay = 0.42>
ST_15 : Operation 291 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_10_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 291 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 10)> <Delay = 0.42>
ST_15 : Operation 292 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_9_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 292 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 10)> <Delay = 0.42>
ST_15 : Operation 293 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:127]   --->   Operation 293 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 10)> <Delay = 0.42>
ST_15 : Operation 294 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_8_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 294 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 8)> <Delay = 0.42>
ST_15 : Operation 295 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_7_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 295 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 8)> <Delay = 0.42>
ST_15 : Operation 296 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:127]   --->   Operation 296 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 8)> <Delay = 0.42>
ST_15 : Operation 297 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_6_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 297 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 6)> <Delay = 0.42>
ST_15 : Operation 298 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_5_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 298 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 6)> <Delay = 0.42>
ST_15 : Operation 299 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:127]   --->   Operation 299 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 6)> <Delay = 0.42>
ST_15 : Operation 300 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_4_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 300 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 4)> <Delay = 0.42>
ST_15 : Operation 301 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_3_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 301 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 4)> <Delay = 0.42>
ST_15 : Operation 302 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:127]   --->   Operation 302 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 4)> <Delay = 0.42>
ST_15 : Operation 303 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_24_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 303 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 24)> <Delay = 0.42>
ST_15 : Operation 304 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_23_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 304 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 24)> <Delay = 0.42>
ST_15 : Operation 305 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:127]   --->   Operation 305 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 24)> <Delay = 0.42>
ST_15 : Operation 306 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_26_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 306 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 != 24 & select_ln71_1 != 4 & select_ln71_1 != 6 & select_ln71_1 != 8 & select_ln71_1 != 10 & select_ln71_1 != 12 & select_ln71_1 != 14 & select_ln71_1 != 16 & select_ln71_1 != 18 & select_ln71_1 != 20 & select_ln71_1 != 22)> <Delay = 0.42>
ST_15 : Operation 307 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_25_out" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:126]   --->   Operation 307 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 != 24 & select_ln71_1 != 4 & select_ln71_1 != 6 & select_ln71_1 != 8 & select_ln71_1 != 10 & select_ln71_1 != 12 & select_ln71_1 != 14 & select_ln71_1 != 16 & select_ln71_1 != 18 & select_ln71_1 != 20 & select_ln71_1 != 22)> <Delay = 0.42>
ST_15 : Operation 308 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:127]   --->   Operation 308 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 != 24 & select_ln71_1 != 4 & select_ln71_1 != 6 & select_ln71_1 != 8 & select_ln71_1 != 10 & select_ln71_1 != 12 & select_ln71_1 != 14 & select_ln71_1 != 16 & select_ln71_1 != 18 & select_ln71_1 != 20 & select_ln71_1 != 22)> <Delay = 0.42>
ST_15 : Operation 309 [1/1] (7.30ns)   --->   "%gmem_addr_2_read_2 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr_2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 309 'read' 'gmem_addr_2_read_2' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 3.20>
ST_16 : Operation 310 [1/1] (0.00ns)   --->   "%line_buffer_2D_4 = load i32 %line_buffer_2D"   --->   Operation 310 'load' 'line_buffer_2D_4' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 311 [1/1] (0.00ns)   --->   "%line_buffer_2D_5 = load i32 %line_buffer_2D_2"   --->   Operation 311 'load' 'line_buffer_2D_5' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 312 [1/1] (0.00ns)   --->   "%line_buffer_2D_3 = load i32 %line_buffer_2D_1"   --->   Operation 312 'load' 'line_buffer_2D_3' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 313 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %gmem"   --->   Operation 313 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 314 [1/1] (0.00ns)   --->   "%br_ln68 = br i1 %icmp_ln68, void %for.inc265, void %for.inc268.exitStub" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68]   --->   Operation 314 'br' 'br_ln68' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 315 [1/1] (0.00ns)   --->   "%line_buffer_2D_6 = bitcast i32 %gmem_addr_1_read" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 315 'bitcast' 'line_buffer_2D_6' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 0.00>
ST_16 : Operation 316 [1/1] (0.00ns)   --->   "%line_buffer_2D_7 = bitcast i32 %gmem_addr_1_read_1" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 316 'bitcast' 'line_buffer_2D_7' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 0.00>
ST_16 : Operation 317 [1/1] (0.00ns)   --->   "%line_buffer_2D_8 = bitcast i32 %gmem_addr_1_read_2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 317 'bitcast' 'line_buffer_2D_8' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 0.00>
ST_16 : Operation 318 [1/1] (0.00ns)   --->   "%line_buffer_2D_9 = bitcast i32 %gmem_addr_2_read" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 318 'bitcast' 'line_buffer_2D_9' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 0.00>
ST_16 : Operation 319 [1/1] (0.00ns)   --->   "%line_buffer_2D_16 = bitcast i32 %gmem_addr_2_read_1" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 319 'bitcast' 'line_buffer_2D_16' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 0.00>
ST_16 : Operation 320 [1/1] (0.00ns)   --->   "%line_buffer_2D_17 = bitcast i32 %gmem_addr_2_read_2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 320 'bitcast' 'line_buffer_2D_17' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 0.00>
ST_16 : Operation 321 [1/1] (0.42ns)   --->   "%store_ln42 = store i32 %line_buffer_2D_9, i32 %line_buffer_2D_1" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:42]   --->   Operation 321 'store' 'store_ln42' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 0.42>
ST_16 : Operation 322 [1/1] (0.42ns)   --->   "%store_ln42 = store i32 %line_buffer_2D_17, i32 %line_buffer_2D_2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:42]   --->   Operation 322 'store' 'store_ln42' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 0.42>
ST_16 : Operation 323 [1/1] (0.42ns)   --->   "%store_ln42 = store i32 %line_buffer_2D_16, i32 %line_buffer_2D" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:42]   --->   Operation 323 'store' 'store_ln42' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 0.42>
ST_16 : Operation 324 [1/1] (0.42ns)   --->   "%br_ln106 = br void %for.body232" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:106]   --->   Operation 324 'br' 'br_ln106' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 0.42>
ST_16 : Operation 325 [1/1] (0.00ns)   --->   "%tmp = phi i32 %line_buffer_2D_3, void %for.inc42, i32 %p_load86, void %arrayidx11811.1.case.26, i32 %p_load86, void %arrayidx11811.1.case.24, i32 %p_load86, void %arrayidx11811.1.case.20, i32 %p_load86, void %arrayidx11811.1.case.18, i32 %p_load86, void %arrayidx11811.1.case.16, i32 %p_load86, void %arrayidx11811.1.case.14, i32 %p_load86, void %arrayidx11811.1.case.12, i32 %p_load86, void %arrayidx11811.1.case.10, i32 %p_load86, void %arrayidx11811.1.case.8, i32 %p_load86, void %arrayidx11811.1.case.6, i32 %p_load86, void %arrayidx11811.1.case.4, i32 %p_load86, void %arrayidx1649.151.exit.for.body232_crit_edge"   --->   Operation 325 'phi' 'tmp' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_16 : Operation 326 [2/2] (2.78ns)   --->   "%tmp_5 = fcmp_ogt  i32 %tmp, i32 0" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 326 'fcmp' 'tmp_5' <Predicate = (!icmp_ln68)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 6.01>
ST_17 : Operation 327 [1/1] (0.00ns)   --->   "%tmp_16 = phi i32 %line_buffer_2D_17, void %for.inc42, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.26, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.24, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.20, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.18, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.16, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.14, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.12, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.10, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.8, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.6, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.4, i32 %line_buffer_2D_22, void %arrayidx1649.151.exit.for.body232_crit_edge"   --->   Operation 327 'phi' 'tmp_16' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_17 : Operation 328 [1/1] (0.00ns)   --->   "%tmp_14 = phi i32 %line_buffer_2D_16, void %for.inc42, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.26, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.24, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.20, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.18, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.16, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.14, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.12, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.10, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.8, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.6, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.4, i32 %line_buffer_2D_21, void %arrayidx1649.151.exit.for.body232_crit_edge"   --->   Operation 328 'phi' 'tmp_14' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_17 : Operation 329 [1/1] (0.00ns)   --->   "%tmp_12 = phi i32 %line_buffer_2D_9, void %for.inc42, i32 %p_load, void %arrayidx11811.1.case.26, i32 %p_load, void %arrayidx11811.1.case.24, i32 %p_load, void %arrayidx11811.1.case.20, i32 %p_load, void %arrayidx11811.1.case.18, i32 %p_load, void %arrayidx11811.1.case.16, i32 %p_load, void %arrayidx11811.1.case.14, i32 %p_load, void %arrayidx11811.1.case.12, i32 %p_load, void %arrayidx11811.1.case.10, i32 %p_load, void %arrayidx11811.1.case.8, i32 %p_load, void %arrayidx11811.1.case.6, i32 %p_load, void %arrayidx11811.1.case.4, i32 %p_load, void %arrayidx1649.151.exit.for.body232_crit_edge"   --->   Operation 329 'phi' 'tmp_12' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_17 : Operation 330 [1/1] (0.00ns)   --->   "%tmp_10 = phi i32 %line_buffer_2D_8, void %for.inc42, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.26, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.24, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.20, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.18, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.16, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.14, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.12, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.10, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.8, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.6, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.4, i32 %line_buffer_2D_20, void %arrayidx1649.151.exit.for.body232_crit_edge"   --->   Operation 330 'phi' 'tmp_10' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_17 : Operation 331 [1/1] (0.00ns)   --->   "%tmp_8 = phi i32 %line_buffer_2D_7, void %for.inc42, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.26, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.24, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.20, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.18, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.16, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.14, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.12, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.10, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.8, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.6, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.4, i32 %line_buffer_2D_19, void %arrayidx1649.151.exit.for.body232_crit_edge"   --->   Operation 331 'phi' 'tmp_8' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_17 : Operation 332 [1/1] (0.00ns)   --->   "%tmp_6 = phi i32 %line_buffer_2D_6, void %for.inc42, i32 %p_load85, void %arrayidx11811.1.case.26, i32 %p_load85, void %arrayidx11811.1.case.24, i32 %p_load85, void %arrayidx11811.1.case.20, i32 %p_load85, void %arrayidx11811.1.case.18, i32 %p_load85, void %arrayidx11811.1.case.16, i32 %p_load85, void %arrayidx11811.1.case.14, i32 %p_load85, void %arrayidx11811.1.case.12, i32 %p_load85, void %arrayidx11811.1.case.10, i32 %p_load85, void %arrayidx11811.1.case.8, i32 %p_load85, void %arrayidx11811.1.case.6, i32 %p_load85, void %arrayidx11811.1.case.4, i32 %p_load85, void %arrayidx1649.151.exit.for.body232_crit_edge"   --->   Operation 332 'phi' 'tmp_6' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_17 : Operation 333 [1/1] (0.00ns)   --->   "%tmp_2 = phi i32 %line_buffer_2D_4, void %for.inc42, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.26, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.24, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.20, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.18, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.16, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.14, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.12, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.10, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.8, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.6, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.4, i32 %line_buffer_2D_18, void %arrayidx1649.151.exit.for.body232_crit_edge"   --->   Operation 333 'phi' 'tmp_2' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_17 : Operation 334 [1/1] (0.00ns)   --->   "%bitcast_ln156 = bitcast i32 %tmp" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 334 'bitcast' 'bitcast_ln156' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_17 : Operation 335 [1/1] (0.00ns)   --->   "%tmp_s = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 335 'partselect' 'tmp_s' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_17 : Operation 336 [1/1] (0.00ns)   --->   "%trunc_ln156 = trunc i32 %bitcast_ln156" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 336 'trunc' 'trunc_ln156' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_17 : Operation 337 [1/1] (0.76ns)   --->   "%icmp_ln156 = icmp_ne  i8 %tmp_s, i8 255" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 337 'icmp' 'icmp_ln156' <Predicate = (!icmp_ln68)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 338 [1/1] (0.92ns)   --->   "%icmp_ln156_1 = icmp_eq  i23 %trunc_ln156, i23 0" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 338 'icmp' 'icmp_ln156_1' <Predicate = (!icmp_ln68)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 339 [1/1] (0.00ns) (grouped into LUT with out node tmp_48)   --->   "%or_ln156 = or i1 %icmp_ln156_1, i1 %icmp_ln156" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 339 'or' 'or_ln156' <Predicate = (!icmp_ln68)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 340 [1/2] (2.78ns)   --->   "%tmp_5 = fcmp_ogt  i32 %tmp, i32 0" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 340 'fcmp' 'tmp_5' <Predicate = (!icmp_ln68)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 341 [1/1] (0.00ns) (grouped into LUT with out node tmp_48)   --->   "%and_ln156 = and i1 %or_ln156, i1 %tmp_5" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 341 'and' 'and_ln156' <Predicate = (!icmp_ln68)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 342 [1/1] (0.44ns) (out node of the LUT)   --->   "%tmp_48 = select i1 %and_ln156, i32 %tmp, i32 0" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 342 'select' 'tmp_48' <Predicate = (!icmp_ln68)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_17 : Operation 343 [2/2] (2.78ns)   --->   "%tmp_11 = fcmp_ogt  i32 %tmp_2, i32 %tmp_48" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 343 'fcmp' 'tmp_11' <Predicate = (!icmp_ln68)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 344 [1/1] (0.42ns)   --->   "%store_ln91 = store i32 %tmp_16, i32 %empty_24" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 344 'store' 'store_ln91' <Predicate = (!icmp_ln68)> <Delay = 0.42>
ST_17 : Operation 345 [1/1] (0.42ns)   --->   "%store_ln91 = store i32 %tmp_10, i32 %empty_23" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91]   --->   Operation 345 'store' 'store_ln91' <Predicate = (!icmp_ln68)> <Delay = 0.42>

State 18 <SV = 17> <Delay = 6.30>
ST_18 : Operation 346 [1/1] (0.00ns)   --->   "%tmp_4 = phi i32 %line_buffer_2D_5, void %for.inc42, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.26, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.24, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.20, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.18, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.16, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.14, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.12, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.10, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.8, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.6, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.4, i32 %line_buffer_2D_10, void %arrayidx1649.151.exit.for.body232_crit_edge"   --->   Operation 346 'phi' 'tmp_4' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_18 : Operation 347 [1/1] (0.00ns)   --->   "%bitcast_ln156_1 = bitcast i32 %tmp_2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 347 'bitcast' 'bitcast_ln156_1' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_18 : Operation 348 [1/1] (0.00ns)   --->   "%tmp_9 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_1, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 348 'partselect' 'tmp_9' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_18 : Operation 349 [1/1] (0.00ns)   --->   "%trunc_ln156_1 = trunc i32 %bitcast_ln156_1" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 349 'trunc' 'trunc_ln156_1' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_18 : Operation 350 [1/1] (0.00ns)   --->   "%bitcast_ln156_2 = bitcast i32 %tmp_48" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 350 'bitcast' 'bitcast_ln156_2' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_18 : Operation 351 [1/1] (0.00ns)   --->   "%tmp_7 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_2, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 351 'partselect' 'tmp_7' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_18 : Operation 352 [1/1] (0.00ns)   --->   "%trunc_ln156_2 = trunc i32 %bitcast_ln156_2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 352 'trunc' 'trunc_ln156_2' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_18 : Operation 353 [1/1] (0.76ns)   --->   "%icmp_ln156_2 = icmp_ne  i8 %tmp_9, i8 255" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 353 'icmp' 'icmp_ln156_2' <Predicate = (!icmp_ln68)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 354 [1/1] (0.92ns)   --->   "%icmp_ln156_3 = icmp_eq  i23 %trunc_ln156_1, i23 0" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 354 'icmp' 'icmp_ln156_3' <Predicate = (!icmp_ln68)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 355 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_2)   --->   "%or_ln156_1 = or i1 %icmp_ln156_3, i1 %icmp_ln156_2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 355 'or' 'or_ln156_1' <Predicate = (!icmp_ln68)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 356 [1/1] (0.76ns)   --->   "%icmp_ln156_4 = icmp_ne  i8 %tmp_7, i8 255" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 356 'icmp' 'icmp_ln156_4' <Predicate = (!icmp_ln68)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 357 [1/1] (0.92ns)   --->   "%icmp_ln156_5 = icmp_eq  i23 %trunc_ln156_2, i23 0" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 357 'icmp' 'icmp_ln156_5' <Predicate = (!icmp_ln68)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 358 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_2)   --->   "%or_ln156_2 = or i1 %icmp_ln156_5, i1 %icmp_ln156_4" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 358 'or' 'or_ln156_2' <Predicate = (!icmp_ln68)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 359 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_2)   --->   "%and_ln156_1 = and i1 %or_ln156_1, i1 %or_ln156_2" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 359 'and' 'and_ln156_1' <Predicate = (!icmp_ln68)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 360 [1/2] (2.78ns)   --->   "%tmp_11 = fcmp_ogt  i32 %tmp_2, i32 %tmp_48" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 360 'fcmp' 'tmp_11' <Predicate = (!icmp_ln68)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 361 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln156_2 = and i1 %and_ln156_1, i1 %tmp_11" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 361 'and' 'and_ln156_2' <Predicate = (!icmp_ln68)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 362 [1/1] (0.44ns) (out node of the LUT)   --->   "%tmp_49 = select i1 %and_ln156_2, i32 %tmp_2, i32 %tmp_48" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 362 'select' 'tmp_49' <Predicate = (!icmp_ln68)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 363 [2/2] (2.78ns)   --->   "%tmp_17 = fcmp_ogt  i32 %tmp_4, i32 %tmp_49" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 363 'fcmp' 'tmp_17' <Predicate = (!icmp_ln68)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 364 [1/1] (0.42ns)   --->   "%store_ln114 = store i32 %tmp_4, i32 %empty_22" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:114]   --->   Operation 364 'store' 'store_ln114' <Predicate = (!icmp_ln68)> <Delay = 0.42>

State 19 <SV = 18> <Delay = 6.30>
ST_19 : Operation 365 [1/1] (0.00ns)   --->   "%bitcast_ln156_3 = bitcast i32 %tmp_4" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 365 'bitcast' 'bitcast_ln156_3' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 366 [1/1] (0.00ns)   --->   "%tmp_13 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_3, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 366 'partselect' 'tmp_13' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 367 [1/1] (0.00ns)   --->   "%trunc_ln156_3 = trunc i32 %bitcast_ln156_3" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 367 'trunc' 'trunc_ln156_3' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 368 [1/1] (0.00ns)   --->   "%bitcast_ln156_4 = bitcast i32 %tmp_49" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 368 'bitcast' 'bitcast_ln156_4' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 369 [1/1] (0.00ns)   --->   "%tmp_15 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_4, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 369 'partselect' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 370 [1/1] (0.00ns)   --->   "%trunc_ln156_4 = trunc i32 %bitcast_ln156_4" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 370 'trunc' 'trunc_ln156_4' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 371 [1/1] (0.76ns)   --->   "%icmp_ln156_6 = icmp_ne  i8 %tmp_13, i8 255" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 371 'icmp' 'icmp_ln156_6' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 372 [1/1] (0.92ns)   --->   "%icmp_ln156_7 = icmp_eq  i23 %trunc_ln156_3, i23 0" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 372 'icmp' 'icmp_ln156_7' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 373 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_4)   --->   "%or_ln156_3 = or i1 %icmp_ln156_7, i1 %icmp_ln156_6" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 373 'or' 'or_ln156_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 374 [1/1] (0.76ns)   --->   "%icmp_ln156_8 = icmp_ne  i8 %tmp_15, i8 255" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 374 'icmp' 'icmp_ln156_8' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 375 [1/1] (0.92ns)   --->   "%icmp_ln156_9 = icmp_eq  i23 %trunc_ln156_4, i23 0" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 375 'icmp' 'icmp_ln156_9' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 376 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_4)   --->   "%or_ln156_4 = or i1 %icmp_ln156_9, i1 %icmp_ln156_8" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 376 'or' 'or_ln156_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 377 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_4)   --->   "%and_ln156_3 = and i1 %or_ln156_3, i1 %or_ln156_4" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 377 'and' 'and_ln156_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 378 [1/2] (2.78ns)   --->   "%tmp_17 = fcmp_ogt  i32 %tmp_4, i32 %tmp_49" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 378 'fcmp' 'tmp_17' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 379 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln156_4 = and i1 %and_ln156_3, i1 %tmp_17" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 379 'and' 'and_ln156_4' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 380 [1/1] (0.44ns) (out node of the LUT)   --->   "%tmp_50 = select i1 %and_ln156_4, i32 %tmp_4, i32 %tmp_49" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 380 'select' 'tmp_50' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_19 : Operation 381 [2/2] (2.78ns)   --->   "%tmp_20 = fcmp_ogt  i32 %tmp_6, i32 %tmp_50" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 381 'fcmp' 'tmp_20' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 6.30>
ST_20 : Operation 382 [1/1] (0.00ns)   --->   "%bitcast_ln156_5 = bitcast i32 %tmp_6" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 382 'bitcast' 'bitcast_ln156_5' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 383 [1/1] (0.00ns)   --->   "%tmp_18 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_5, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 383 'partselect' 'tmp_18' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 384 [1/1] (0.00ns)   --->   "%trunc_ln156_5 = trunc i32 %bitcast_ln156_5" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 384 'trunc' 'trunc_ln156_5' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 385 [1/1] (0.00ns)   --->   "%bitcast_ln156_6 = bitcast i32 %tmp_50" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 385 'bitcast' 'bitcast_ln156_6' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 386 [1/1] (0.00ns)   --->   "%tmp_19 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_6, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 386 'partselect' 'tmp_19' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 387 [1/1] (0.00ns)   --->   "%trunc_ln156_6 = trunc i32 %bitcast_ln156_6" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 387 'trunc' 'trunc_ln156_6' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 388 [1/1] (0.76ns)   --->   "%icmp_ln156_10 = icmp_ne  i8 %tmp_18, i8 255" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 388 'icmp' 'icmp_ln156_10' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 389 [1/1] (0.92ns)   --->   "%icmp_ln156_11 = icmp_eq  i23 %trunc_ln156_5, i23 0" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 389 'icmp' 'icmp_ln156_11' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 390 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_6)   --->   "%or_ln156_5 = or i1 %icmp_ln156_11, i1 %icmp_ln156_10" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 390 'or' 'or_ln156_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 391 [1/1] (0.76ns)   --->   "%icmp_ln156_12 = icmp_ne  i8 %tmp_19, i8 255" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 391 'icmp' 'icmp_ln156_12' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 392 [1/1] (0.92ns)   --->   "%icmp_ln156_13 = icmp_eq  i23 %trunc_ln156_6, i23 0" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 392 'icmp' 'icmp_ln156_13' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 393 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_6)   --->   "%or_ln156_6 = or i1 %icmp_ln156_13, i1 %icmp_ln156_12" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 393 'or' 'or_ln156_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 394 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_6)   --->   "%and_ln156_5 = and i1 %or_ln156_5, i1 %or_ln156_6" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 394 'and' 'and_ln156_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 395 [1/2] (2.78ns)   --->   "%tmp_20 = fcmp_ogt  i32 %tmp_6, i32 %tmp_50" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 395 'fcmp' 'tmp_20' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 396 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln156_6 = and i1 %and_ln156_5, i1 %tmp_20" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 396 'and' 'and_ln156_6' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 397 [1/1] (0.44ns) (out node of the LUT)   --->   "%tmp_51 = select i1 %and_ln156_6, i32 %tmp_6, i32 %tmp_50" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 397 'select' 'tmp_51' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 398 [2/2] (2.78ns)   --->   "%tmp_23 = fcmp_ogt  i32 %tmp_8, i32 %tmp_51" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 398 'fcmp' 'tmp_23' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 491 [1/1] (0.00ns)   --->   "%store_ln0 = store i32 %line_buffer_2D_3, i32 %line_buffer_2D_1_out"   --->   Operation 491 'store' 'store_ln0' <Predicate = (icmp_ln68)> <Delay = 0.00>
ST_20 : Operation 492 [1/1] (0.00ns)   --->   "%store_ln0 = store i32 %line_buffer_2D_5, i32 %line_buffer_2D_3_out"   --->   Operation 492 'store' 'store_ln0' <Predicate = (icmp_ln68)> <Delay = 0.00>
ST_20 : Operation 493 [1/1] (0.00ns)   --->   "%store_ln0 = store i32 %line_buffer_2D_4, i32 %line_buffer_2D_2_out"   --->   Operation 493 'store' 'store_ln0' <Predicate = (icmp_ln68)> <Delay = 0.00>
ST_20 : Operation 494 [1/1] (0.00ns)   --->   "%store_ln0 = store i32 %p_load, i32 %p_out"   --->   Operation 494 'store' 'store_ln0' <Predicate = (icmp_ln68)> <Delay = 0.00>
ST_20 : Operation 495 [1/1] (0.00ns)   --->   "%store_ln0 = store i32 %p_load85, i32 %p_out1"   --->   Operation 495 'store' 'store_ln0' <Predicate = (icmp_ln68)> <Delay = 0.00>
ST_20 : Operation 496 [1/1] (0.00ns)   --->   "%store_ln0 = store i32 %p_load86, i32 %p_out2"   --->   Operation 496 'store' 'store_ln0' <Predicate = (icmp_ln68)> <Delay = 0.00>
ST_20 : Operation 497 [1/1] (0.42ns)   --->   "%ret_ln0 = ret"   --->   Operation 497 'ret' 'ret_ln0' <Predicate = (icmp_ln68)> <Delay = 0.42>

State 21 <SV = 20> <Delay = 6.30>
ST_21 : Operation 399 [1/1] (0.00ns)   --->   "%bitcast_ln156_7 = bitcast i32 %tmp_8" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 399 'bitcast' 'bitcast_ln156_7' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 400 [1/1] (0.00ns)   --->   "%tmp_21 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_7, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 400 'partselect' 'tmp_21' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 401 [1/1] (0.00ns)   --->   "%trunc_ln156_7 = trunc i32 %bitcast_ln156_7" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 401 'trunc' 'trunc_ln156_7' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 402 [1/1] (0.00ns)   --->   "%bitcast_ln156_8 = bitcast i32 %tmp_51" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 402 'bitcast' 'bitcast_ln156_8' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 403 [1/1] (0.00ns)   --->   "%tmp_22 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_8, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 403 'partselect' 'tmp_22' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 404 [1/1] (0.00ns)   --->   "%trunc_ln156_8 = trunc i32 %bitcast_ln156_8" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 404 'trunc' 'trunc_ln156_8' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 405 [1/1] (0.76ns)   --->   "%icmp_ln156_14 = icmp_ne  i8 %tmp_21, i8 255" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 405 'icmp' 'icmp_ln156_14' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 406 [1/1] (0.92ns)   --->   "%icmp_ln156_15 = icmp_eq  i23 %trunc_ln156_7, i23 0" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 406 'icmp' 'icmp_ln156_15' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 407 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_8)   --->   "%or_ln156_7 = or i1 %icmp_ln156_15, i1 %icmp_ln156_14" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 407 'or' 'or_ln156_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 408 [1/1] (0.76ns)   --->   "%icmp_ln156_16 = icmp_ne  i8 %tmp_22, i8 255" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 408 'icmp' 'icmp_ln156_16' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 409 [1/1] (0.92ns)   --->   "%icmp_ln156_17 = icmp_eq  i23 %trunc_ln156_8, i23 0" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 409 'icmp' 'icmp_ln156_17' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 410 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_8)   --->   "%or_ln156_8 = or i1 %icmp_ln156_17, i1 %icmp_ln156_16" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 410 'or' 'or_ln156_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 411 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_8)   --->   "%and_ln156_7 = and i1 %or_ln156_7, i1 %or_ln156_8" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 411 'and' 'and_ln156_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 412 [1/2] (2.78ns)   --->   "%tmp_23 = fcmp_ogt  i32 %tmp_8, i32 %tmp_51" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 412 'fcmp' 'tmp_23' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 413 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln156_8 = and i1 %and_ln156_7, i1 %tmp_23" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 413 'and' 'and_ln156_8' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 414 [1/1] (0.44ns) (out node of the LUT)   --->   "%tmp_52 = select i1 %and_ln156_8, i32 %tmp_8, i32 %tmp_51" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 414 'select' 'tmp_52' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_21 : Operation 415 [2/2] (2.78ns)   --->   "%tmp_26 = fcmp_ogt  i32 %tmp_10, i32 %tmp_52" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 415 'fcmp' 'tmp_26' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 21> <Delay = 6.30>
ST_22 : Operation 416 [1/1] (0.00ns)   --->   "%bitcast_ln156_9 = bitcast i32 %tmp_10" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 416 'bitcast' 'bitcast_ln156_9' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 417 [1/1] (0.00ns)   --->   "%tmp_24 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_9, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 417 'partselect' 'tmp_24' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 418 [1/1] (0.00ns)   --->   "%trunc_ln156_9 = trunc i32 %bitcast_ln156_9" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 418 'trunc' 'trunc_ln156_9' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 419 [1/1] (0.00ns)   --->   "%bitcast_ln156_10 = bitcast i32 %tmp_52" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 419 'bitcast' 'bitcast_ln156_10' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 420 [1/1] (0.00ns)   --->   "%tmp_25 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_10, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 420 'partselect' 'tmp_25' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 421 [1/1] (0.00ns)   --->   "%trunc_ln156_10 = trunc i32 %bitcast_ln156_10" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 421 'trunc' 'trunc_ln156_10' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 422 [1/1] (0.76ns)   --->   "%icmp_ln156_18 = icmp_ne  i8 %tmp_24, i8 255" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 422 'icmp' 'icmp_ln156_18' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 423 [1/1] (0.92ns)   --->   "%icmp_ln156_19 = icmp_eq  i23 %trunc_ln156_9, i23 0" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 423 'icmp' 'icmp_ln156_19' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 424 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_10)   --->   "%or_ln156_9 = or i1 %icmp_ln156_19, i1 %icmp_ln156_18" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 424 'or' 'or_ln156_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 425 [1/1] (0.76ns)   --->   "%icmp_ln156_20 = icmp_ne  i8 %tmp_25, i8 255" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 425 'icmp' 'icmp_ln156_20' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 426 [1/1] (0.92ns)   --->   "%icmp_ln156_21 = icmp_eq  i23 %trunc_ln156_10, i23 0" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 426 'icmp' 'icmp_ln156_21' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 427 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_10)   --->   "%or_ln156_10 = or i1 %icmp_ln156_21, i1 %icmp_ln156_20" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 427 'or' 'or_ln156_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 428 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_10)   --->   "%and_ln156_9 = and i1 %or_ln156_9, i1 %or_ln156_10" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 428 'and' 'and_ln156_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 429 [1/2] (2.78ns)   --->   "%tmp_26 = fcmp_ogt  i32 %tmp_10, i32 %tmp_52" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 429 'fcmp' 'tmp_26' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 430 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln156_10 = and i1 %and_ln156_9, i1 %tmp_26" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 430 'and' 'and_ln156_10' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 431 [1/1] (0.44ns) (out node of the LUT)   --->   "%tmp_53 = select i1 %and_ln156_10, i32 %tmp_10, i32 %tmp_52" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 431 'select' 'tmp_53' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_22 : Operation 432 [2/2] (2.78ns)   --->   "%tmp_29 = fcmp_ogt  i32 %tmp_12, i32 %tmp_53" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 432 'fcmp' 'tmp_29' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 6.30>
ST_23 : Operation 433 [1/1] (0.00ns)   --->   "%bitcast_ln156_11 = bitcast i32 %tmp_12" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 433 'bitcast' 'bitcast_ln156_11' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 434 [1/1] (0.00ns)   --->   "%tmp_27 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_11, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 434 'partselect' 'tmp_27' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 435 [1/1] (0.00ns)   --->   "%trunc_ln156_11 = trunc i32 %bitcast_ln156_11" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 435 'trunc' 'trunc_ln156_11' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 436 [1/1] (0.00ns)   --->   "%bitcast_ln156_12 = bitcast i32 %tmp_53" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 436 'bitcast' 'bitcast_ln156_12' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 437 [1/1] (0.00ns)   --->   "%tmp_28 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_12, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 437 'partselect' 'tmp_28' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 438 [1/1] (0.00ns)   --->   "%trunc_ln156_12 = trunc i32 %bitcast_ln156_12" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 438 'trunc' 'trunc_ln156_12' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 439 [1/1] (0.76ns)   --->   "%icmp_ln156_22 = icmp_ne  i8 %tmp_27, i8 255" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 439 'icmp' 'icmp_ln156_22' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 440 [1/1] (0.92ns)   --->   "%icmp_ln156_23 = icmp_eq  i23 %trunc_ln156_11, i23 0" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 440 'icmp' 'icmp_ln156_23' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 441 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_12)   --->   "%or_ln156_11 = or i1 %icmp_ln156_23, i1 %icmp_ln156_22" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 441 'or' 'or_ln156_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 442 [1/1] (0.76ns)   --->   "%icmp_ln156_24 = icmp_ne  i8 %tmp_28, i8 255" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 442 'icmp' 'icmp_ln156_24' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 443 [1/1] (0.92ns)   --->   "%icmp_ln156_25 = icmp_eq  i23 %trunc_ln156_12, i23 0" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 443 'icmp' 'icmp_ln156_25' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 444 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_12)   --->   "%or_ln156_12 = or i1 %icmp_ln156_25, i1 %icmp_ln156_24" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 444 'or' 'or_ln156_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 445 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_12)   --->   "%and_ln156_11 = and i1 %or_ln156_11, i1 %or_ln156_12" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 445 'and' 'and_ln156_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 446 [1/2] (2.78ns)   --->   "%tmp_29 = fcmp_ogt  i32 %tmp_12, i32 %tmp_53" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 446 'fcmp' 'tmp_29' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 447 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln156_12 = and i1 %and_ln156_11, i1 %tmp_29" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 447 'and' 'and_ln156_12' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 448 [1/1] (0.44ns) (out node of the LUT)   --->   "%tmp_54 = select i1 %and_ln156_12, i32 %tmp_12, i32 %tmp_53" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 448 'select' 'tmp_54' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_23 : Operation 449 [2/2] (2.78ns)   --->   "%tmp_32 = fcmp_ogt  i32 %tmp_14, i32 %tmp_54" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 449 'fcmp' 'tmp_32' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 6.30>
ST_24 : Operation 450 [1/1] (0.00ns)   --->   "%bitcast_ln156_13 = bitcast i32 %tmp_14" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 450 'bitcast' 'bitcast_ln156_13' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 451 [1/1] (0.00ns)   --->   "%tmp_30 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_13, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 451 'partselect' 'tmp_30' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 452 [1/1] (0.00ns)   --->   "%trunc_ln156_13 = trunc i32 %bitcast_ln156_13" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 452 'trunc' 'trunc_ln156_13' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 453 [1/1] (0.00ns)   --->   "%bitcast_ln156_14 = bitcast i32 %tmp_54" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 453 'bitcast' 'bitcast_ln156_14' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 454 [1/1] (0.00ns)   --->   "%tmp_31 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_14, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 454 'partselect' 'tmp_31' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 455 [1/1] (0.00ns)   --->   "%trunc_ln156_14 = trunc i32 %bitcast_ln156_14" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 455 'trunc' 'trunc_ln156_14' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 456 [1/1] (0.76ns)   --->   "%icmp_ln156_26 = icmp_ne  i8 %tmp_30, i8 255" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 456 'icmp' 'icmp_ln156_26' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 457 [1/1] (0.92ns)   --->   "%icmp_ln156_27 = icmp_eq  i23 %trunc_ln156_13, i23 0" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 457 'icmp' 'icmp_ln156_27' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 458 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_14)   --->   "%or_ln156_13 = or i1 %icmp_ln156_27, i1 %icmp_ln156_26" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 458 'or' 'or_ln156_13' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 459 [1/1] (0.76ns)   --->   "%icmp_ln156_28 = icmp_ne  i8 %tmp_31, i8 255" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 459 'icmp' 'icmp_ln156_28' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 460 [1/1] (0.92ns)   --->   "%icmp_ln156_29 = icmp_eq  i23 %trunc_ln156_14, i23 0" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 460 'icmp' 'icmp_ln156_29' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 461 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_14)   --->   "%or_ln156_14 = or i1 %icmp_ln156_29, i1 %icmp_ln156_28" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 461 'or' 'or_ln156_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 462 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_14)   --->   "%and_ln156_13 = and i1 %or_ln156_13, i1 %or_ln156_14" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 462 'and' 'and_ln156_13' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 463 [1/2] (2.78ns)   --->   "%tmp_32 = fcmp_ogt  i32 %tmp_14, i32 %tmp_54" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 463 'fcmp' 'tmp_32' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 464 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln156_14 = and i1 %and_ln156_13, i1 %tmp_32" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 464 'and' 'and_ln156_14' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 465 [1/1] (0.44ns) (out node of the LUT)   --->   "%tmp_55 = select i1 %and_ln156_14, i32 %tmp_14, i32 %tmp_54" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 465 'select' 'tmp_55' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 466 [2/2] (2.78ns)   --->   "%tmp_35 = fcmp_ogt  i32 %tmp_16, i32 %tmp_55" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 466 'fcmp' 'tmp_35' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 3.51>
ST_25 : Operation 467 [1/1] (0.00ns)   --->   "%bitcast_ln156_15 = bitcast i32 %tmp_16" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 467 'bitcast' 'bitcast_ln156_15' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 468 [1/1] (0.00ns)   --->   "%tmp_33 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_15, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 468 'partselect' 'tmp_33' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 469 [1/1] (0.00ns)   --->   "%trunc_ln156_15 = trunc i32 %bitcast_ln156_15" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 469 'trunc' 'trunc_ln156_15' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 470 [1/1] (0.00ns)   --->   "%bitcast_ln156_16 = bitcast i32 %tmp_55" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 470 'bitcast' 'bitcast_ln156_16' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 471 [1/1] (0.00ns)   --->   "%tmp_34 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_16, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 471 'partselect' 'tmp_34' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 472 [1/1] (0.00ns)   --->   "%trunc_ln156_16 = trunc i32 %bitcast_ln156_16" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 472 'trunc' 'trunc_ln156_16' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 473 [1/1] (0.76ns)   --->   "%icmp_ln156_30 = icmp_ne  i8 %tmp_33, i8 255" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 473 'icmp' 'icmp_ln156_30' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 474 [1/1] (0.92ns)   --->   "%icmp_ln156_31 = icmp_eq  i23 %trunc_ln156_15, i23 0" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 474 'icmp' 'icmp_ln156_31' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 475 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_16)   --->   "%or_ln156_15 = or i1 %icmp_ln156_31, i1 %icmp_ln156_30" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 475 'or' 'or_ln156_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 476 [1/1] (0.76ns)   --->   "%icmp_ln156_32 = icmp_ne  i8 %tmp_34, i8 255" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 476 'icmp' 'icmp_ln156_32' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 477 [1/1] (0.92ns)   --->   "%icmp_ln156_33 = icmp_eq  i23 %trunc_ln156_16, i23 0" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 477 'icmp' 'icmp_ln156_33' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 478 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_16)   --->   "%or_ln156_16 = or i1 %icmp_ln156_33, i1 %icmp_ln156_32" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 478 'or' 'or_ln156_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 479 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_16)   --->   "%and_ln156_15 = and i1 %or_ln156_15, i1 %or_ln156_16" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 479 'and' 'and_ln156_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 480 [1/2] (2.78ns)   --->   "%tmp_35 = fcmp_ogt  i32 %tmp_16, i32 %tmp_55" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 480 'fcmp' 'tmp_35' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 481 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln156_16 = and i1 %and_ln156_15, i1 %tmp_35" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 481 'and' 'and_ln156_16' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 482 [1/1] (0.44ns) (out node of the LUT)   --->   "%tmp_56 = select i1 %and_ln156_16, i32 %tmp_16, i32 %tmp_55" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156]   --->   Operation 482 'select' 'tmp_56' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 26 <SV = 25> <Delay = 7.30>
ST_26 : Operation 483 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i32 %gmem, i64 %sext_ln51_cast" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:51]   --->   Operation 483 'getelementptr' 'gmem_addr' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_26 : Operation 484 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @L5_L6_str"   --->   Operation 484 'specloopname' 'specloopname_ln0' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_26 : Operation 485 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 169, i64 169, i64 169"   --->   Operation 485 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_26 : Operation 486 [1/1] (0.00ns)   --->   "%specpipeline_ln73 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_11" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:73]   --->   Operation 486 'specpipeline' 'specpipeline_ln73' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_26 : Operation 487 [1/1] (0.00ns)   --->   "%br_ln76 = br i1 %icmp_ln76, void %L15, void %for.inc42" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:76]   --->   Operation 487 'br' 'br_ln76' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_26 : Operation 488 [1/1] (0.00ns)   --->   "%bitcast_ln160 = bitcast i32 %tmp_56" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:160]   --->   Operation 488 'bitcast' 'bitcast_ln160' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 489 [1/1] (7.30ns)   --->   "%write_ln160 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr, i32 %bitcast_ln160, i4 15" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:160]   --->   Operation 489 'write' 'write_ln160' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_26 : Operation 490 [1/1] (0.00ns)   --->   "%br_ln71 = br void %for.body26" [AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:71]   --->   Operation 490 'br' 'br_ln71' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 5.870ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln0') of constant 0 on local variable 'indvar' [141]  (0.427 ns)
	'load' operation 4 bit ('indvar_load', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68) on local variable 'indvar' [160]  (0.000 ns)
	'add' operation 4 bit ('add_ln68_1', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68) [167]  (0.797 ns)
	'select' operation 4 bit ('select_ln68', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68) [168]  (0.391 ns)
	'mul' operation 10 bit ('empty_27', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68) [170]  (1.510 ns)
	'add' operation 10 bit ('tmp2', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68) [177]  (0.787 ns)
	'add' operation 18 bit ('empty_30', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68) [179]  (0.873 ns)
	'add' operation 64 bit ('empty_31', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:68) [182]  (1.085 ns)

 <State 2>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_25', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) [338]  (7.300 ns)

 <State 3>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_25', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) [338]  (7.300 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_25', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) [338]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_25', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) [338]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_25', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) [338]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_25', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) [338]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_25', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) [338]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_25', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) [338]  (7.300 ns)

 <State 10>: 7.300ns
The critical path consists of the following:
	bus read operation ('gmem_addr_1_read', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) [339]  (7.300 ns)

 <State 11>: 7.300ns
The critical path consists of the following:
	bus read operation ('gmem_addr_1_read_1', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) [341]  (7.300 ns)

 <State 12>: 7.300ns
The critical path consists of the following:
	bus read operation ('gmem_addr_1_read_2', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) [343]  (7.300 ns)

 <State 13>: 7.300ns
The critical path consists of the following:
	bus read operation ('gmem_addr_2_read', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) [346]  (7.300 ns)

 <State 14>: 7.300ns
The critical path consists of the following:
	bus read operation ('gmem_addr_2_read_1', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) [348]  (7.300 ns)

 <State 15>: 7.300ns
The critical path consists of the following:
	bus read operation ('gmem_addr_2_read_2', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:91) [350]  (7.300 ns)

 <State 16>: 3.209ns
The critical path consists of the following:
	'load' operation 32 bit ('line_buffer_2D') on local variable 'line_buffer_2D', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:42 [149]  (0.000 ns)
	multiplexor before 'phi' operation 32 bit ('line_buffer_2D') with incoming values : ('line_buffer_2D') ('p_load86') [365]  (0.427 ns)
	'phi' operation 32 bit ('line_buffer_2D') with incoming values : ('line_buffer_2D') ('p_load86') [365]  (0.000 ns)
	'fcmp' operation 1 bit ('tmp_5', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [372]  (2.782 ns)

 <State 17>: 6.013ns
The critical path consists of the following:
	'fcmp' operation 1 bit ('tmp_5', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [372]  (2.782 ns)
	'and' operation 1 bit ('and_ln156', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [373]  (0.000 ns)
	'select' operation 32 bit ('tmp', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [374]  (0.449 ns)
	'fcmp' operation 1 bit ('tmp_11', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [388]  (2.782 ns)

 <State 18>: 6.300ns
The critical path consists of the following:
	'fcmp' operation 1 bit ('tmp_11', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [388]  (2.782 ns)
	'and' operation 1 bit ('and_ln156_2', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [389]  (0.287 ns)
	'select' operation 32 bit ('tmp', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [390]  (0.449 ns)
	'fcmp' operation 1 bit ('tmp_17', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [404]  (2.782 ns)

 <State 19>: 6.300ns
The critical path consists of the following:
	'fcmp' operation 1 bit ('tmp_17', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [404]  (2.782 ns)
	'and' operation 1 bit ('and_ln156_4', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [405]  (0.287 ns)
	'select' operation 32 bit ('tmp', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [406]  (0.449 ns)
	'fcmp' operation 1 bit ('tmp_20', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [420]  (2.782 ns)

 <State 20>: 6.300ns
The critical path consists of the following:
	'fcmp' operation 1 bit ('tmp_20', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [420]  (2.782 ns)
	'and' operation 1 bit ('and_ln156_6', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [421]  (0.287 ns)
	'select' operation 32 bit ('tmp', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [422]  (0.449 ns)
	'fcmp' operation 1 bit ('tmp_23', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [436]  (2.782 ns)

 <State 21>: 6.300ns
The critical path consists of the following:
	'fcmp' operation 1 bit ('tmp_23', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [436]  (2.782 ns)
	'and' operation 1 bit ('and_ln156_8', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [437]  (0.287 ns)
	'select' operation 32 bit ('tmp', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [438]  (0.449 ns)
	'fcmp' operation 1 bit ('tmp_26', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [452]  (2.782 ns)

 <State 22>: 6.300ns
The critical path consists of the following:
	'fcmp' operation 1 bit ('tmp_26', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [452]  (2.782 ns)
	'and' operation 1 bit ('and_ln156_10', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [453]  (0.287 ns)
	'select' operation 32 bit ('tmp', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [454]  (0.449 ns)
	'fcmp' operation 1 bit ('tmp_29', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [468]  (2.782 ns)

 <State 23>: 6.300ns
The critical path consists of the following:
	'fcmp' operation 1 bit ('tmp_29', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [468]  (2.782 ns)
	'and' operation 1 bit ('and_ln156_12', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [469]  (0.287 ns)
	'select' operation 32 bit ('tmp', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [470]  (0.449 ns)
	'fcmp' operation 1 bit ('tmp_32', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [484]  (2.782 ns)

 <State 24>: 6.300ns
The critical path consists of the following:
	'fcmp' operation 1 bit ('tmp_32', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [484]  (2.782 ns)
	'and' operation 1 bit ('and_ln156_14', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [485]  (0.287 ns)
	'select' operation 32 bit ('tmp', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [486]  (0.449 ns)
	'fcmp' operation 1 bit ('tmp_35', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [500]  (2.782 ns)

 <State 25>: 3.518ns
The critical path consists of the following:
	'fcmp' operation 1 bit ('tmp_35', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [500]  (2.782 ns)
	'and' operation 1 bit ('and_ln156_16', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [501]  (0.287 ns)
	'select' operation 32 bit ('tmp', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:156) [502]  (0.449 ns)

 <State 26>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation 32 bit ('gmem_addr', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:51) [161]  (0.000 ns)
	bus write operation ('write_ln160', AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:160) on port 'gmem' (AlexNet-FPGA-implementation/Pool2/src/pool2.cpp:160) [504]  (7.300 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
