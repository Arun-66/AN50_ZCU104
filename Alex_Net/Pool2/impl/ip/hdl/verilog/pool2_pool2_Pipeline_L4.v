// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module pool2_pool2_Pipeline_L4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_0_AWVALID,
        m_axi_gmem_0_AWREADY,
        m_axi_gmem_0_AWADDR,
        m_axi_gmem_0_AWID,
        m_axi_gmem_0_AWLEN,
        m_axi_gmem_0_AWSIZE,
        m_axi_gmem_0_AWBURST,
        m_axi_gmem_0_AWLOCK,
        m_axi_gmem_0_AWCACHE,
        m_axi_gmem_0_AWPROT,
        m_axi_gmem_0_AWQOS,
        m_axi_gmem_0_AWREGION,
        m_axi_gmem_0_AWUSER,
        m_axi_gmem_0_WVALID,
        m_axi_gmem_0_WREADY,
        m_axi_gmem_0_WDATA,
        m_axi_gmem_0_WSTRB,
        m_axi_gmem_0_WLAST,
        m_axi_gmem_0_WID,
        m_axi_gmem_0_WUSER,
        m_axi_gmem_0_ARVALID,
        m_axi_gmem_0_ARREADY,
        m_axi_gmem_0_ARADDR,
        m_axi_gmem_0_ARID,
        m_axi_gmem_0_ARLEN,
        m_axi_gmem_0_ARSIZE,
        m_axi_gmem_0_ARBURST,
        m_axi_gmem_0_ARLOCK,
        m_axi_gmem_0_ARCACHE,
        m_axi_gmem_0_ARPROT,
        m_axi_gmem_0_ARQOS,
        m_axi_gmem_0_ARREGION,
        m_axi_gmem_0_ARUSER,
        m_axi_gmem_0_RVALID,
        m_axi_gmem_0_RREADY,
        m_axi_gmem_0_RDATA,
        m_axi_gmem_0_RLAST,
        m_axi_gmem_0_RID,
        m_axi_gmem_0_RFIFONUM,
        m_axi_gmem_0_RUSER,
        m_axi_gmem_0_RRESP,
        m_axi_gmem_0_BVALID,
        m_axi_gmem_0_BREADY,
        m_axi_gmem_0_BRESP,
        m_axi_gmem_0_BID,
        m_axi_gmem_0_BUSER,
        empty,
        mux_case_26190,
        mux_case_24183,
        mux_case_22176,
        mux_case_20169,
        mux_case_18162,
        mux_case_16155,
        mux_case_14148,
        mux_case_12141,
        mux_case_10134,
        mux_case_8127,
        mux_case_6120,
        mux_case_4113,
        mux_case_2106,
        mux_case_2599,
        mux_case_2392,
        mux_case_2185,
        mux_case_1978,
        mux_case_1771,
        mux_case_1564,
        mux_case_1357,
        mux_case_1150,
        mux_case_943,
        mux_case_736,
        mux_case_529,
        mux_case_322,
        mux_case_115,
        sext_ln57,
        p_out,
        p_out_ap_vld,
        mux_case_26189_out,
        mux_case_26189_out_ap_vld,
        mux_case_24182_out,
        mux_case_24182_out_ap_vld,
        mux_case_22175_out,
        mux_case_22175_out_ap_vld,
        mux_case_20168_out,
        mux_case_20168_out_ap_vld,
        mux_case_18161_out,
        mux_case_18161_out_ap_vld,
        mux_case_16154_out,
        mux_case_16154_out_ap_vld,
        mux_case_14147_out,
        mux_case_14147_out_ap_vld,
        mux_case_12140_out,
        mux_case_12140_out_ap_vld,
        mux_case_10133_out,
        mux_case_10133_out_ap_vld,
        mux_case_8126_out,
        mux_case_8126_out_ap_vld,
        mux_case_6119_out,
        mux_case_6119_out_ap_vld,
        mux_case_4112_out,
        mux_case_4112_out_ap_vld,
        mux_case_2105_out,
        mux_case_2105_out_ap_vld,
        mux_case_2598_out,
        mux_case_2598_out_ap_vld,
        mux_case_2391_out,
        mux_case_2391_out_ap_vld,
        mux_case_2184_out,
        mux_case_2184_out_ap_vld,
        mux_case_1977_out,
        mux_case_1977_out_ap_vld,
        mux_case_1770_out,
        mux_case_1770_out_ap_vld,
        mux_case_1563_out,
        mux_case_1563_out_ap_vld,
        mux_case_1356_out,
        mux_case_1356_out_ap_vld,
        mux_case_1149_out,
        mux_case_1149_out_ap_vld,
        mux_case_942_out,
        mux_case_942_out_ap_vld,
        mux_case_735_out,
        mux_case_735_out_ap_vld,
        mux_case_528_out,
        mux_case_528_out_ap_vld,
        mux_case_321_out,
        mux_case_321_out_ap_vld,
        mux_case_114_out,
        mux_case_114_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_0_AWVALID;
input   m_axi_gmem_0_AWREADY;
output  [63:0] m_axi_gmem_0_AWADDR;
output  [0:0] m_axi_gmem_0_AWID;
output  [31:0] m_axi_gmem_0_AWLEN;
output  [2:0] m_axi_gmem_0_AWSIZE;
output  [1:0] m_axi_gmem_0_AWBURST;
output  [1:0] m_axi_gmem_0_AWLOCK;
output  [3:0] m_axi_gmem_0_AWCACHE;
output  [2:0] m_axi_gmem_0_AWPROT;
output  [3:0] m_axi_gmem_0_AWQOS;
output  [3:0] m_axi_gmem_0_AWREGION;
output  [0:0] m_axi_gmem_0_AWUSER;
output   m_axi_gmem_0_WVALID;
input   m_axi_gmem_0_WREADY;
output  [31:0] m_axi_gmem_0_WDATA;
output  [3:0] m_axi_gmem_0_WSTRB;
output   m_axi_gmem_0_WLAST;
output  [0:0] m_axi_gmem_0_WID;
output  [0:0] m_axi_gmem_0_WUSER;
output   m_axi_gmem_0_ARVALID;
input   m_axi_gmem_0_ARREADY;
output  [63:0] m_axi_gmem_0_ARADDR;
output  [0:0] m_axi_gmem_0_ARID;
output  [31:0] m_axi_gmem_0_ARLEN;
output  [2:0] m_axi_gmem_0_ARSIZE;
output  [1:0] m_axi_gmem_0_ARBURST;
output  [1:0] m_axi_gmem_0_ARLOCK;
output  [3:0] m_axi_gmem_0_ARCACHE;
output  [2:0] m_axi_gmem_0_ARPROT;
output  [3:0] m_axi_gmem_0_ARQOS;
output  [3:0] m_axi_gmem_0_ARREGION;
output  [0:0] m_axi_gmem_0_ARUSER;
input   m_axi_gmem_0_RVALID;
output   m_axi_gmem_0_RREADY;
input  [31:0] m_axi_gmem_0_RDATA;
input   m_axi_gmem_0_RLAST;
input  [0:0] m_axi_gmem_0_RID;
input  [8:0] m_axi_gmem_0_RFIFONUM;
input  [0:0] m_axi_gmem_0_RUSER;
input  [1:0] m_axi_gmem_0_RRESP;
input   m_axi_gmem_0_BVALID;
output   m_axi_gmem_0_BREADY;
input  [1:0] m_axi_gmem_0_BRESP;
input  [0:0] m_axi_gmem_0_BID;
input  [0:0] m_axi_gmem_0_BUSER;
input  [31:0] empty;
input  [31:0] mux_case_26190;
input  [31:0] mux_case_24183;
input  [31:0] mux_case_22176;
input  [31:0] mux_case_20169;
input  [31:0] mux_case_18162;
input  [31:0] mux_case_16155;
input  [31:0] mux_case_14148;
input  [31:0] mux_case_12141;
input  [31:0] mux_case_10134;
input  [31:0] mux_case_8127;
input  [31:0] mux_case_6120;
input  [31:0] mux_case_4113;
input  [31:0] mux_case_2106;
input  [31:0] mux_case_2599;
input  [31:0] mux_case_2392;
input  [31:0] mux_case_2185;
input  [31:0] mux_case_1978;
input  [31:0] mux_case_1771;
input  [31:0] mux_case_1564;
input  [31:0] mux_case_1357;
input  [31:0] mux_case_1150;
input  [31:0] mux_case_943;
input  [31:0] mux_case_736;
input  [31:0] mux_case_529;
input  [31:0] mux_case_322;
input  [31:0] mux_case_115;
input  [61:0] sext_ln57;
output  [31:0] p_out;
output   p_out_ap_vld;
output  [31:0] mux_case_26189_out;
output   mux_case_26189_out_ap_vld;
output  [31:0] mux_case_24182_out;
output   mux_case_24182_out_ap_vld;
output  [31:0] mux_case_22175_out;
output   mux_case_22175_out_ap_vld;
output  [31:0] mux_case_20168_out;
output   mux_case_20168_out_ap_vld;
output  [31:0] mux_case_18161_out;
output   mux_case_18161_out_ap_vld;
output  [31:0] mux_case_16154_out;
output   mux_case_16154_out_ap_vld;
output  [31:0] mux_case_14147_out;
output   mux_case_14147_out_ap_vld;
output  [31:0] mux_case_12140_out;
output   mux_case_12140_out_ap_vld;
output  [31:0] mux_case_10133_out;
output   mux_case_10133_out_ap_vld;
output  [31:0] mux_case_8126_out;
output   mux_case_8126_out_ap_vld;
output  [31:0] mux_case_6119_out;
output   mux_case_6119_out_ap_vld;
output  [31:0] mux_case_4112_out;
output   mux_case_4112_out_ap_vld;
output  [31:0] mux_case_2105_out;
output   mux_case_2105_out_ap_vld;
output  [31:0] mux_case_2598_out;
output   mux_case_2598_out_ap_vld;
output  [31:0] mux_case_2391_out;
output   mux_case_2391_out_ap_vld;
output  [31:0] mux_case_2184_out;
output   mux_case_2184_out_ap_vld;
output  [31:0] mux_case_1977_out;
output   mux_case_1977_out_ap_vld;
output  [31:0] mux_case_1770_out;
output   mux_case_1770_out_ap_vld;
output  [31:0] mux_case_1563_out;
output   mux_case_1563_out_ap_vld;
output  [31:0] mux_case_1356_out;
output   mux_case_1356_out_ap_vld;
output  [31:0] mux_case_1149_out;
output   mux_case_1149_out_ap_vld;
output  [31:0] mux_case_942_out;
output   mux_case_942_out_ap_vld;
output  [31:0] mux_case_735_out;
output   mux_case_735_out_ap_vld;
output  [31:0] mux_case_528_out;
output   mux_case_528_out_ap_vld;
output  [31:0] mux_case_321_out;
output   mux_case_321_out_ap_vld;
output  [31:0] mux_case_114_out;
output   mux_case_114_out_ap_vld;

reg ap_idle;
reg m_axi_gmem_0_RREADY;
reg p_out_ap_vld;
reg mux_case_26189_out_ap_vld;
reg mux_case_24182_out_ap_vld;
reg mux_case_22175_out_ap_vld;
reg mux_case_20168_out_ap_vld;
reg mux_case_18161_out_ap_vld;
reg mux_case_16154_out_ap_vld;
reg mux_case_14147_out_ap_vld;
reg mux_case_12140_out_ap_vld;
reg mux_case_10133_out_ap_vld;
reg mux_case_8126_out_ap_vld;
reg mux_case_6119_out_ap_vld;
reg mux_case_4112_out_ap_vld;
reg mux_case_2105_out_ap_vld;
reg mux_case_2598_out_ap_vld;
reg mux_case_2391_out_ap_vld;
reg mux_case_2184_out_ap_vld;
reg mux_case_1977_out_ap_vld;
reg mux_case_1770_out_ap_vld;
reg mux_case_1563_out_ap_vld;
reg mux_case_1356_out_ap_vld;
reg mux_case_1149_out_ap_vld;
reg mux_case_942_out_ap_vld;
reg mux_case_735_out_ap_vld;
reg mux_case_528_out_ap_vld;
reg mux_case_321_out_ap_vld;
reg mux_case_114_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln57_fu_827_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_R;
wire    ap_block_pp0_stage0_grp1;
wire    ap_block_pp0_stage0_11001_grp0;
reg    ap_block_pp0_stage0_subdone_grp0_done_reg;
wire    ap_block_pp0_stage0_subdone_grp0;
reg    ap_block_pp0_stage0_11001_grp1;
reg   [4:0] j_1_reg_1271;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln57_reg_1275;
wire   [31:0] line_buffer_2D_fu_850_p1;
reg   [31:0] line_buffer_2D_reg_1279;
reg   [4:0] j_fu_206;
wire   [4:0] add_ln57_fu_833_p2;
wire    ap_loop_init;
reg   [4:0] ap_sig_allocacmp_j_1;
wire    ap_block_pp0_stage0;
reg   [31:0] mux_case_114_fu_210;
reg    ap_predicate_pred328_state3;
wire    ap_block_pp0_stage0_grp0;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg   [31:0] mux_case_321_fu_214;
reg    ap_predicate_pred351_state3;
reg   [31:0] mux_case_528_fu_218;
reg    ap_predicate_pred362_state3;
reg   [31:0] mux_case_735_fu_222;
reg    ap_predicate_pred373_state3;
reg   [31:0] mux_case_942_fu_226;
reg    ap_predicate_pred384_state3;
reg   [31:0] mux_case_1149_fu_230;
reg    ap_predicate_pred395_state3;
reg   [31:0] mux_case_1356_fu_234;
reg    ap_predicate_pred406_state3;
reg   [31:0] mux_case_1563_fu_238;
reg    ap_predicate_pred417_state3;
reg   [31:0] mux_case_1770_fu_242;
reg    ap_predicate_pred428_state3;
reg   [31:0] mux_case_1977_fu_246;
reg    ap_predicate_pred439_state3;
reg   [31:0] mux_case_2184_fu_250;
reg    ap_predicate_pred450_state3;
reg   [31:0] mux_case_2391_fu_254;
reg    ap_predicate_pred461_state3;
reg   [31:0] mux_case_2598_fu_258;
reg    ap_predicate_pred472_state3;
reg   [31:0] mux_case_2105_fu_262;
reg    ap_predicate_pred483_state3;
reg   [31:0] mux_case_4112_fu_266;
reg    ap_predicate_pred494_state3;
reg   [31:0] mux_case_6119_fu_270;
reg    ap_predicate_pred505_state3;
reg   [31:0] mux_case_8126_fu_274;
reg    ap_predicate_pred516_state3;
reg   [31:0] mux_case_10133_fu_278;
reg    ap_predicate_pred527_state3;
reg   [31:0] mux_case_12140_fu_282;
reg    ap_predicate_pred538_state3;
reg   [31:0] mux_case_14147_fu_286;
reg    ap_predicate_pred549_state3;
reg   [31:0] mux_case_16154_fu_290;
reg    ap_predicate_pred560_state3;
reg   [31:0] mux_case_18161_fu_294;
reg    ap_predicate_pred571_state3;
reg   [31:0] mux_case_20168_fu_298;
reg    ap_predicate_pred582_state3;
reg   [31:0] mux_case_22175_fu_302;
reg    ap_predicate_pred593_state3;
reg   [31:0] mux_case_24182_fu_306;
reg    ap_predicate_pred604_state3;
reg   [31:0] mux_case_26189_fu_310;
reg    ap_predicate_pred630_state3;
reg   [31:0] empty_36_fu_314;
reg    ap_predicate_pred640_state3;
wire    ap_block_pp0_stage0_01001_grp0;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp0_done_reg = 1'b0;
#0 j_fu_206 = 5'd0;
#0 mux_case_114_fu_210 = 32'd0;
#0 mux_case_321_fu_214 = 32'd0;
#0 mux_case_528_fu_218 = 32'd0;
#0 mux_case_735_fu_222 = 32'd0;
#0 mux_case_942_fu_226 = 32'd0;
#0 mux_case_1149_fu_230 = 32'd0;
#0 mux_case_1356_fu_234 = 32'd0;
#0 mux_case_1563_fu_238 = 32'd0;
#0 mux_case_1770_fu_242 = 32'd0;
#0 mux_case_1977_fu_246 = 32'd0;
#0 mux_case_2184_fu_250 = 32'd0;
#0 mux_case_2391_fu_254 = 32'd0;
#0 mux_case_2598_fu_258 = 32'd0;
#0 mux_case_2105_fu_262 = 32'd0;
#0 mux_case_4112_fu_266 = 32'd0;
#0 mux_case_6119_fu_270 = 32'd0;
#0 mux_case_8126_fu_274 = 32'd0;
#0 mux_case_10133_fu_278 = 32'd0;
#0 mux_case_12140_fu_282 = 32'd0;
#0 mux_case_14147_fu_286 = 32'd0;
#0 mux_case_16154_fu_290 = 32'd0;
#0 mux_case_18161_fu_294 = 32'd0;
#0 mux_case_20168_fu_298 = 32'd0;
#0 mux_case_22175_fu_302 = 32'd0;
#0 mux_case_24182_fu_306 = 32'd0;
#0 mux_case_26189_fu_310 = 32'd0;
#0 empty_36_fu_314 = 32'd0;
#0 ap_done_reg = 1'b0;
end

pool2_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp0)) begin
            ap_block_pp0_stage0_subdone_grp0_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_36_fu_314 <= empty;
        end else if (((ap_predicate_pred640_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            empty_36_fu_314 <= line_buffer_2D_reg_1279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln57_fu_827_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            j_fu_206 <= add_ln57_fu_833_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_206 <= 5'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mux_case_10133_fu_278 <= mux_case_10134;
        end else if (((ap_predicate_pred527_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            mux_case_10133_fu_278 <= line_buffer_2D_reg_1279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mux_case_1149_fu_230 <= mux_case_1150;
        end else if (((ap_predicate_pred395_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            mux_case_1149_fu_230 <= line_buffer_2D_reg_1279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mux_case_114_fu_210 <= mux_case_115;
        end else if (((ap_predicate_pred328_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            mux_case_114_fu_210 <= line_buffer_2D_reg_1279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mux_case_12140_fu_282 <= mux_case_12141;
        end else if (((ap_predicate_pred538_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            mux_case_12140_fu_282 <= line_buffer_2D_reg_1279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mux_case_1356_fu_234 <= mux_case_1357;
        end else if (((ap_predicate_pred406_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            mux_case_1356_fu_234 <= line_buffer_2D_reg_1279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mux_case_14147_fu_286 <= mux_case_14148;
        end else if (((ap_predicate_pred549_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            mux_case_14147_fu_286 <= line_buffer_2D_reg_1279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mux_case_1563_fu_238 <= mux_case_1564;
        end else if (((ap_predicate_pred417_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            mux_case_1563_fu_238 <= line_buffer_2D_reg_1279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mux_case_16154_fu_290 <= mux_case_16155;
        end else if (((ap_predicate_pred560_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            mux_case_16154_fu_290 <= line_buffer_2D_reg_1279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mux_case_1770_fu_242 <= mux_case_1771;
        end else if (((ap_predicate_pred428_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            mux_case_1770_fu_242 <= line_buffer_2D_reg_1279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mux_case_18161_fu_294 <= mux_case_18162;
        end else if (((ap_predicate_pred571_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            mux_case_18161_fu_294 <= line_buffer_2D_reg_1279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mux_case_1977_fu_246 <= mux_case_1978;
        end else if (((ap_predicate_pred439_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            mux_case_1977_fu_246 <= line_buffer_2D_reg_1279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mux_case_20168_fu_298 <= mux_case_20169;
        end else if (((ap_predicate_pred582_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            mux_case_20168_fu_298 <= line_buffer_2D_reg_1279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mux_case_2105_fu_262 <= mux_case_2106;
        end else if (((ap_predicate_pred483_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            mux_case_2105_fu_262 <= line_buffer_2D_reg_1279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mux_case_2184_fu_250 <= mux_case_2185;
        end else if (((ap_predicate_pred450_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            mux_case_2184_fu_250 <= line_buffer_2D_reg_1279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mux_case_22175_fu_302 <= mux_case_22176;
        end else if (((ap_predicate_pred593_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            mux_case_22175_fu_302 <= line_buffer_2D_reg_1279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mux_case_2391_fu_254 <= mux_case_2392;
        end else if (((ap_predicate_pred461_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            mux_case_2391_fu_254 <= line_buffer_2D_reg_1279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mux_case_24182_fu_306 <= mux_case_24183;
        end else if (((ap_predicate_pred604_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            mux_case_24182_fu_306 <= line_buffer_2D_reg_1279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mux_case_2598_fu_258 <= mux_case_2599;
        end else if (((ap_predicate_pred472_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            mux_case_2598_fu_258 <= line_buffer_2D_reg_1279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mux_case_26189_fu_310 <= mux_case_26190;
        end else if (((ap_predicate_pred630_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            mux_case_26189_fu_310 <= line_buffer_2D_reg_1279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mux_case_321_fu_214 <= mux_case_322;
        end else if (((ap_predicate_pred351_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            mux_case_321_fu_214 <= line_buffer_2D_reg_1279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mux_case_4112_fu_266 <= mux_case_4113;
        end else if (((ap_predicate_pred494_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            mux_case_4112_fu_266 <= line_buffer_2D_reg_1279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mux_case_528_fu_218 <= mux_case_529;
        end else if (((ap_predicate_pred362_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            mux_case_528_fu_218 <= line_buffer_2D_reg_1279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mux_case_6119_fu_270 <= mux_case_6120;
        end else if (((ap_predicate_pred505_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            mux_case_6119_fu_270 <= line_buffer_2D_reg_1279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mux_case_735_fu_222 <= mux_case_736;
        end else if (((ap_predicate_pred373_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            mux_case_735_fu_222 <= line_buffer_2D_reg_1279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mux_case_8126_fu_274 <= mux_case_8127;
        end else if (((ap_predicate_pred516_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            mux_case_8126_fu_274 <= line_buffer_2D_reg_1279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0))) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            mux_case_942_fu_226 <= mux_case_943;
        end else if (((ap_predicate_pred384_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            mux_case_942_fu_226 <= line_buffer_2D_reg_1279;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_predicate_pred328_state3 <= (j_1_reg_1271 == 5'd1);
        ap_predicate_pred351_state3 <= (j_1_reg_1271 == 5'd3);
        ap_predicate_pred362_state3 <= (j_1_reg_1271 == 5'd5);
        ap_predicate_pred373_state3 <= (j_1_reg_1271 == 5'd7);
        ap_predicate_pred384_state3 <= (j_1_reg_1271 == 5'd9);
        ap_predicate_pred395_state3 <= (j_1_reg_1271 == 5'd11);
        ap_predicate_pred406_state3 <= (j_1_reg_1271 == 5'd13);
        ap_predicate_pred417_state3 <= (j_1_reg_1271 == 5'd15);
        ap_predicate_pred428_state3 <= (j_1_reg_1271 == 5'd17);
        ap_predicate_pred439_state3 <= (j_1_reg_1271 == 5'd19);
        ap_predicate_pred450_state3 <= (j_1_reg_1271 == 5'd21);
        ap_predicate_pred461_state3 <= (j_1_reg_1271 == 5'd23);
        ap_predicate_pred472_state3 <= (j_1_reg_1271 == 5'd25);
        ap_predicate_pred483_state3 <= (j_1_reg_1271 == 5'd2);
        ap_predicate_pred494_state3 <= (j_1_reg_1271 == 5'd4);
        ap_predicate_pred505_state3 <= (j_1_reg_1271 == 5'd6);
        ap_predicate_pred516_state3 <= (j_1_reg_1271 == 5'd8);
        ap_predicate_pred527_state3 <= (j_1_reg_1271 == 5'd10);
        ap_predicate_pred538_state3 <= (j_1_reg_1271 == 5'd12);
        ap_predicate_pred549_state3 <= (j_1_reg_1271 == 5'd14);
        ap_predicate_pred560_state3 <= (j_1_reg_1271 == 5'd16);
        ap_predicate_pred571_state3 <= (j_1_reg_1271 == 5'd18);
        ap_predicate_pred582_state3 <= (j_1_reg_1271 == 5'd20);
        ap_predicate_pred593_state3 <= (j_1_reg_1271 == 5'd22);
        ap_predicate_pred604_state3 <= (j_1_reg_1271 == 5'd24);
        ap_predicate_pred630_state3 <= ((j_1_reg_1271 == 5'd26) | ((j_1_reg_1271 == 5'd27) | ((j_1_reg_1271 == 5'd28) | ((j_1_reg_1271 == 5'd29) | ((j_1_reg_1271 == 5'd30) | (j_1_reg_1271 == 5'd31))))));
        ap_predicate_pred640_state3 <= (j_1_reg_1271 == 5'd0);
        icmp_ln57_reg_1275 <= icmp_ln57_fu_827_p2;
        j_1_reg_1271 <= ap_sig_allocacmp_j_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buffer_2D_reg_1279 <= line_buffer_2D_fu_850_p1;
    end
end

always @ (*) begin
    if (((icmp_ln57_fu_827_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_j_1 = 5'd0;
    end else begin
        ap_sig_allocacmp_j_1 = j_fu_206;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem_blk_n_R = m_axi_gmem_0_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axi_gmem_0_RREADY = 1'b1;
    end else begin
        m_axi_gmem_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln57_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_10133_out_ap_vld = 1'b1;
    end else begin
        mux_case_10133_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln57_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_1149_out_ap_vld = 1'b1;
    end else begin
        mux_case_1149_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln57_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_114_out_ap_vld = 1'b1;
    end else begin
        mux_case_114_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln57_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_12140_out_ap_vld = 1'b1;
    end else begin
        mux_case_12140_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln57_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_1356_out_ap_vld = 1'b1;
    end else begin
        mux_case_1356_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln57_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_14147_out_ap_vld = 1'b1;
    end else begin
        mux_case_14147_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln57_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_1563_out_ap_vld = 1'b1;
    end else begin
        mux_case_1563_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln57_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_16154_out_ap_vld = 1'b1;
    end else begin
        mux_case_16154_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln57_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_1770_out_ap_vld = 1'b1;
    end else begin
        mux_case_1770_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln57_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_18161_out_ap_vld = 1'b1;
    end else begin
        mux_case_18161_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln57_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_1977_out_ap_vld = 1'b1;
    end else begin
        mux_case_1977_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln57_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_20168_out_ap_vld = 1'b1;
    end else begin
        mux_case_20168_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln57_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_2105_out_ap_vld = 1'b1;
    end else begin
        mux_case_2105_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln57_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_2184_out_ap_vld = 1'b1;
    end else begin
        mux_case_2184_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln57_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_22175_out_ap_vld = 1'b1;
    end else begin
        mux_case_22175_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln57_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_2391_out_ap_vld = 1'b1;
    end else begin
        mux_case_2391_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln57_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_24182_out_ap_vld = 1'b1;
    end else begin
        mux_case_24182_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln57_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_2598_out_ap_vld = 1'b1;
    end else begin
        mux_case_2598_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln57_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_26189_out_ap_vld = 1'b1;
    end else begin
        mux_case_26189_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln57_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_321_out_ap_vld = 1'b1;
    end else begin
        mux_case_321_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln57_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_4112_out_ap_vld = 1'b1;
    end else begin
        mux_case_4112_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln57_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_528_out_ap_vld = 1'b1;
    end else begin
        mux_case_528_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln57_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_6119_out_ap_vld = 1'b1;
    end else begin
        mux_case_6119_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln57_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_735_out_ap_vld = 1'b1;
    end else begin
        mux_case_735_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln57_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_8126_out_ap_vld = 1'b1;
    end else begin
        mux_case_8126_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln57_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_942_out_ap_vld = 1'b1;
    end else begin
        mux_case_942_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone_grp0_done_reg) & (1'b0 == ap_block_pp0_stage0_11001_grp0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1) & (icmp_ln57_reg_1275 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_out_ap_vld = 1'b1;
    end else begin
        p_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln57_fu_833_p2 = (ap_sig_allocacmp_j_1 + 5'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((m_axi_gmem_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage0_11001_grp0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001_grp1 = ((m_axi_gmem_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage0_grp0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_grp1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((m_axi_gmem_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage0_subdone_grp0 = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign icmp_ln57_fu_827_p2 = ((ap_sig_allocacmp_j_1 == 5'd27) ? 1'b1 : 1'b0);

assign line_buffer_2D_fu_850_p1 = m_axi_gmem_0_RDATA;

assign m_axi_gmem_0_ARADDR = 64'd0;

assign m_axi_gmem_0_ARBURST = 2'd0;

assign m_axi_gmem_0_ARCACHE = 4'd0;

assign m_axi_gmem_0_ARID = 1'd0;

assign m_axi_gmem_0_ARLEN = 32'd0;

assign m_axi_gmem_0_ARLOCK = 2'd0;

assign m_axi_gmem_0_ARPROT = 3'd0;

assign m_axi_gmem_0_ARQOS = 4'd0;

assign m_axi_gmem_0_ARREGION = 4'd0;

assign m_axi_gmem_0_ARSIZE = 3'd0;

assign m_axi_gmem_0_ARUSER = 1'd0;

assign m_axi_gmem_0_ARVALID = 1'b0;

assign m_axi_gmem_0_AWADDR = 64'd0;

assign m_axi_gmem_0_AWBURST = 2'd0;

assign m_axi_gmem_0_AWCACHE = 4'd0;

assign m_axi_gmem_0_AWID = 1'd0;

assign m_axi_gmem_0_AWLEN = 32'd0;

assign m_axi_gmem_0_AWLOCK = 2'd0;

assign m_axi_gmem_0_AWPROT = 3'd0;

assign m_axi_gmem_0_AWQOS = 4'd0;

assign m_axi_gmem_0_AWREGION = 4'd0;

assign m_axi_gmem_0_AWSIZE = 3'd0;

assign m_axi_gmem_0_AWUSER = 1'd0;

assign m_axi_gmem_0_AWVALID = 1'b0;

assign m_axi_gmem_0_BREADY = 1'b0;

assign m_axi_gmem_0_WDATA = 32'd0;

assign m_axi_gmem_0_WID = 1'd0;

assign m_axi_gmem_0_WLAST = 1'b0;

assign m_axi_gmem_0_WSTRB = 4'd0;

assign m_axi_gmem_0_WUSER = 1'd0;

assign m_axi_gmem_0_WVALID = 1'b0;

assign mux_case_10133_out = mux_case_10133_fu_278;

assign mux_case_1149_out = mux_case_1149_fu_230;

assign mux_case_114_out = mux_case_114_fu_210;

assign mux_case_12140_out = mux_case_12140_fu_282;

assign mux_case_1356_out = mux_case_1356_fu_234;

assign mux_case_14147_out = mux_case_14147_fu_286;

assign mux_case_1563_out = mux_case_1563_fu_238;

assign mux_case_16154_out = mux_case_16154_fu_290;

assign mux_case_1770_out = mux_case_1770_fu_242;

assign mux_case_18161_out = mux_case_18161_fu_294;

assign mux_case_1977_out = mux_case_1977_fu_246;

assign mux_case_20168_out = mux_case_20168_fu_298;

assign mux_case_2105_out = mux_case_2105_fu_262;

assign mux_case_2184_out = mux_case_2184_fu_250;

assign mux_case_22175_out = mux_case_22175_fu_302;

assign mux_case_2391_out = mux_case_2391_fu_254;

assign mux_case_24182_out = mux_case_24182_fu_306;

assign mux_case_2598_out = mux_case_2598_fu_258;

assign mux_case_26189_out = mux_case_26189_fu_310;

assign mux_case_321_out = mux_case_321_fu_214;

assign mux_case_4112_out = mux_case_4112_fu_266;

assign mux_case_528_out = mux_case_528_fu_218;

assign mux_case_6119_out = mux_case_6119_fu_270;

assign mux_case_735_out = mux_case_735_fu_222;

assign mux_case_8126_out = mux_case_8126_fu_274;

assign mux_case_942_out = mux_case_942_fu_226;

assign p_out = empty_36_fu_314;

endmodule //pool2_pool2_Pipeline_L4
