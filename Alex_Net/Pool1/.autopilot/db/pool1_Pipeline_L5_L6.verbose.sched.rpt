

================================================================
== Vitis HLS Report for 'pool1_Pipeline_L5_L6'
================================================================
* Date:           Sat Jan 25 23:50:44 2025

* Version:        2024.2 (Build 5238294 on Nov  8 2024)
* Project:        Alex_Net
* Solution:       Pool1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvc1156-2-i


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.300 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+------------------------------------------------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  |                    Pipeline                    |
    |   min   |   max   |    min    |    max    |  min |  max |                      Type                      |
    +---------+---------+-----------+-----------+------+------+------------------------------------------------+
    |     4395|     4395|  43.950 us|  43.950 us|  4380|  4380|  loop auto-rewind stp (delay=0 clock cycles(s))|
    +---------+---------+-----------+-----------+------+------+------------------------------------------------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- L5_L6   |     4393|     4393|        26|          6|          1|   729|       yes|
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 6, depth = 26


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 26
* Pipeline : 1
  Pipeline-0 : II = 6, D = 26, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 6.05>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%col = alloca i32 1" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:71]   --->   Operation 29 'alloca' 'col' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%indvar1126 = alloca i32 1"   --->   Operation 30 'alloca' 'indvar1126' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%indvar = alloca i32 1"   --->   Operation 31 'alloca' 'indvar' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 32 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%line_buffer_2D = alloca i32 1" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:42]   --->   Operation 33 'alloca' 'line_buffer_2D' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%line_buffer_2D_2 = alloca i32 1" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:42]   --->   Operation 34 'alloca' 'line_buffer_2D_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%line_buffer_2D_1 = alloca i32 1" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:42]   --->   Operation 35 'alloca' 'line_buffer_2D_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%empty_22 = alloca i32 1"   --->   Operation 36 'alloca' 'empty_22' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%empty_23 = alloca i32 1"   --->   Operation 37 'alloca' 'empty_23' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%empty_24 = alloca i32 1"   --->   Operation 38 'alloca' 'empty_24' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%inp_img_read = read i64 @_ssdm_op_Read.ap_auto.i64, i64 %inp_img"   --->   Operation 39 'read' 'inp_img_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (0.00ns)   --->   "%phi_mul_read = read i19 @_ssdm_op_Read.ap_auto.i19, i19 %phi_mul"   --->   Operation 40 'read' 'phi_mul_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%sext_ln51_read = read i62 @_ssdm_op_Read.ap_auto.i62, i62 %sext_ln51"   --->   Operation 41 'read' 'sext_ln51_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%tmp_45 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %empty"   --->   Operation 42 'read' 'tmp_45' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%tmp_46 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %empty_14"   --->   Operation 43 'read' 'tmp_46' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%tmp_47 = read i32 @_ssdm_op_Read.ap_auto.float, i32 %empty_13"   --->   Operation 44 'read' 'tmp_47' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%mux_case_114_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_114_reload"   --->   Operation 45 'read' 'mux_case_114_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%mux_case_321_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_321_reload"   --->   Operation 46 'read' 'mux_case_321_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%mux_case_528_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_528_reload"   --->   Operation 47 'read' 'mux_case_528_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%mux_case_735_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_735_reload"   --->   Operation 48 'read' 'mux_case_735_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%mux_case_942_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_942_reload"   --->   Operation 49 'read' 'mux_case_942_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%mux_case_1149_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_1149_reload"   --->   Operation 50 'read' 'mux_case_1149_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%mux_case_1356_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_1356_reload"   --->   Operation 51 'read' 'mux_case_1356_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%mux_case_1563_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_1563_reload"   --->   Operation 52 'read' 'mux_case_1563_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%mux_case_1770_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_1770_reload"   --->   Operation 53 'read' 'mux_case_1770_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%mux_case_1977_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_1977_reload"   --->   Operation 54 'read' 'mux_case_1977_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%mux_case_2184_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_2184_reload"   --->   Operation 55 'read' 'mux_case_2184_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%mux_case_2391_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_2391_reload"   --->   Operation 56 'read' 'mux_case_2391_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%mux_case_2598_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_2598_reload"   --->   Operation 57 'read' 'mux_case_2598_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%mux_case_27105_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_27105_reload"   --->   Operation 58 'read' 'mux_case_27105_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.00ns)   --->   "%mux_case_29112_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_29112_reload"   --->   Operation 59 'read' 'mux_case_29112_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 60 [1/1] (0.00ns)   --->   "%mux_case_31119_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_31119_reload"   --->   Operation 60 'read' 'mux_case_31119_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 61 [1/1] (0.00ns)   --->   "%mux_case_33126_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_33126_reload"   --->   Operation 61 'read' 'mux_case_33126_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 62 [1/1] (0.00ns)   --->   "%mux_case_35133_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_35133_reload"   --->   Operation 62 'read' 'mux_case_35133_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 63 [1/1] (0.00ns)   --->   "%mux_case_37140_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_37140_reload"   --->   Operation 63 'read' 'mux_case_37140_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 64 [1/1] (0.00ns)   --->   "%mux_case_39147_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_39147_reload"   --->   Operation 64 'read' 'mux_case_39147_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 65 [1/1] (0.00ns)   --->   "%mux_case_41154_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_41154_reload"   --->   Operation 65 'read' 'mux_case_41154_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 66 [1/1] (0.00ns)   --->   "%mux_case_43161_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_43161_reload"   --->   Operation 66 'read' 'mux_case_43161_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 67 [1/1] (0.00ns)   --->   "%mux_case_45168_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_45168_reload"   --->   Operation 67 'read' 'mux_case_45168_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 68 [1/1] (0.00ns)   --->   "%mux_case_47175_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_47175_reload"   --->   Operation 68 'read' 'mux_case_47175_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 69 [1/1] (0.00ns)   --->   "%mux_case_49182_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_49182_reload"   --->   Operation 69 'read' 'mux_case_49182_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 70 [1/1] (0.00ns)   --->   "%mux_case_51189_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_51189_reload"   --->   Operation 70 'read' 'mux_case_51189_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 71 [1/1] (0.00ns)   --->   "%mux_case_53196_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_53196_reload"   --->   Operation 71 'read' 'mux_case_53196_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 72 [1/1] (0.00ns)   --->   "%mux_case_2203_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_2203_reload"   --->   Operation 72 'read' 'mux_case_2203_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 73 [1/1] (0.00ns)   --->   "%mux_case_4210_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_4210_reload"   --->   Operation 73 'read' 'mux_case_4210_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 74 [1/1] (0.00ns)   --->   "%mux_case_6217_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_6217_reload"   --->   Operation 74 'read' 'mux_case_6217_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 75 [1/1] (0.00ns)   --->   "%mux_case_8224_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_8224_reload"   --->   Operation 75 'read' 'mux_case_8224_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 76 [1/1] (0.00ns)   --->   "%mux_case_10231_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_10231_reload"   --->   Operation 76 'read' 'mux_case_10231_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 77 [1/1] (0.00ns)   --->   "%mux_case_12238_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_12238_reload"   --->   Operation 77 'read' 'mux_case_12238_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 78 [1/1] (0.00ns)   --->   "%mux_case_14245_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_14245_reload"   --->   Operation 78 'read' 'mux_case_14245_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 79 [1/1] (0.00ns)   --->   "%mux_case_16252_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_16252_reload"   --->   Operation 79 'read' 'mux_case_16252_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 80 [1/1] (0.00ns)   --->   "%mux_case_18259_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_18259_reload"   --->   Operation 80 'read' 'mux_case_18259_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 81 [1/1] (0.00ns)   --->   "%mux_case_20266_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_20266_reload"   --->   Operation 81 'read' 'mux_case_20266_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 82 [1/1] (0.00ns)   --->   "%mux_case_22273_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_22273_reload"   --->   Operation 82 'read' 'mux_case_22273_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 83 [1/1] (0.00ns)   --->   "%mux_case_24280_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_24280_reload"   --->   Operation 83 'read' 'mux_case_24280_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 84 [1/1] (0.00ns)   --->   "%mux_case_26287_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_26287_reload"   --->   Operation 84 'read' 'mux_case_26287_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 85 [1/1] (0.00ns)   --->   "%mux_case_28294_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_28294_reload"   --->   Operation 85 'read' 'mux_case_28294_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 86 [1/1] (0.00ns)   --->   "%mux_case_30301_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_30301_reload"   --->   Operation 86 'read' 'mux_case_30301_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 87 [1/1] (0.00ns)   --->   "%mux_case_32308_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_32308_reload"   --->   Operation 87 'read' 'mux_case_32308_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 88 [1/1] (0.00ns)   --->   "%mux_case_34315_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_34315_reload"   --->   Operation 88 'read' 'mux_case_34315_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 89 [1/1] (0.00ns)   --->   "%mux_case_36322_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_36322_reload"   --->   Operation 89 'read' 'mux_case_36322_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 90 [1/1] (0.00ns)   --->   "%mux_case_38329_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_38329_reload"   --->   Operation 90 'read' 'mux_case_38329_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 91 [1/1] (0.00ns)   --->   "%mux_case_40336_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_40336_reload"   --->   Operation 91 'read' 'mux_case_40336_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 92 [1/1] (0.00ns)   --->   "%mux_case_42343_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_42343_reload"   --->   Operation 92 'read' 'mux_case_42343_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 93 [1/1] (0.00ns)   --->   "%mux_case_44350_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_44350_reload"   --->   Operation 93 'read' 'mux_case_44350_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 94 [1/1] (0.00ns)   --->   "%mux_case_46357_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_46357_reload"   --->   Operation 94 'read' 'mux_case_46357_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 95 [1/1] (0.00ns)   --->   "%mux_case_48364_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_48364_reload"   --->   Operation 95 'read' 'mux_case_48364_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 96 [1/1] (0.00ns)   --->   "%mux_case_50371_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_50371_reload"   --->   Operation 96 'read' 'mux_case_50371_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 97 [1/1] (0.00ns)   --->   "%mux_case_52378_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_52378_reload"   --->   Operation 97 'read' 'mux_case_52378_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 98 [1/1] (0.00ns)   --->   "%mux_case_54385_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %mux_case_54385_reload"   --->   Operation 98 'read' 'mux_case_54385_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 99 [1/1] (0.00ns)   --->   "%p_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %p_reload"   --->   Operation 99 'read' 'p_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 100 [1/1] (0.00ns)   --->   "%sext_ln51_cast = sext i62 %sext_ln51_read"   --->   Operation 100 'sext' 'sext_ln51_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 101 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %gmem, void @empty, i32 0, i32 0, void @empty_11, i32 0, i32 290400, void @empty_0, void @empty_1, void @empty_11, i32 16, i32 16, i32 16, i32 16, void @empty_11, void @empty_11, i32 4294967295, i32 0, i32 0"   --->   Operation 101 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 102 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_54385_reload_read, i32 %mux_case_54_out"   --->   Operation 102 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 103 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_52378_reload_read, i32 %mux_case_52_out"   --->   Operation 103 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 104 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_50371_reload_read, i32 %mux_case_50_out"   --->   Operation 104 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 105 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_48364_reload_read, i32 %mux_case_48_out"   --->   Operation 105 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 106 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_46357_reload_read, i32 %mux_case_46_out"   --->   Operation 106 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 107 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_44350_reload_read, i32 %mux_case_44_out"   --->   Operation 107 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 108 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_42343_reload_read, i32 %mux_case_42_out"   --->   Operation 108 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 109 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_40336_reload_read, i32 %mux_case_40_out"   --->   Operation 109 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 110 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_38329_reload_read, i32 %mux_case_38_out"   --->   Operation 110 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 111 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_36322_reload_read, i32 %mux_case_36_out"   --->   Operation 111 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 112 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_34315_reload_read, i32 %mux_case_34_out"   --->   Operation 112 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 113 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_32308_reload_read, i32 %mux_case_32_out"   --->   Operation 113 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 114 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_30301_reload_read, i32 %mux_case_30_out"   --->   Operation 114 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 115 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_28294_reload_read, i32 %mux_case_28_out"   --->   Operation 115 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 116 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_26287_reload_read, i32 %mux_case_26_out"   --->   Operation 116 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 117 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_24280_reload_read, i32 %mux_case_24_out"   --->   Operation 117 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 118 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_22273_reload_read, i32 %mux_case_22_out"   --->   Operation 118 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 119 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_20266_reload_read, i32 %mux_case_20_out"   --->   Operation 119 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 120 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_18259_reload_read, i32 %mux_case_18_out"   --->   Operation 120 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 121 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_16252_reload_read, i32 %mux_case_16_out"   --->   Operation 121 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 122 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_14245_reload_read, i32 %mux_case_14_out"   --->   Operation 122 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 123 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_12238_reload_read, i32 %mux_case_12_out"   --->   Operation 123 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 124 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_10231_reload_read, i32 %mux_case_10_out"   --->   Operation 124 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 125 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_8224_reload_read, i32 %mux_case_8_out"   --->   Operation 125 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 126 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_6217_reload_read, i32 %mux_case_6_out"   --->   Operation 126 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 127 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_4210_reload_read, i32 %mux_case_4_out"   --->   Operation 127 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 128 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_53196_reload_read, i32 %mux_case_53_out"   --->   Operation 128 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 129 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_51189_reload_read, i32 %mux_case_51_out"   --->   Operation 129 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 130 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_49182_reload_read, i32 %mux_case_49_out"   --->   Operation 130 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 131 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_47175_reload_read, i32 %mux_case_47_out"   --->   Operation 131 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 132 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_45168_reload_read, i32 %mux_case_45_out"   --->   Operation 132 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 133 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_43161_reload_read, i32 %mux_case_43_out"   --->   Operation 133 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 134 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_41154_reload_read, i32 %mux_case_41_out"   --->   Operation 134 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 135 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_39147_reload_read, i32 %mux_case_39_out"   --->   Operation 135 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 136 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_37140_reload_read, i32 %mux_case_37_out"   --->   Operation 136 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 137 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_35133_reload_read, i32 %mux_case_35_out"   --->   Operation 137 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 138 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_33126_reload_read, i32 %mux_case_33_out"   --->   Operation 138 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 139 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_31119_reload_read, i32 %mux_case_31_out"   --->   Operation 139 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 140 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_29112_reload_read, i32 %mux_case_29_out"   --->   Operation 140 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 141 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_27105_reload_read, i32 %mux_case_27_out"   --->   Operation 141 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 142 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_2598_reload_read, i32 %mux_case_25_out"   --->   Operation 142 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 143 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_2391_reload_read, i32 %mux_case_23_out"   --->   Operation 143 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 144 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_2184_reload_read, i32 %mux_case_21_out"   --->   Operation 144 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 145 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_1977_reload_read, i32 %mux_case_19_out"   --->   Operation 145 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 146 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_1770_reload_read, i32 %mux_case_17_out"   --->   Operation 146 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 147 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_1563_reload_read, i32 %mux_case_15_out"   --->   Operation 147 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 148 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_1356_reload_read, i32 %mux_case_13_out"   --->   Operation 148 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 149 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_1149_reload_read, i32 %mux_case_11_out"   --->   Operation 149 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 150 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_942_reload_read, i32 %mux_case_9_out"   --->   Operation 150 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 151 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_735_reload_read, i32 %mux_case_7_out"   --->   Operation 151 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 152 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_528_reload_read, i32 %mux_case_5_out"   --->   Operation 152 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 153 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %mux_case_321_reload_read, i32 %mux_case_3_out"   --->   Operation 153 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 154 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %tmp_47, i32 %empty_24"   --->   Operation 154 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 155 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %tmp_46, i32 %empty_23"   --->   Operation 155 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 156 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %tmp_45, i32 %empty_22"   --->   Operation 156 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 157 [1/1] (0.42ns)   --->   "%store_ln42 = store i32 %p_reload_read, i32 %line_buffer_2D_1" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:42]   --->   Operation 157 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 158 [1/1] (0.42ns)   --->   "%store_ln42 = store i32 %mux_case_2203_reload_read, i32 %line_buffer_2D_2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:42]   --->   Operation 158 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 159 [1/1] (0.42ns)   --->   "%store_ln42 = store i32 %mux_case_114_reload_read, i32 %line_buffer_2D" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:42]   --->   Operation 159 'store' 'store_ln42' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 160 [1/1] (0.42ns)   --->   "%store_ln0 = store i10 0, i10 %indvar_flatten"   --->   Operation 160 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 161 [1/1] (0.42ns)   --->   "%store_ln0 = store i5 0, i5 %indvar"   --->   Operation 161 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 162 [1/1] (0.42ns)   --->   "%store_ln0 = store i5 0, i5 %indvar1126"   --->   Operation 162 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 163 [1/1] (0.42ns)   --->   "%store_ln71 = store i6 2, i6 %col" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:71]   --->   Operation 163 'store' 'store_ln71' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 164 [1/1] (0.00ns)   --->   "%br_ln0 = br void %for.body26"   --->   Operation 164 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 165 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i10 %indvar_flatten" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 165 'load' 'indvar_flatten_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 166 [1/1] (0.78ns)   --->   "%icmp_ln68 = icmp_eq  i10 %indvar_flatten_load, i10 729" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 166 'icmp' 'icmp_ln68' <Predicate = true> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 167 [1/1] (0.78ns)   --->   "%add_ln68 = add i10 %indvar_flatten_load, i10 1" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 167 'add' 'add_ln68' <Predicate = true> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 168 [1/1] (0.00ns)   --->   "%col_load = load i6 %col" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:71]   --->   Operation 168 'load' 'col_load' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 169 [1/1] (0.00ns)   --->   "%indvar1126_load = load i5 %indvar1126" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:71]   --->   Operation 169 'load' 'indvar1126_load' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 170 [1/1] (0.00ns)   --->   "%indvar_load = load i5 %indvar" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 170 'load' 'indvar_load' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 171 [1/1] (0.78ns)   --->   "%icmp_ln71 = icmp_eq  i5 %indvar1126_load, i5 27" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:71]   --->   Operation 171 'icmp' 'icmp_ln71' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 172 [1/1] (0.41ns)   --->   "%select_ln71 = select i1 %icmp_ln71, i5 0, i5 %indvar1126_load" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:71]   --->   Operation 172 'select' 'select_ln71' <Predicate = (!icmp_ln68)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 173 [1/1] (0.38ns)   --->   "%select_ln71_1 = select i1 %icmp_ln71, i6 2, i6 %col_load" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:71]   --->   Operation 173 'select' 'select_ln71_1' <Predicate = (!icmp_ln68)> <Delay = 0.38> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.38> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 174 [1/1] (0.78ns)   --->   "%add_ln68_1 = add i5 %indvar_load, i5 1" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 174 'add' 'add_ln68_1' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 175 [1/1] (0.41ns)   --->   "%select_ln68 = select i1 %icmp_ln71, i5 %add_ln68_1, i5 %indvar_load" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 175 'select' 'select_ln68' <Predicate = (!icmp_ln68)> <Delay = 0.41> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.41> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 176 [1/1] (0.00ns)   --->   "%zext_ln68 = zext i5 %select_ln68" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 176 'zext' 'zext_ln68' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 177 [1/1] (1.65ns)   --->   "%empty_27 = mul i12 %zext_ln68, i12 110" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 177 'mul' 'empty_27' <Predicate = (!icmp_ln68)> <Delay = 1.65> <CoreInst = "Multiplier">   --->   Core 3 'Multiplier' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 178 [1/1] (0.80ns)   --->   "%tmp2 = add i12 %empty_27, i12 55" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 178 'add' 'tmp2' <Predicate = (!icmp_ln68)> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 179 [1/1] (0.00ns)   --->   "%tmp2_cast = zext i12 %tmp2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 179 'zext' 'tmp2_cast' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 180 [1/1] (0.88ns)   --->   "%empty_30 = add i19 %tmp2_cast, i19 %phi_mul_read" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 180 'add' 'empty_30' <Predicate = (!icmp_ln68)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 181 [1/1] (0.00ns)   --->   "%tmp_3 = bitconcatenate i21 @_ssdm_op_BitConcatenate.i21.i19.i2, i19 %empty_30, i2 0" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 181 'bitconcatenate' 'tmp_3' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 182 [1/1] (0.00ns)   --->   "%p_cast11 = zext i21 %tmp_3" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 182 'zext' 'p_cast11' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 183 [1/1] (1.08ns)   --->   "%empty_31 = add i64 %p_cast11, i64 %inp_img_read" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 183 'add' 'empty_31' <Predicate = (!icmp_ln68)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 184 [1/1] (0.80ns)   --->   "%tmp4 = add i12 %empty_27, i12 56" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 184 'add' 'tmp4' <Predicate = (!icmp_ln68)> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 185 [1/1] (0.00ns)   --->   "%tmp4_cast = zext i12 %tmp4" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 185 'zext' 'tmp4_cast' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 186 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%empty_33 = add i19 %tmp4_cast, i19 %phi_mul_read" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 186 'add' 'empty_33' <Predicate = (!icmp_ln68)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 187 [1/1] (0.00ns)   --->   "%p_cast7 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %empty_31, i32 2, i32 63" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 187 'partselect' 'p_cast7' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 188 [1/1] (0.00ns)   --->   "%p_cast7_cast = sext i62 %p_cast7" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 188 'sext' 'p_cast7_cast' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 189 [1/1] (0.00ns)   --->   "%gmem_addr_1 = getelementptr i32 %gmem, i64 %p_cast7_cast" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 189 'getelementptr' 'gmem_addr_1' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 190 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i6 @_ssdm_op_BitConcatenate.i6.i5.i1, i5 %select_ln71, i1 0" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:76]   --->   Operation 190 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 191 [1/1] (0.00ns)   --->   "%zext_ln76 = zext i6 %shl_ln" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:76]   --->   Operation 191 'zext' 'zext_ln76' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 192 [1/1] (0.69ns) (root node of TernaryAdder)   --->   "%add_ln76_2 = add i19 %empty_33, i19 %zext_ln76" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:76]   --->   Operation 192 'add' 'add_ln76_2' <Predicate = (!icmp_ln68)> <Delay = 0.69> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_1 : Operation 193 [1/1] (0.00ns)   --->   "%shl_ln76_2 = bitconcatenate i21 @_ssdm_op_BitConcatenate.i21.i19.i2, i19 %add_ln76_2, i2 0" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:76]   --->   Operation 193 'bitconcatenate' 'shl_ln76_2' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 194 [1/1] (0.00ns)   --->   "%zext_ln76_2 = zext i21 %shl_ln76_2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:76]   --->   Operation 194 'zext' 'zext_ln76_2' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_1 : Operation 195 [1/1] (1.08ns)   --->   "%add_ln76_3 = add i64 %zext_ln76_2, i64 %inp_img_read" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:76]   --->   Operation 195 'add' 'add_ln76_3' <Predicate = (!icmp_ln68)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 196 [1/1] (0.78ns)   --->   "%icmp_ln76 = icmp_eq  i6 %select_ln71_1, i6 2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:76]   --->   Operation 196 'icmp' 'icmp_ln76' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 197 [1/1] (0.78ns)   --->   "%icmp_ln25 = icmp_eq  i6 %select_ln71_1, i6 52" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 197 'icmp' 'icmp_ln25' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 198 [1/1] (0.78ns)   --->   "%icmp_ln25_1 = icmp_eq  i6 %select_ln71_1, i6 50" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 198 'icmp' 'icmp_ln25_1' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 199 [1/1] (0.78ns)   --->   "%icmp_ln25_2 = icmp_eq  i6 %select_ln71_1, i6 48" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 199 'icmp' 'icmp_ln25_2' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 200 [1/1] (0.78ns)   --->   "%icmp_ln25_3 = icmp_eq  i6 %select_ln71_1, i6 46" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 200 'icmp' 'icmp_ln25_3' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 201 [1/1] (0.78ns)   --->   "%icmp_ln25_4 = icmp_eq  i6 %select_ln71_1, i6 44" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 201 'icmp' 'icmp_ln25_4' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 202 [1/1] (0.78ns)   --->   "%icmp_ln25_5 = icmp_eq  i6 %select_ln71_1, i6 42" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 202 'icmp' 'icmp_ln25_5' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 203 [1/1] (0.78ns)   --->   "%icmp_ln25_6 = icmp_eq  i6 %select_ln71_1, i6 40" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 203 'icmp' 'icmp_ln25_6' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 204 [1/1] (0.78ns)   --->   "%icmp_ln25_7 = icmp_eq  i6 %select_ln71_1, i6 38" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 204 'icmp' 'icmp_ln25_7' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 205 [1/1] (0.78ns)   --->   "%icmp_ln25_8 = icmp_eq  i6 %select_ln71_1, i6 36" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 205 'icmp' 'icmp_ln25_8' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 206 [1/1] (0.78ns)   --->   "%icmp_ln25_9 = icmp_eq  i6 %select_ln71_1, i6 34" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 206 'icmp' 'icmp_ln25_9' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 207 [1/1] (0.78ns)   --->   "%icmp_ln25_10 = icmp_eq  i6 %select_ln71_1, i6 32" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 207 'icmp' 'icmp_ln25_10' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 208 [1/1] (0.78ns)   --->   "%icmp_ln25_11 = icmp_eq  i6 %select_ln71_1, i6 30" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 208 'icmp' 'icmp_ln25_11' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 209 [1/1] (0.78ns)   --->   "%icmp_ln25_12 = icmp_eq  i6 %select_ln71_1, i6 28" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 209 'icmp' 'icmp_ln25_12' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 210 [1/1] (0.78ns)   --->   "%icmp_ln25_13 = icmp_eq  i6 %select_ln71_1, i6 26" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 210 'icmp' 'icmp_ln25_13' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 211 [1/1] (0.78ns)   --->   "%icmp_ln25_14 = icmp_eq  i6 %select_ln71_1, i6 24" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 211 'icmp' 'icmp_ln25_14' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 212 [1/1] (0.78ns)   --->   "%icmp_ln25_15 = icmp_eq  i6 %select_ln71_1, i6 22" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 212 'icmp' 'icmp_ln25_15' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 213 [1/1] (0.78ns)   --->   "%icmp_ln25_16 = icmp_eq  i6 %select_ln71_1, i6 20" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 213 'icmp' 'icmp_ln25_16' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 214 [1/1] (0.78ns)   --->   "%icmp_ln25_17 = icmp_eq  i6 %select_ln71_1, i6 18" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 214 'icmp' 'icmp_ln25_17' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 215 [1/1] (0.78ns)   --->   "%icmp_ln25_18 = icmp_eq  i6 %select_ln71_1, i6 16" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 215 'icmp' 'icmp_ln25_18' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 216 [1/1] (0.78ns)   --->   "%icmp_ln25_19 = icmp_eq  i6 %select_ln71_1, i6 14" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 216 'icmp' 'icmp_ln25_19' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 217 [1/1] (0.78ns)   --->   "%icmp_ln25_20 = icmp_eq  i6 %select_ln71_1, i6 12" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 217 'icmp' 'icmp_ln25_20' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 218 [1/1] (0.78ns)   --->   "%icmp_ln25_21 = icmp_eq  i6 %select_ln71_1, i6 10" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 218 'icmp' 'icmp_ln25_21' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 219 [1/1] (0.78ns)   --->   "%icmp_ln25_22 = icmp_eq  i6 %select_ln71_1, i6 8" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 219 'icmp' 'icmp_ln25_22' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 220 [1/1] (0.78ns)   --->   "%icmp_ln25_23 = icmp_eq  i6 %select_ln71_1, i6 6" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 220 'icmp' 'icmp_ln25_23' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 221 [1/1] (0.78ns)   --->   "%icmp_ln25_24 = icmp_eq  i6 %select_ln71_1, i6 4" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 221 'icmp' 'icmp_ln25_24' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 222 [1/1] (0.28ns)   --->   "%or_ln25 = or i1 %icmp_ln25_1, i1 %icmp_ln25" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 222 'or' 'or_ln25' <Predicate = (!icmp_ln68)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 223 [1/1] (0.00ns)   --->   "%trunc_ln2 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln76_3, i32 2, i32 63" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 223 'partselect' 'trunc_ln2' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_1 : Operation 224 [1/1] (0.00ns)   --->   "%sext_ln126 = sext i62 %trunc_ln2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 224 'sext' 'sext_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_1 : Operation 225 [1/1] (0.00ns)   --->   "%gmem_addr_3 = getelementptr i32 %gmem, i64 %sext_ln126" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 225 'getelementptr' 'gmem_addr_3' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_1 : Operation 226 [1/1] (0.00ns) (grouped into LUT with out node or_ln25_5)   --->   "%or_ln25_1 = or i1 %icmp_ln25_2, i1 %or_ln25" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 226 'or' 'or_ln25_1' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 227 [1/1] (0.00ns) (grouped into LUT with out node or_ln25_5)   --->   "%or_ln25_2 = or i1 %icmp_ln25_3, i1 %or_ln25_1" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 227 'or' 'or_ln25_2' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 228 [1/1] (0.00ns) (grouped into LUT with out node or_ln25_5)   --->   "%or_ln25_3 = or i1 %icmp_ln25_4, i1 %or_ln25_2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 228 'or' 'or_ln25_3' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 229 [1/1] (0.00ns) (grouped into LUT with out node or_ln25_5)   --->   "%or_ln25_4 = or i1 %icmp_ln25_5, i1 %or_ln25_3" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 229 'or' 'or_ln25_4' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 230 [1/1] (0.28ns) (out node of the LUT)   --->   "%or_ln25_5 = or i1 %icmp_ln25_6, i1 %or_ln25_4" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 230 'or' 'or_ln25_5' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 231 [1/1] (0.00ns) (grouped into LUT with out node or_ln25_10)   --->   "%or_ln25_6 = or i1 %icmp_ln25_7, i1 %or_ln25_5" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 231 'or' 'or_ln25_6' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 232 [1/1] (0.00ns) (grouped into LUT with out node or_ln25_10)   --->   "%or_ln25_7 = or i1 %icmp_ln25_8, i1 %or_ln25_6" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 232 'or' 'or_ln25_7' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 233 [1/1] (0.00ns) (grouped into LUT with out node or_ln25_10)   --->   "%or_ln25_8 = or i1 %icmp_ln25_9, i1 %or_ln25_7" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 233 'or' 'or_ln25_8' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 234 [1/1] (0.00ns) (grouped into LUT with out node or_ln25_10)   --->   "%or_ln25_9 = or i1 %icmp_ln25_10, i1 %or_ln25_8" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 234 'or' 'or_ln25_9' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 235 [1/1] (0.28ns) (out node of the LUT)   --->   "%or_ln25_10 = or i1 %icmp_ln25_11, i1 %or_ln25_9" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 235 'or' 'or_ln25_10' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 236 [1/1] (0.00ns) (grouped into LUT with out node or_ln25_15)   --->   "%or_ln25_11 = or i1 %icmp_ln25_12, i1 %or_ln25_10" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 236 'or' 'or_ln25_11' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 237 [1/1] (0.00ns) (grouped into LUT with out node or_ln25_15)   --->   "%or_ln25_12 = or i1 %icmp_ln25_13, i1 %or_ln25_11" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 237 'or' 'or_ln25_12' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 238 [1/1] (0.00ns) (grouped into LUT with out node or_ln25_15)   --->   "%or_ln25_13 = or i1 %icmp_ln25_14, i1 %or_ln25_12" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 238 'or' 'or_ln25_13' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 239 [1/1] (0.00ns) (grouped into LUT with out node or_ln25_15)   --->   "%or_ln25_14 = or i1 %icmp_ln25_15, i1 %or_ln25_13" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 239 'or' 'or_ln25_14' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 240 [1/1] (0.28ns) (out node of the LUT)   --->   "%or_ln25_15 = or i1 %icmp_ln25_16, i1 %or_ln25_14" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 240 'or' 'or_ln25_15' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 241 [1/1] (0.00ns) (grouped into LUT with out node or_ln25_20)   --->   "%or_ln25_16 = or i1 %icmp_ln25_17, i1 %or_ln25_15" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 241 'or' 'or_ln25_16' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 242 [1/1] (0.00ns) (grouped into LUT with out node or_ln25_20)   --->   "%or_ln25_17 = or i1 %icmp_ln25_18, i1 %or_ln25_16" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 242 'or' 'or_ln25_17' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 243 [1/1] (0.00ns) (grouped into LUT with out node or_ln25_20)   --->   "%or_ln25_18 = or i1 %icmp_ln25_19, i1 %or_ln25_17" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 243 'or' 'or_ln25_18' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 244 [1/1] (0.00ns) (grouped into LUT with out node or_ln25_20)   --->   "%or_ln25_19 = or i1 %icmp_ln25_20, i1 %or_ln25_18" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 244 'or' 'or_ln25_19' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 245 [1/1] (0.28ns) (out node of the LUT)   --->   "%or_ln25_20 = or i1 %icmp_ln25_21, i1 %or_ln25_19" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 245 'or' 'or_ln25_20' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 246 [1/1] (0.00ns) (grouped into LUT with out node or_ln25_23)   --->   "%or_ln25_21 = or i1 %icmp_ln25_22, i1 %or_ln25_20" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 246 'or' 'or_ln25_21' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 247 [1/1] (0.00ns) (grouped into LUT with out node or_ln25_23)   --->   "%or_ln25_22 = or i1 %icmp_ln25_23, i1 %or_ln25_21" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 247 'or' 'or_ln25_22' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 248 [1/1] (0.28ns) (out node of the LUT)   --->   "%or_ln25_23 = or i1 %icmp_ln25_24, i1 %or_ln25_22" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 248 'or' 'or_ln25_23' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 249 [1/1] (0.00ns)   --->   "%br_ln25 = br i1 %or_ln25_23, void %arrayidx12312.case.53, void %arrayidx12312.exit" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 249 'br' 'br_ln25' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_1 : Operation 250 [1/1] (0.00ns)   --->   "%br_ln114 = br void %arrayidx12312.exit" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 250 'br' 'br_ln114' <Predicate = (!icmp_ln68 & !icmp_ln76 & !or_ln25_23)> <Delay = 0.00>
ST_1 : Operation 251 [1/1] (0.00ns)   --->   "%br_ln25 = br i1 %or_ln25_23, void %arrayidx12312.1.case.54, void %arrayidx12312.1.exit" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 251 'br' 'br_ln25' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_1 : Operation 252 [1/1] (0.00ns)   --->   "%br_ln114 = br void %arrayidx12312.1.exit" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 252 'br' 'br_ln114' <Predicate = (!icmp_ln68 & !icmp_ln76 & !or_ln25_23)> <Delay = 0.00>
ST_1 : Operation 253 [1/1] (0.00ns)   --->   "%br_ln25 = br i1 %or_ln25_23, void %arrayidx1649.case.53, void %arrayidx1649.exit" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 253 'br' 'br_ln25' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_1 : Operation 254 [1/1] (0.00ns)   --->   "%br_ln127 = br void %arrayidx1649.exit" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 254 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & !or_ln25_23)> <Delay = 0.00>
ST_1 : Operation 255 [1/1] (0.00ns)   --->   "%br_ln25 = br i1 %or_ln25_23, void %arrayidx1649.151.case.54, void %arrayidx1649.151.exit" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:25]   --->   Operation 255 'br' 'br_ln25' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_1 : Operation 256 [1/1] (0.00ns)   --->   "%br_ln127 = br void %arrayidx1649.151.exit" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 256 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & !or_ln25_23)> <Delay = 0.00>
ST_1 : Operation 257 [1/1] (0.78ns)   --->   "%switch_ln127 = switch i6 %select_ln71_1, void %arrayidx11811.1.case.54, i6 52, void %arrayidx11811.1.case.52, i6 4, void %arrayidx11811.1.case.4, i6 6, void %arrayidx11811.1.case.6, i6 8, void %arrayidx11811.1.case.8, i6 10, void %arrayidx11811.1.case.10, i6 12, void %arrayidx11811.1.case.12, i6 14, void %arrayidx11811.1.case.14, i6 16, void %arrayidx11811.1.case.16, i6 18, void %arrayidx11811.1.case.18, i6 20, void %arrayidx11811.1.case.20, i6 22, void %arrayidx11811.1.case.22, i6 24, void %arrayidx11811.1.case.24, i6 26, void %arrayidx11811.1.case.26, i6 28, void %arrayidx11811.1.case.28, i6 30, void %arrayidx11811.1.case.30, i6 32, void %arrayidx11811.1.case.32, i6 34, void %arrayidx11811.1.case.34, i6 36, void %arrayidx11811.1.case.36, i6 38, void %arrayidx11811.1.case.38, i6 40, void %arrayidx11811.1.case.40, i6 42, void %arrayidx11811.1.case.42, i6 44, void %arrayidx11811.1.case.44, i6 46, void %arrayidx11811.1.case.46, i6 48, void %arrayidx11811.1.case.48, i6 50, void %arrayidx1649.151.exit.for.body232_crit_edge" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 257 'switch' 'switch_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.78>
ST_1 : Operation 258 [1/1] (0.78ns)   --->   "%add_ln71 = add i6 %select_ln71_1, i6 2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:71]   --->   Operation 258 'add' 'add_ln71' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 259 [1/1] (0.78ns)   --->   "%add_ln71_1 = add i5 %select_ln71, i5 1" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:71]   --->   Operation 259 'add' 'add_ln71_1' <Predicate = (!icmp_ln68)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.78> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 260 [1/1] (0.42ns)   --->   "%store_ln68 = store i10 %add_ln68, i10 %indvar_flatten" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 260 'store' 'store_ln68' <Predicate = (!icmp_ln68)> <Delay = 0.42>
ST_1 : Operation 261 [1/1] (0.42ns)   --->   "%store_ln68 = store i5 %select_ln68, i5 %indvar" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 261 'store' 'store_ln68' <Predicate = (!icmp_ln68)> <Delay = 0.42>
ST_1 : Operation 262 [1/1] (0.42ns)   --->   "%store_ln71 = store i5 %add_ln71_1, i5 %indvar1126" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:71]   --->   Operation 262 'store' 'store_ln71' <Predicate = (!icmp_ln68)> <Delay = 0.42>
ST_1 : Operation 263 [1/1] (0.42ns)   --->   "%store_ln71 = store i6 %add_ln71, i6 %col" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:71]   --->   Operation 263 'store' 'store_ln71' <Predicate = (!icmp_ln68)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 7.30>
ST_2 : Operation 264 [8/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_3, i64 2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 264 'readreq' 'empty_34' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_2 : Operation 265 [8/8] (7.30ns)   --->   "%empty_25 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i64 3" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 265 'readreq' 'empty_25' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 3 <SV = 2> <Delay = 7.30>
ST_3 : Operation 266 [1/1] (0.80ns)   --->   "%tmp3 = add i12 %empty_27, i12 111" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 266 'add' 'tmp3' <Predicate = (!icmp_ln68)> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 267 [1/1] (0.00ns)   --->   "%tmp3_cast = zext i12 %tmp3" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 267 'zext' 'tmp3_cast' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_3 : Operation 268 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%empty_32 = add i19 %tmp3_cast, i19 %phi_mul_read" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 268 'add' 'empty_32' <Predicate = (!icmp_ln68)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 269 [1/1] (0.69ns) (root node of TernaryAdder)   --->   "%add_ln76 = add i19 %empty_32, i19 %zext_ln76" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:76]   --->   Operation 269 'add' 'add_ln76' <Predicate = (!icmp_ln68)> <Delay = 0.69> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.34> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 270 [1/1] (0.00ns)   --->   "%shl_ln76_1 = bitconcatenate i21 @_ssdm_op_BitConcatenate.i21.i19.i2, i19 %add_ln76, i2 0" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:76]   --->   Operation 270 'bitconcatenate' 'shl_ln76_1' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_3 : Operation 271 [1/1] (0.00ns)   --->   "%zext_ln76_1 = zext i21 %shl_ln76_1" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:76]   --->   Operation 271 'zext' 'zext_ln76_1' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_3 : Operation 272 [1/1] (1.08ns)   --->   "%add_ln76_1 = add i64 %zext_ln76_1, i64 %inp_img_read" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:76]   --->   Operation 272 'add' 'add_ln76_1' <Predicate = (!icmp_ln68)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 273 [7/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_3, i64 2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 273 'readreq' 'empty_34' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_3 : Operation 274 [1/1] (0.00ns)   --->   "%trunc_ln126_1 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %add_ln76_1, i32 2, i32 63" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 274 'partselect' 'trunc_ln126_1' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_3 : Operation 275 [1/1] (0.00ns)   --->   "%sext_ln126_1 = sext i62 %trunc_ln126_1" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 275 'sext' 'sext_ln126_1' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_3 : Operation 276 [1/1] (0.00ns)   --->   "%gmem_addr_4 = getelementptr i32 %gmem, i64 %sext_ln126_1" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 276 'getelementptr' 'gmem_addr_4' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_3 : Operation 277 [7/8] (7.30ns)   --->   "%empty_25 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i64 3" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 277 'readreq' 'empty_25' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 4 <SV = 3> <Delay = 7.30>
ST_4 : Operation 278 [1/1] (0.80ns)   --->   "%tmp1 = add i12 %empty_27, i12 110" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 278 'add' 'tmp1' <Predicate = (!icmp_ln68)> <Delay = 0.80> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 279 [1/1] (0.00ns)   --->   "%tmp1_cast = zext i12 %tmp1" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 279 'zext' 'tmp1_cast' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_4 : Operation 280 [1/1] (0.88ns)   --->   "%empty_28 = add i19 %tmp1_cast, i19 %phi_mul_read" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 280 'add' 'empty_28' <Predicate = (!icmp_ln68)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 281 [1/1] (0.00ns)   --->   "%tmp_1 = bitconcatenate i21 @_ssdm_op_BitConcatenate.i21.i19.i2, i19 %empty_28, i2 0" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 281 'bitconcatenate' 'tmp_1' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_4 : Operation 282 [1/1] (0.00ns)   --->   "%p_cast10 = zext i21 %tmp_1" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 282 'zext' 'p_cast10' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_4 : Operation 283 [1/1] (1.08ns)   --->   "%empty_29 = add i64 %p_cast10, i64 %inp_img_read" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 283 'add' 'empty_29' <Predicate = (!icmp_ln68)> <Delay = 1.08> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.08> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 284 [1/1] (0.00ns)   --->   "%p_cast8 = partselect i62 @_ssdm_op_PartSelect.i62.i64.i32.i32, i64 %empty_29, i32 2, i32 63" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 284 'partselect' 'p_cast8' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_4 : Operation 285 [1/1] (0.00ns)   --->   "%p_cast8_cast = sext i62 %p_cast8" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 285 'sext' 'p_cast8_cast' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_4 : Operation 286 [1/1] (0.00ns)   --->   "%gmem_addr_2 = getelementptr i32 %gmem, i64 %p_cast8_cast" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 286 'getelementptr' 'gmem_addr_2' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_4 : Operation 287 [6/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_3, i64 2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 287 'readreq' 'empty_34' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 288 [8/8] (7.30ns)   --->   "%empty_35 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_4, i64 2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 288 'readreq' 'empty_35' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_4 : Operation 289 [6/8] (7.30ns)   --->   "%empty_25 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i64 3" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 289 'readreq' 'empty_25' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 5 <SV = 4> <Delay = 7.30>
ST_5 : Operation 290 [5/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_3, i64 2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 290 'readreq' 'empty_34' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 291 [7/8] (7.30ns)   --->   "%empty_35 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_4, i64 2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 291 'readreq' 'empty_35' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 292 [5/8] (7.30ns)   --->   "%empty_25 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i64 3" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 292 'readreq' 'empty_25' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 293 [8/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_2, i64 3" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 293 'readreq' 'empty_26' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 6 <SV = 5> <Delay = 7.30>
ST_6 : Operation 294 [4/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_3, i64 2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 294 'readreq' 'empty_34' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 295 [6/8] (7.30ns)   --->   "%empty_35 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_4, i64 2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 295 'readreq' 'empty_35' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 296 [4/8] (7.30ns)   --->   "%empty_25 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i64 3" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 296 'readreq' 'empty_25' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_6 : Operation 297 [7/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_2, i64 3" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 297 'readreq' 'empty_26' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 7.30>
ST_7 : Operation 298 [3/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_3, i64 2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 298 'readreq' 'empty_34' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 299 [5/8] (7.30ns)   --->   "%empty_35 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_4, i64 2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 299 'readreq' 'empty_35' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 300 [3/8] (7.30ns)   --->   "%empty_25 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i64 3" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 300 'readreq' 'empty_25' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 301 [6/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_2, i64 3" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 301 'readreq' 'empty_26' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 7.30>
ST_8 : Operation 302 [2/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_3, i64 2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 302 'readreq' 'empty_34' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 303 [4/8] (7.30ns)   --->   "%empty_35 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_4, i64 2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 303 'readreq' 'empty_35' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 304 [2/8] (7.30ns)   --->   "%empty_25 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i64 3" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 304 'readreq' 'empty_25' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_8 : Operation 305 [5/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_2, i64 3" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 305 'readreq' 'empty_26' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 7.30>
ST_9 : Operation 306 [1/8] (7.30ns)   --->   "%empty_34 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_3, i64 2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 306 'readreq' 'empty_34' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 307 [3/8] (7.30ns)   --->   "%empty_35 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_4, i64 2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 307 'readreq' 'empty_35' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 308 [1/8] (7.30ns)   --->   "%empty_25 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_1, i64 3" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 308 'readreq' 'empty_25' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_9 : Operation 309 [4/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_2, i64 3" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 309 'readreq' 'empty_26' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 7.30>
ST_10 : Operation 310 [1/1] (7.30ns)   --->   "%gmem_addr_3_read = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr_3" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 310 'read' 'gmem_addr_3_read' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 311 [2/8] (7.30ns)   --->   "%empty_35 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_4, i64 2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 311 'readreq' 'empty_35' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 312 [1/1] (7.30ns)   --->   "%gmem_addr_1_read = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr_1" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 312 'read' 'gmem_addr_1_read' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_10 : Operation 313 [3/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_2, i64 3" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 313 'readreq' 'empty_26' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 7.30>
ST_11 : Operation 314 [1/1] (7.30ns)   --->   "%gmem_addr_3_read_1 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr_3" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 314 'read' 'gmem_addr_3_read_1' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 315 [1/8] (7.30ns)   --->   "%empty_35 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_4, i64 2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 315 'readreq' 'empty_35' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 316 [1/1] (7.30ns)   --->   "%gmem_addr_1_read_1 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr_1" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 316 'read' 'gmem_addr_1_read_1' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 317 [2/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_2, i64 3" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 317 'readreq' 'empty_26' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 12 <SV = 11> <Delay = 7.30>
ST_12 : Operation 318 [1/1] (7.30ns)   --->   "%gmem_addr_4_read = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr_4" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 318 'read' 'gmem_addr_4_read' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 319 [1/1] (0.00ns)   --->   "%line_buffer_2D_21 = bitcast i32 %gmem_addr_4_read" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 319 'bitcast' 'line_buffer_2D_21' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_12 : Operation 320 [1/1] (7.30ns)   --->   "%gmem_addr_1_read_2 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr_1" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 320 'read' 'gmem_addr_1_read_2' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 321 [1/8] (7.30ns)   --->   "%empty_26 = readreq i1 @_ssdm_op_ReadReq.m_axi.p1i32, i32 %gmem_addr_2, i64 3" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 321 'readreq' 'empty_26' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 13 <SV = 12> <Delay = 7.30>
ST_13 : Operation 322 [1/1] (7.30ns)   --->   "%gmem_addr_4_read_1 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr_4" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 322 'read' 'gmem_addr_4_read_1' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_13 : Operation 323 [1/1] (7.30ns)   --->   "%gmem_addr_2_read = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr_2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 323 'read' 'gmem_addr_2_read' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 14 <SV = 13> <Delay = 7.30>
ST_14 : Operation 324 [1/1] (7.30ns)   --->   "%gmem_addr_2_read_1 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr_2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 324 'read' 'gmem_addr_2_read_1' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 15 <SV = 14> <Delay = 7.30>
ST_15 : Operation 325 [1/1] (0.00ns)   --->   "%p_load142 = load i32 %empty_22"   --->   Operation 325 'load' 'p_load142' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 326 [1/1] (0.00ns)   --->   "%p_load141 = load i32 %empty_23"   --->   Operation 326 'load' 'p_load141' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 327 [1/1] (0.00ns)   --->   "%p_load = load i32 %empty_24"   --->   Operation 327 'load' 'p_load' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 328 [1/1] (0.00ns)   --->   "%mux_case_3_out_load = load i32 %mux_case_3_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 328 'load' 'mux_case_3_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 4)> <Delay = 0.00>
ST_15 : Operation 329 [1/1] (0.00ns)   --->   "%mux_case_5_out_load = load i32 %mux_case_5_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 329 'load' 'mux_case_5_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 6)> <Delay = 0.00>
ST_15 : Operation 330 [1/1] (0.00ns)   --->   "%mux_case_7_out_load = load i32 %mux_case_7_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 330 'load' 'mux_case_7_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 8)> <Delay = 0.00>
ST_15 : Operation 331 [1/1] (0.00ns)   --->   "%mux_case_9_out_load = load i32 %mux_case_9_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 331 'load' 'mux_case_9_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 10)> <Delay = 0.00>
ST_15 : Operation 332 [1/1] (0.00ns)   --->   "%mux_case_11_out_load = load i32 %mux_case_11_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 332 'load' 'mux_case_11_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 12)> <Delay = 0.00>
ST_15 : Operation 333 [1/1] (0.00ns)   --->   "%mux_case_13_out_load = load i32 %mux_case_13_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 333 'load' 'mux_case_13_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 14)> <Delay = 0.00>
ST_15 : Operation 334 [1/1] (0.00ns)   --->   "%mux_case_15_out_load = load i32 %mux_case_15_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 334 'load' 'mux_case_15_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 16)> <Delay = 0.00>
ST_15 : Operation 335 [1/1] (0.00ns)   --->   "%mux_case_17_out_load = load i32 %mux_case_17_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 335 'load' 'mux_case_17_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 18)> <Delay = 0.00>
ST_15 : Operation 336 [1/1] (0.00ns)   --->   "%mux_case_19_out_load = load i32 %mux_case_19_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 336 'load' 'mux_case_19_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 20)> <Delay = 0.00>
ST_15 : Operation 337 [1/1] (0.00ns)   --->   "%mux_case_21_out_load = load i32 %mux_case_21_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 337 'load' 'mux_case_21_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 22)> <Delay = 0.00>
ST_15 : Operation 338 [1/1] (0.00ns)   --->   "%mux_case_23_out_load = load i32 %mux_case_23_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 338 'load' 'mux_case_23_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 24)> <Delay = 0.00>
ST_15 : Operation 339 [1/1] (0.00ns)   --->   "%mux_case_25_out_load = load i32 %mux_case_25_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 339 'load' 'mux_case_25_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 26)> <Delay = 0.00>
ST_15 : Operation 340 [1/1] (0.00ns)   --->   "%mux_case_27_out_load = load i32 %mux_case_27_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 340 'load' 'mux_case_27_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 28)> <Delay = 0.00>
ST_15 : Operation 341 [1/1] (0.00ns)   --->   "%mux_case_29_out_load = load i32 %mux_case_29_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 341 'load' 'mux_case_29_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 30)> <Delay = 0.00>
ST_15 : Operation 342 [1/1] (0.00ns)   --->   "%mux_case_31_out_load = load i32 %mux_case_31_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 342 'load' 'mux_case_31_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 32)> <Delay = 0.00>
ST_15 : Operation 343 [1/1] (0.00ns)   --->   "%mux_case_33_out_load = load i32 %mux_case_33_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 343 'load' 'mux_case_33_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 34)> <Delay = 0.00>
ST_15 : Operation 344 [1/1] (0.00ns)   --->   "%mux_case_35_out_load = load i32 %mux_case_35_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 344 'load' 'mux_case_35_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 36)> <Delay = 0.00>
ST_15 : Operation 345 [1/1] (0.00ns)   --->   "%mux_case_37_out_load = load i32 %mux_case_37_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 345 'load' 'mux_case_37_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 38)> <Delay = 0.00>
ST_15 : Operation 346 [1/1] (0.00ns)   --->   "%mux_case_39_out_load = load i32 %mux_case_39_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 346 'load' 'mux_case_39_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 40)> <Delay = 0.00>
ST_15 : Operation 347 [1/1] (0.00ns)   --->   "%mux_case_41_out_load = load i32 %mux_case_41_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 347 'load' 'mux_case_41_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 42)> <Delay = 0.00>
ST_15 : Operation 348 [1/1] (0.00ns)   --->   "%mux_case_43_out_load = load i32 %mux_case_43_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 348 'load' 'mux_case_43_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 44)> <Delay = 0.00>
ST_15 : Operation 349 [1/1] (0.00ns)   --->   "%mux_case_45_out_load = load i32 %mux_case_45_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 349 'load' 'mux_case_45_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 46)> <Delay = 0.00>
ST_15 : Operation 350 [1/1] (0.00ns)   --->   "%mux_case_47_out_load = load i32 %mux_case_47_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 350 'load' 'mux_case_47_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 48)> <Delay = 0.00>
ST_15 : Operation 351 [1/1] (0.00ns)   --->   "%mux_case_49_out_load = load i32 %mux_case_49_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 351 'load' 'mux_case_49_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 50)> <Delay = 0.00>
ST_15 : Operation 352 [1/1] (0.00ns)   --->   "%mux_case_51_out_load = load i32 %mux_case_51_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 352 'load' 'mux_case_51_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 52)> <Delay = 0.00>
ST_15 : Operation 353 [1/1] (0.00ns)   --->   "%mux_case_53_out_load = load i32 %mux_case_53_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 353 'load' 'mux_case_53_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 54)> <Delay = 0.00>
ST_15 : Operation 354 [1/1] (0.00ns)   --->   "%mux_case_4_out_load = load i32 %mux_case_4_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 354 'load' 'mux_case_4_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 4)> <Delay = 0.00>
ST_15 : Operation 355 [1/1] (0.00ns)   --->   "%mux_case_6_out_load = load i32 %mux_case_6_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 355 'load' 'mux_case_6_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 6)> <Delay = 0.00>
ST_15 : Operation 356 [1/1] (0.00ns)   --->   "%mux_case_8_out_load = load i32 %mux_case_8_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 356 'load' 'mux_case_8_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 8)> <Delay = 0.00>
ST_15 : Operation 357 [1/1] (0.00ns)   --->   "%mux_case_10_out_load = load i32 %mux_case_10_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 357 'load' 'mux_case_10_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 10)> <Delay = 0.00>
ST_15 : Operation 358 [1/1] (0.00ns)   --->   "%mux_case_12_out_load = load i32 %mux_case_12_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 358 'load' 'mux_case_12_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 12)> <Delay = 0.00>
ST_15 : Operation 359 [1/1] (0.00ns)   --->   "%mux_case_14_out_load = load i32 %mux_case_14_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 359 'load' 'mux_case_14_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 14)> <Delay = 0.00>
ST_15 : Operation 360 [1/1] (0.00ns)   --->   "%mux_case_16_out_load = load i32 %mux_case_16_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 360 'load' 'mux_case_16_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 16)> <Delay = 0.00>
ST_15 : Operation 361 [1/1] (0.00ns)   --->   "%mux_case_18_out_load = load i32 %mux_case_18_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 361 'load' 'mux_case_18_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 18)> <Delay = 0.00>
ST_15 : Operation 362 [1/1] (0.00ns)   --->   "%mux_case_20_out_load = load i32 %mux_case_20_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 362 'load' 'mux_case_20_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 20)> <Delay = 0.00>
ST_15 : Operation 363 [1/1] (0.00ns)   --->   "%mux_case_22_out_load = load i32 %mux_case_22_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 363 'load' 'mux_case_22_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 22)> <Delay = 0.00>
ST_15 : Operation 364 [1/1] (0.00ns)   --->   "%mux_case_24_out_load = load i32 %mux_case_24_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 364 'load' 'mux_case_24_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 24)> <Delay = 0.00>
ST_15 : Operation 365 [1/1] (0.00ns)   --->   "%mux_case_26_out_load = load i32 %mux_case_26_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 365 'load' 'mux_case_26_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 26)> <Delay = 0.00>
ST_15 : Operation 366 [1/1] (0.00ns)   --->   "%mux_case_28_out_load = load i32 %mux_case_28_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 366 'load' 'mux_case_28_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 28)> <Delay = 0.00>
ST_15 : Operation 367 [1/1] (0.00ns)   --->   "%mux_case_30_out_load = load i32 %mux_case_30_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 367 'load' 'mux_case_30_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 30)> <Delay = 0.00>
ST_15 : Operation 368 [1/1] (0.00ns)   --->   "%mux_case_32_out_load = load i32 %mux_case_32_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 368 'load' 'mux_case_32_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 32)> <Delay = 0.00>
ST_15 : Operation 369 [1/1] (0.00ns)   --->   "%mux_case_34_out_load = load i32 %mux_case_34_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 369 'load' 'mux_case_34_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 34)> <Delay = 0.00>
ST_15 : Operation 370 [1/1] (0.00ns)   --->   "%mux_case_36_out_load = load i32 %mux_case_36_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 370 'load' 'mux_case_36_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 36)> <Delay = 0.00>
ST_15 : Operation 371 [1/1] (0.00ns)   --->   "%mux_case_38_out_load = load i32 %mux_case_38_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 371 'load' 'mux_case_38_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 38)> <Delay = 0.00>
ST_15 : Operation 372 [1/1] (0.00ns)   --->   "%mux_case_40_out_load = load i32 %mux_case_40_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 372 'load' 'mux_case_40_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 40)> <Delay = 0.00>
ST_15 : Operation 373 [1/1] (0.00ns)   --->   "%mux_case_42_out_load = load i32 %mux_case_42_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 373 'load' 'mux_case_42_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 42)> <Delay = 0.00>
ST_15 : Operation 374 [1/1] (0.00ns)   --->   "%mux_case_44_out_load = load i32 %mux_case_44_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 374 'load' 'mux_case_44_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 44)> <Delay = 0.00>
ST_15 : Operation 375 [1/1] (0.00ns)   --->   "%mux_case_46_out_load = load i32 %mux_case_46_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 375 'load' 'mux_case_46_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 46)> <Delay = 0.00>
ST_15 : Operation 376 [1/1] (0.00ns)   --->   "%mux_case_48_out_load = load i32 %mux_case_48_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 376 'load' 'mux_case_48_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 48)> <Delay = 0.00>
ST_15 : Operation 377 [1/1] (0.00ns)   --->   "%mux_case_50_out_load = load i32 %mux_case_50_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 377 'load' 'mux_case_50_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 50)> <Delay = 0.00>
ST_15 : Operation 378 [1/1] (0.00ns)   --->   "%mux_case_52_out_load = load i32 %mux_case_52_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 378 'load' 'mux_case_52_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 52)> <Delay = 0.00>
ST_15 : Operation 379 [1/1] (0.00ns)   --->   "%mux_case_54_out_load = load i32 %mux_case_54_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 379 'load' 'mux_case_54_out_load' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 54)> <Delay = 0.00>
ST_15 : Operation 380 [1/1] (0.90ns)   --->   "%line_buffer_2D_18 = sparsemux i32 @_ssdm_op_SparseMux.ap_auto.26float.float.i6, i6 4, i32 %mux_case_3_out_load, i6 6, i32 %mux_case_5_out_load, i6 8, i32 %mux_case_7_out_load, i6 10, i32 %mux_case_9_out_load, i6 12, i32 %mux_case_11_out_load, i6 14, i32 %mux_case_13_out_load, i6 16, i32 %mux_case_15_out_load, i6 18, i32 %mux_case_17_out_load, i6 20, i32 %mux_case_19_out_load, i6 22, i32 %mux_case_21_out_load, i6 24, i32 %mux_case_23_out_load, i6 26, i32 %mux_case_25_out_load, i6 28, i32 %mux_case_27_out_load, i6 30, i32 %mux_case_29_out_load, i6 32, i32 %mux_case_31_out_load, i6 34, i32 %mux_case_33_out_load, i6 36, i32 %mux_case_35_out_load, i6 38, i32 %mux_case_37_out_load, i6 40, i32 %mux_case_39_out_load, i6 42, i32 %mux_case_41_out_load, i6 44, i32 %mux_case_43_out_load, i6 46, i32 %mux_case_45_out_load, i6 48, i32 %mux_case_47_out_load, i6 50, i32 %mux_case_49_out_load, i6 52, i32 %mux_case_51_out_load, i6 54, i32 %mux_case_53_out_load, i32 <undef>, i6 %select_ln71_1" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 380 'sparsemux' 'line_buffer_2D_18' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.90> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 149 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 0.90> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 381 [1/1] (0.00ns)   --->   "%line_buffer_2D_19 = bitcast i32 %gmem_addr_3_read" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 381 'bitcast' 'line_buffer_2D_19' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_15 : Operation 382 [1/1] (0.00ns)   --->   "%line_buffer_2D_20 = bitcast i32 %gmem_addr_3_read_1" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 382 'bitcast' 'line_buffer_2D_20' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_15 : Operation 383 [1/1] (0.00ns)   --->   "%line_buffer_2D_22 = bitcast i32 %gmem_addr_4_read_1" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 383 'bitcast' 'line_buffer_2D_22' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.00>
ST_15 : Operation 384 [1/1] (0.90ns)   --->   "%line_buffer_2D_10 = sparsemux i32 @_ssdm_op_SparseMux.ap_auto.26float.float.i6, i6 4, i32 %mux_case_4_out_load, i6 6, i32 %mux_case_6_out_load, i6 8, i32 %mux_case_8_out_load, i6 10, i32 %mux_case_10_out_load, i6 12, i32 %mux_case_12_out_load, i6 14, i32 %mux_case_14_out_load, i6 16, i32 %mux_case_16_out_load, i6 18, i32 %mux_case_18_out_load, i6 20, i32 %mux_case_20_out_load, i6 22, i32 %mux_case_22_out_load, i6 24, i32 %mux_case_24_out_load, i6 26, i32 %mux_case_26_out_load, i6 28, i32 %mux_case_28_out_load, i6 30, i32 %mux_case_30_out_load, i6 32, i32 %mux_case_32_out_load, i6 34, i32 %mux_case_34_out_load, i6 36, i32 %mux_case_36_out_load, i6 38, i32 %mux_case_38_out_load, i6 40, i32 %mux_case_40_out_load, i6 42, i32 %mux_case_42_out_load, i6 44, i32 %mux_case_44_out_load, i6 46, i32 %mux_case_46_out_load, i6 48, i32 %mux_case_48_out_load, i6 50, i32 %mux_case_50_out_load, i6 52, i32 %mux_case_52_out_load, i6 54, i32 %mux_case_54_out_load, i32 <undef>, i6 %select_ln71_1" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 384 'sparsemux' 'line_buffer_2D_10' <Predicate = (!icmp_ln68 & !icmp_ln76)> <Delay = 0.90> <CoreInst = "BinarySparseMux_DontCare">   --->   Core 149 'BinarySparseMux_DontCare' <Latency = 0> <II = 1> <Delay = 0.90> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 385 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_50_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 385 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 50)> <Delay = 0.42>
ST_15 : Operation 386 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_49_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 386 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 50)> <Delay = 0.42>
ST_15 : Operation 387 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 387 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 50)> <Delay = 0.42>
ST_15 : Operation 388 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_48_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 388 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 48)> <Delay = 0.42>
ST_15 : Operation 389 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_47_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 389 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 48)> <Delay = 0.42>
ST_15 : Operation 390 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 390 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 48)> <Delay = 0.42>
ST_15 : Operation 391 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_46_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 391 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 46)> <Delay = 0.42>
ST_15 : Operation 392 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_45_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 392 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 46)> <Delay = 0.42>
ST_15 : Operation 393 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 393 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 46)> <Delay = 0.42>
ST_15 : Operation 394 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_44_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 394 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 44)> <Delay = 0.42>
ST_15 : Operation 395 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_43_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 395 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 44)> <Delay = 0.42>
ST_15 : Operation 396 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 396 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 44)> <Delay = 0.42>
ST_15 : Operation 397 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_42_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 397 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 42)> <Delay = 0.42>
ST_15 : Operation 398 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_41_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 398 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 42)> <Delay = 0.42>
ST_15 : Operation 399 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 399 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 42)> <Delay = 0.42>
ST_15 : Operation 400 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_40_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 400 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 40)> <Delay = 0.42>
ST_15 : Operation 401 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_39_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 401 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 40)> <Delay = 0.42>
ST_15 : Operation 402 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 402 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 40)> <Delay = 0.42>
ST_15 : Operation 403 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_38_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 403 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 38)> <Delay = 0.42>
ST_15 : Operation 404 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_37_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 404 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 38)> <Delay = 0.42>
ST_15 : Operation 405 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 405 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 38)> <Delay = 0.42>
ST_15 : Operation 406 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_36_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 406 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 36)> <Delay = 0.42>
ST_15 : Operation 407 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_35_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 407 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 36)> <Delay = 0.42>
ST_15 : Operation 408 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 408 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 36)> <Delay = 0.42>
ST_15 : Operation 409 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_34_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 409 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 34)> <Delay = 0.42>
ST_15 : Operation 410 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_33_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 410 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 34)> <Delay = 0.42>
ST_15 : Operation 411 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 411 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 34)> <Delay = 0.42>
ST_15 : Operation 412 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_32_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 412 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 32)> <Delay = 0.42>
ST_15 : Operation 413 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_31_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 413 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 32)> <Delay = 0.42>
ST_15 : Operation 414 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 414 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 32)> <Delay = 0.42>
ST_15 : Operation 415 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_30_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 415 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 30)> <Delay = 0.42>
ST_15 : Operation 416 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_29_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 416 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 30)> <Delay = 0.42>
ST_15 : Operation 417 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 417 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 30)> <Delay = 0.42>
ST_15 : Operation 418 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_28_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 418 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 28)> <Delay = 0.42>
ST_15 : Operation 419 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_27_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 419 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 28)> <Delay = 0.42>
ST_15 : Operation 420 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 420 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 28)> <Delay = 0.42>
ST_15 : Operation 421 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_26_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 421 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 26)> <Delay = 0.42>
ST_15 : Operation 422 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_25_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 422 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 26)> <Delay = 0.42>
ST_15 : Operation 423 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 423 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 26)> <Delay = 0.42>
ST_15 : Operation 424 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_24_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 424 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 24)> <Delay = 0.42>
ST_15 : Operation 425 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_23_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 425 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 24)> <Delay = 0.42>
ST_15 : Operation 426 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 426 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 24)> <Delay = 0.42>
ST_15 : Operation 427 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_22_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 427 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 22)> <Delay = 0.42>
ST_15 : Operation 428 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_21_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 428 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 22)> <Delay = 0.42>
ST_15 : Operation 429 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 429 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 22)> <Delay = 0.42>
ST_15 : Operation 430 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_20_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 430 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 20)> <Delay = 0.42>
ST_15 : Operation 431 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_19_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 431 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 20)> <Delay = 0.42>
ST_15 : Operation 432 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 432 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 20)> <Delay = 0.42>
ST_15 : Operation 433 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_18_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 433 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 18)> <Delay = 0.42>
ST_15 : Operation 434 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_17_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 434 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 18)> <Delay = 0.42>
ST_15 : Operation 435 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 435 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 18)> <Delay = 0.42>
ST_15 : Operation 436 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_16_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 436 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 16)> <Delay = 0.42>
ST_15 : Operation 437 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_15_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 437 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 16)> <Delay = 0.42>
ST_15 : Operation 438 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 438 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 16)> <Delay = 0.42>
ST_15 : Operation 439 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_14_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 439 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 14)> <Delay = 0.42>
ST_15 : Operation 440 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_13_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 440 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 14)> <Delay = 0.42>
ST_15 : Operation 441 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 441 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 14)> <Delay = 0.42>
ST_15 : Operation 442 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_12_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 442 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 12)> <Delay = 0.42>
ST_15 : Operation 443 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_11_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 443 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 12)> <Delay = 0.42>
ST_15 : Operation 444 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 444 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 12)> <Delay = 0.42>
ST_15 : Operation 445 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_10_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 445 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 10)> <Delay = 0.42>
ST_15 : Operation 446 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_9_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 446 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 10)> <Delay = 0.42>
ST_15 : Operation 447 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 447 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 10)> <Delay = 0.42>
ST_15 : Operation 448 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_8_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 448 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 8)> <Delay = 0.42>
ST_15 : Operation 449 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_7_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 449 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 8)> <Delay = 0.42>
ST_15 : Operation 450 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 450 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 8)> <Delay = 0.42>
ST_15 : Operation 451 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_6_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 451 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 6)> <Delay = 0.42>
ST_15 : Operation 452 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_5_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 452 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 6)> <Delay = 0.42>
ST_15 : Operation 453 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 453 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 6)> <Delay = 0.42>
ST_15 : Operation 454 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_4_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 454 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 4)> <Delay = 0.42>
ST_15 : Operation 455 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_3_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 455 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 4)> <Delay = 0.42>
ST_15 : Operation 456 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 456 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 4)> <Delay = 0.42>
ST_15 : Operation 457 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_52_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 457 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 52)> <Delay = 0.42>
ST_15 : Operation 458 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_51_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 458 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 52)> <Delay = 0.42>
ST_15 : Operation 459 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 459 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 == 52)> <Delay = 0.42>
ST_15 : Operation 460 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_22, i32 %mux_case_54_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 460 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 != 52 & select_ln71_1 != 4 & select_ln71_1 != 6 & select_ln71_1 != 8 & select_ln71_1 != 10 & select_ln71_1 != 12 & select_ln71_1 != 14 & select_ln71_1 != 16 & select_ln71_1 != 18 & select_ln71_1 != 20 & select_ln71_1 != 22 & select_ln71_1 != 24 & select_ln71_1 != 26 & select_ln71_1 != 28 & select_ln71_1 != 30 & select_ln71_1 != 32 & select_ln71_1 != 34 & select_ln71_1 != 36 & select_ln71_1 != 38 & select_ln71_1 != 40 & select_ln71_1 != 42 & select_ln71_1 != 44 & select_ln71_1 != 46 & select_ln71_1 != 48 & select_ln71_1 != 50)> <Delay = 0.42>
ST_15 : Operation 461 [1/1] (0.42ns)   --->   "%store_ln126 = store i32 %line_buffer_2D_21, i32 %mux_case_53_out" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:126]   --->   Operation 461 'store' 'store_ln126' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 != 52 & select_ln71_1 != 4 & select_ln71_1 != 6 & select_ln71_1 != 8 & select_ln71_1 != 10 & select_ln71_1 != 12 & select_ln71_1 != 14 & select_ln71_1 != 16 & select_ln71_1 != 18 & select_ln71_1 != 20 & select_ln71_1 != 22 & select_ln71_1 != 24 & select_ln71_1 != 26 & select_ln71_1 != 28 & select_ln71_1 != 30 & select_ln71_1 != 32 & select_ln71_1 != 34 & select_ln71_1 != 36 & select_ln71_1 != 38 & select_ln71_1 != 40 & select_ln71_1 != 42 & select_ln71_1 != 44 & select_ln71_1 != 46 & select_ln71_1 != 48 & select_ln71_1 != 50)> <Delay = 0.42>
ST_15 : Operation 462 [1/1] (0.42ns)   --->   "%br_ln127 = br void %for.body232" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:127]   --->   Operation 462 'br' 'br_ln127' <Predicate = (!icmp_ln68 & !icmp_ln76 & select_ln71_1 != 52 & select_ln71_1 != 4 & select_ln71_1 != 6 & select_ln71_1 != 8 & select_ln71_1 != 10 & select_ln71_1 != 12 & select_ln71_1 != 14 & select_ln71_1 != 16 & select_ln71_1 != 18 & select_ln71_1 != 20 & select_ln71_1 != 22 & select_ln71_1 != 24 & select_ln71_1 != 26 & select_ln71_1 != 28 & select_ln71_1 != 30 & select_ln71_1 != 32 & select_ln71_1 != 34 & select_ln71_1 != 36 & select_ln71_1 != 38 & select_ln71_1 != 40 & select_ln71_1 != 42 & select_ln71_1 != 44 & select_ln71_1 != 46 & select_ln71_1 != 48 & select_ln71_1 != 50)> <Delay = 0.42>
ST_15 : Operation 463 [1/1] (7.30ns)   --->   "%gmem_addr_2_read_2 = read i32 @_ssdm_op_Read.m_axi.p1i32, i32 %gmem_addr_2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 463 'read' 'gmem_addr_2_read_2' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 3> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 16 <SV = 15> <Delay = 3.20>
ST_16 : Operation 464 [1/1] (0.00ns)   --->   "%line_buffer_2D_4 = load i32 %line_buffer_2D"   --->   Operation 464 'load' 'line_buffer_2D_4' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 465 [1/1] (0.00ns)   --->   "%line_buffer_2D_5 = load i32 %line_buffer_2D_2"   --->   Operation 465 'load' 'line_buffer_2D_5' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 466 [1/1] (0.00ns)   --->   "%line_buffer_2D_3 = load i32 %line_buffer_2D_1"   --->   Operation 466 'load' 'line_buffer_2D_3' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 467 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %gmem"   --->   Operation 467 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 468 [1/1] (0.00ns)   --->   "%br_ln68 = br i1 %icmp_ln68, void %for.inc265, void %for.inc268.exitStub" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68]   --->   Operation 468 'br' 'br_ln68' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 469 [1/1] (0.00ns)   --->   "%line_buffer_2D_6 = bitcast i32 %gmem_addr_1_read" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 469 'bitcast' 'line_buffer_2D_6' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 0.00>
ST_16 : Operation 470 [1/1] (0.00ns)   --->   "%line_buffer_2D_7 = bitcast i32 %gmem_addr_1_read_1" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 470 'bitcast' 'line_buffer_2D_7' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 0.00>
ST_16 : Operation 471 [1/1] (0.00ns)   --->   "%line_buffer_2D_8 = bitcast i32 %gmem_addr_1_read_2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 471 'bitcast' 'line_buffer_2D_8' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 0.00>
ST_16 : Operation 472 [1/1] (0.00ns)   --->   "%line_buffer_2D_9 = bitcast i32 %gmem_addr_2_read" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 472 'bitcast' 'line_buffer_2D_9' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 0.00>
ST_16 : Operation 473 [1/1] (0.00ns)   --->   "%line_buffer_2D_16 = bitcast i32 %gmem_addr_2_read_1" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 473 'bitcast' 'line_buffer_2D_16' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 0.00>
ST_16 : Operation 474 [1/1] (0.00ns)   --->   "%line_buffer_2D_17 = bitcast i32 %gmem_addr_2_read_2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 474 'bitcast' 'line_buffer_2D_17' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 0.00>
ST_16 : Operation 475 [1/1] (0.42ns)   --->   "%store_ln42 = store i32 %line_buffer_2D_9, i32 %line_buffer_2D_1" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:42]   --->   Operation 475 'store' 'store_ln42' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 0.42>
ST_16 : Operation 476 [1/1] (0.42ns)   --->   "%store_ln42 = store i32 %line_buffer_2D_17, i32 %line_buffer_2D_2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:42]   --->   Operation 476 'store' 'store_ln42' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 0.42>
ST_16 : Operation 477 [1/1] (0.42ns)   --->   "%store_ln42 = store i32 %line_buffer_2D_16, i32 %line_buffer_2D" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:42]   --->   Operation 477 'store' 'store_ln42' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 0.42>
ST_16 : Operation 478 [1/1] (0.42ns)   --->   "%br_ln106 = br void %for.body232" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:106]   --->   Operation 478 'br' 'br_ln106' <Predicate = (!icmp_ln68 & icmp_ln76)> <Delay = 0.42>
ST_16 : Operation 479 [1/1] (0.00ns)   --->   "%tmp = phi i32 %line_buffer_2D_3, void %for.inc42, i32 %p_load142, void %arrayidx11811.1.case.54, i32 %p_load142, void %arrayidx11811.1.case.52, i32 %p_load142, void %arrayidx11811.1.case.48, i32 %p_load142, void %arrayidx11811.1.case.46, i32 %p_load142, void %arrayidx11811.1.case.44, i32 %p_load142, void %arrayidx11811.1.case.42, i32 %p_load142, void %arrayidx11811.1.case.40, i32 %p_load142, void %arrayidx11811.1.case.38, i32 %p_load142, void %arrayidx11811.1.case.36, i32 %p_load142, void %arrayidx11811.1.case.34, i32 %p_load142, void %arrayidx11811.1.case.32, i32 %p_load142, void %arrayidx11811.1.case.30, i32 %p_load142, void %arrayidx11811.1.case.28, i32 %p_load142, void %arrayidx11811.1.case.26, i32 %p_load142, void %arrayidx11811.1.case.24, i32 %p_load142, void %arrayidx11811.1.case.22, i32 %p_load142, void %arrayidx11811.1.case.20, i32 %p_load142, void %arrayidx11811.1.case.18, i32 %p_load142, void %arrayidx11811.1.case.16, i32 %p_load142, void %arrayidx11811.1.case.14, i32 %p_load142, void %arrayidx11811.1.case.12, i32 %p_load142, void %arrayidx11811.1.case.10, i32 %p_load142, void %arrayidx11811.1.case.8, i32 %p_load142, void %arrayidx11811.1.case.6, i32 %p_load142, void %arrayidx11811.1.case.4, i32 %p_load142, void %arrayidx1649.151.exit.for.body232_crit_edge"   --->   Operation 479 'phi' 'tmp' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_16 : Operation 480 [2/2] (2.78ns)   --->   "%tmp_5 = fcmp_ogt  i32 %tmp, i32 0" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 480 'fcmp' 'tmp_5' <Predicate = (!icmp_ln68)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 6.01>
ST_17 : Operation 481 [1/1] (0.00ns)   --->   "%tmp_16 = phi i32 %line_buffer_2D_17, void %for.inc42, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.54, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.52, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.48, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.46, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.44, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.42, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.40, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.38, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.36, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.34, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.32, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.30, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.28, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.26, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.24, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.22, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.20, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.18, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.16, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.14, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.12, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.10, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.8, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.6, i32 %line_buffer_2D_22, void %arrayidx11811.1.case.4, i32 %line_buffer_2D_22, void %arrayidx1649.151.exit.for.body232_crit_edge"   --->   Operation 481 'phi' 'tmp_16' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_17 : Operation 482 [1/1] (0.00ns)   --->   "%tmp_14 = phi i32 %line_buffer_2D_16, void %for.inc42, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.54, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.52, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.48, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.46, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.44, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.42, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.40, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.38, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.36, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.34, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.32, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.30, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.28, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.26, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.24, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.22, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.20, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.18, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.16, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.14, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.12, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.10, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.8, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.6, i32 %line_buffer_2D_21, void %arrayidx11811.1.case.4, i32 %line_buffer_2D_21, void %arrayidx1649.151.exit.for.body232_crit_edge"   --->   Operation 482 'phi' 'tmp_14' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_17 : Operation 483 [1/1] (0.00ns)   --->   "%tmp_12 = phi i32 %line_buffer_2D_9, void %for.inc42, i32 %p_load, void %arrayidx11811.1.case.54, i32 %p_load, void %arrayidx11811.1.case.52, i32 %p_load, void %arrayidx11811.1.case.48, i32 %p_load, void %arrayidx11811.1.case.46, i32 %p_load, void %arrayidx11811.1.case.44, i32 %p_load, void %arrayidx11811.1.case.42, i32 %p_load, void %arrayidx11811.1.case.40, i32 %p_load, void %arrayidx11811.1.case.38, i32 %p_load, void %arrayidx11811.1.case.36, i32 %p_load, void %arrayidx11811.1.case.34, i32 %p_load, void %arrayidx11811.1.case.32, i32 %p_load, void %arrayidx11811.1.case.30, i32 %p_load, void %arrayidx11811.1.case.28, i32 %p_load, void %arrayidx11811.1.case.26, i32 %p_load, void %arrayidx11811.1.case.24, i32 %p_load, void %arrayidx11811.1.case.22, i32 %p_load, void %arrayidx11811.1.case.20, i32 %p_load, void %arrayidx11811.1.case.18, i32 %p_load, void %arrayidx11811.1.case.16, i32 %p_load, void %arrayidx11811.1.case.14, i32 %p_load, void %arrayidx11811.1.case.12, i32 %p_load, void %arrayidx11811.1.case.10, i32 %p_load, void %arrayidx11811.1.case.8, i32 %p_load, void %arrayidx11811.1.case.6, i32 %p_load, void %arrayidx11811.1.case.4, i32 %p_load, void %arrayidx1649.151.exit.for.body232_crit_edge"   --->   Operation 483 'phi' 'tmp_12' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_17 : Operation 484 [1/1] (0.00ns)   --->   "%tmp_10 = phi i32 %line_buffer_2D_8, void %for.inc42, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.54, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.52, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.48, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.46, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.44, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.42, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.40, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.38, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.36, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.34, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.32, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.30, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.28, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.26, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.24, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.22, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.20, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.18, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.16, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.14, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.12, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.10, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.8, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.6, i32 %line_buffer_2D_20, void %arrayidx11811.1.case.4, i32 %line_buffer_2D_20, void %arrayidx1649.151.exit.for.body232_crit_edge"   --->   Operation 484 'phi' 'tmp_10' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_17 : Operation 485 [1/1] (0.00ns)   --->   "%tmp_8 = phi i32 %line_buffer_2D_7, void %for.inc42, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.54, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.52, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.48, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.46, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.44, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.42, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.40, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.38, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.36, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.34, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.32, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.30, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.28, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.26, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.24, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.22, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.20, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.18, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.16, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.14, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.12, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.10, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.8, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.6, i32 %line_buffer_2D_19, void %arrayidx11811.1.case.4, i32 %line_buffer_2D_19, void %arrayidx1649.151.exit.for.body232_crit_edge"   --->   Operation 485 'phi' 'tmp_8' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_17 : Operation 486 [1/1] (0.00ns)   --->   "%tmp_6 = phi i32 %line_buffer_2D_6, void %for.inc42, i32 %p_load141, void %arrayidx11811.1.case.54, i32 %p_load141, void %arrayidx11811.1.case.52, i32 %p_load141, void %arrayidx11811.1.case.48, i32 %p_load141, void %arrayidx11811.1.case.46, i32 %p_load141, void %arrayidx11811.1.case.44, i32 %p_load141, void %arrayidx11811.1.case.42, i32 %p_load141, void %arrayidx11811.1.case.40, i32 %p_load141, void %arrayidx11811.1.case.38, i32 %p_load141, void %arrayidx11811.1.case.36, i32 %p_load141, void %arrayidx11811.1.case.34, i32 %p_load141, void %arrayidx11811.1.case.32, i32 %p_load141, void %arrayidx11811.1.case.30, i32 %p_load141, void %arrayidx11811.1.case.28, i32 %p_load141, void %arrayidx11811.1.case.26, i32 %p_load141, void %arrayidx11811.1.case.24, i32 %p_load141, void %arrayidx11811.1.case.22, i32 %p_load141, void %arrayidx11811.1.case.20, i32 %p_load141, void %arrayidx11811.1.case.18, i32 %p_load141, void %arrayidx11811.1.case.16, i32 %p_load141, void %arrayidx11811.1.case.14, i32 %p_load141, void %arrayidx11811.1.case.12, i32 %p_load141, void %arrayidx11811.1.case.10, i32 %p_load141, void %arrayidx11811.1.case.8, i32 %p_load141, void %arrayidx11811.1.case.6, i32 %p_load141, void %arrayidx11811.1.case.4, i32 %p_load141, void %arrayidx1649.151.exit.for.body232_crit_edge"   --->   Operation 486 'phi' 'tmp_6' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_17 : Operation 487 [1/1] (0.00ns)   --->   "%tmp_2 = phi i32 %line_buffer_2D_4, void %for.inc42, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.54, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.52, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.48, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.46, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.44, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.42, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.40, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.38, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.36, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.34, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.32, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.30, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.28, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.26, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.24, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.22, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.20, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.18, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.16, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.14, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.12, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.10, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.8, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.6, i32 %line_buffer_2D_18, void %arrayidx11811.1.case.4, i32 %line_buffer_2D_18, void %arrayidx1649.151.exit.for.body232_crit_edge"   --->   Operation 487 'phi' 'tmp_2' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_17 : Operation 488 [1/1] (0.00ns)   --->   "%bitcast_ln156 = bitcast i32 %tmp" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 488 'bitcast' 'bitcast_ln156' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_17 : Operation 489 [1/1] (0.00ns)   --->   "%tmp_s = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 489 'partselect' 'tmp_s' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_17 : Operation 490 [1/1] (0.00ns)   --->   "%trunc_ln156 = trunc i32 %bitcast_ln156" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 490 'trunc' 'trunc_ln156' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_17 : Operation 491 [1/1] (0.76ns)   --->   "%icmp_ln156 = icmp_ne  i8 %tmp_s, i8 255" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 491 'icmp' 'icmp_ln156' <Predicate = (!icmp_ln68)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 492 [1/1] (0.92ns)   --->   "%icmp_ln156_1 = icmp_eq  i23 %trunc_ln156, i23 0" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 492 'icmp' 'icmp_ln156_1' <Predicate = (!icmp_ln68)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 493 [1/1] (0.00ns) (grouped into LUT with out node tmp_48)   --->   "%or_ln156 = or i1 %icmp_ln156_1, i1 %icmp_ln156" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 493 'or' 'or_ln156' <Predicate = (!icmp_ln68)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 494 [1/2] (2.78ns)   --->   "%tmp_5 = fcmp_ogt  i32 %tmp, i32 0" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 494 'fcmp' 'tmp_5' <Predicate = (!icmp_ln68)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 495 [1/1] (0.00ns) (grouped into LUT with out node tmp_48)   --->   "%and_ln156 = and i1 %or_ln156, i1 %tmp_5" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 495 'and' 'and_ln156' <Predicate = (!icmp_ln68)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 496 [1/1] (0.44ns) (out node of the LUT)   --->   "%tmp_48 = select i1 %and_ln156, i32 %tmp, i32 0" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 496 'select' 'tmp_48' <Predicate = (!icmp_ln68)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_17 : Operation 497 [2/2] (2.78ns)   --->   "%tmp_11 = fcmp_ogt  i32 %tmp_2, i32 %tmp_48" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 497 'fcmp' 'tmp_11' <Predicate = (!icmp_ln68)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 498 [1/1] (0.42ns)   --->   "%store_ln91 = store i32 %tmp_16, i32 %empty_24" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 498 'store' 'store_ln91' <Predicate = (!icmp_ln68)> <Delay = 0.42>
ST_17 : Operation 499 [1/1] (0.42ns)   --->   "%store_ln91 = store i32 %tmp_10, i32 %empty_23" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91]   --->   Operation 499 'store' 'store_ln91' <Predicate = (!icmp_ln68)> <Delay = 0.42>

State 18 <SV = 17> <Delay = 6.30>
ST_18 : Operation 500 [1/1] (0.00ns)   --->   "%tmp_4 = phi i32 %line_buffer_2D_5, void %for.inc42, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.54, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.52, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.48, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.46, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.44, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.42, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.40, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.38, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.36, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.34, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.32, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.30, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.28, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.26, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.24, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.22, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.20, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.18, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.16, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.14, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.12, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.10, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.8, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.6, i32 %line_buffer_2D_10, void %arrayidx11811.1.case.4, i32 %line_buffer_2D_10, void %arrayidx1649.151.exit.for.body232_crit_edge"   --->   Operation 500 'phi' 'tmp_4' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_18 : Operation 501 [1/1] (0.00ns)   --->   "%bitcast_ln156_1 = bitcast i32 %tmp_2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 501 'bitcast' 'bitcast_ln156_1' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_18 : Operation 502 [1/1] (0.00ns)   --->   "%tmp_9 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_1, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 502 'partselect' 'tmp_9' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_18 : Operation 503 [1/1] (0.00ns)   --->   "%trunc_ln156_1 = trunc i32 %bitcast_ln156_1" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 503 'trunc' 'trunc_ln156_1' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_18 : Operation 504 [1/1] (0.00ns)   --->   "%bitcast_ln156_2 = bitcast i32 %tmp_48" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 504 'bitcast' 'bitcast_ln156_2' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_18 : Operation 505 [1/1] (0.00ns)   --->   "%tmp_7 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_2, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 505 'partselect' 'tmp_7' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_18 : Operation 506 [1/1] (0.00ns)   --->   "%trunc_ln156_2 = trunc i32 %bitcast_ln156_2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 506 'trunc' 'trunc_ln156_2' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_18 : Operation 507 [1/1] (0.76ns)   --->   "%icmp_ln156_2 = icmp_ne  i8 %tmp_9, i8 255" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 507 'icmp' 'icmp_ln156_2' <Predicate = (!icmp_ln68)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 508 [1/1] (0.92ns)   --->   "%icmp_ln156_3 = icmp_eq  i23 %trunc_ln156_1, i23 0" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 508 'icmp' 'icmp_ln156_3' <Predicate = (!icmp_ln68)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 509 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_2)   --->   "%or_ln156_1 = or i1 %icmp_ln156_3, i1 %icmp_ln156_2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 509 'or' 'or_ln156_1' <Predicate = (!icmp_ln68)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 510 [1/1] (0.76ns)   --->   "%icmp_ln156_4 = icmp_ne  i8 %tmp_7, i8 255" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 510 'icmp' 'icmp_ln156_4' <Predicate = (!icmp_ln68)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 511 [1/1] (0.92ns)   --->   "%icmp_ln156_5 = icmp_eq  i23 %trunc_ln156_2, i23 0" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 511 'icmp' 'icmp_ln156_5' <Predicate = (!icmp_ln68)> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 512 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_2)   --->   "%or_ln156_2 = or i1 %icmp_ln156_5, i1 %icmp_ln156_4" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 512 'or' 'or_ln156_2' <Predicate = (!icmp_ln68)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 513 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_2)   --->   "%and_ln156_1 = and i1 %or_ln156_1, i1 %or_ln156_2" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 513 'and' 'and_ln156_1' <Predicate = (!icmp_ln68)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 514 [1/2] (2.78ns)   --->   "%tmp_11 = fcmp_ogt  i32 %tmp_2, i32 %tmp_48" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 514 'fcmp' 'tmp_11' <Predicate = (!icmp_ln68)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 515 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln156_2 = and i1 %and_ln156_1, i1 %tmp_11" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 515 'and' 'and_ln156_2' <Predicate = (!icmp_ln68)> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 516 [1/1] (0.44ns) (out node of the LUT)   --->   "%tmp_49 = select i1 %and_ln156_2, i32 %tmp_2, i32 %tmp_48" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 516 'select' 'tmp_49' <Predicate = (!icmp_ln68)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 517 [2/2] (2.78ns)   --->   "%tmp_17 = fcmp_ogt  i32 %tmp_4, i32 %tmp_49" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 517 'fcmp' 'tmp_17' <Predicate = (!icmp_ln68)> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 518 [1/1] (0.42ns)   --->   "%store_ln114 = store i32 %tmp_4, i32 %empty_22" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:114]   --->   Operation 518 'store' 'store_ln114' <Predicate = (!icmp_ln68)> <Delay = 0.42>

State 19 <SV = 18> <Delay = 6.30>
ST_19 : Operation 519 [1/1] (0.00ns)   --->   "%bitcast_ln156_3 = bitcast i32 %tmp_4" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 519 'bitcast' 'bitcast_ln156_3' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 520 [1/1] (0.00ns)   --->   "%tmp_13 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_3, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 520 'partselect' 'tmp_13' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 521 [1/1] (0.00ns)   --->   "%trunc_ln156_3 = trunc i32 %bitcast_ln156_3" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 521 'trunc' 'trunc_ln156_3' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 522 [1/1] (0.00ns)   --->   "%bitcast_ln156_4 = bitcast i32 %tmp_49" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 522 'bitcast' 'bitcast_ln156_4' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 523 [1/1] (0.00ns)   --->   "%tmp_15 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_4, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 523 'partselect' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 524 [1/1] (0.00ns)   --->   "%trunc_ln156_4 = trunc i32 %bitcast_ln156_4" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 524 'trunc' 'trunc_ln156_4' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 525 [1/1] (0.76ns)   --->   "%icmp_ln156_6 = icmp_ne  i8 %tmp_13, i8 255" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 525 'icmp' 'icmp_ln156_6' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 526 [1/1] (0.92ns)   --->   "%icmp_ln156_7 = icmp_eq  i23 %trunc_ln156_3, i23 0" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 526 'icmp' 'icmp_ln156_7' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 527 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_4)   --->   "%or_ln156_3 = or i1 %icmp_ln156_7, i1 %icmp_ln156_6" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 527 'or' 'or_ln156_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 528 [1/1] (0.76ns)   --->   "%icmp_ln156_8 = icmp_ne  i8 %tmp_15, i8 255" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 528 'icmp' 'icmp_ln156_8' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 529 [1/1] (0.92ns)   --->   "%icmp_ln156_9 = icmp_eq  i23 %trunc_ln156_4, i23 0" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 529 'icmp' 'icmp_ln156_9' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 530 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_4)   --->   "%or_ln156_4 = or i1 %icmp_ln156_9, i1 %icmp_ln156_8" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 530 'or' 'or_ln156_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 531 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_4)   --->   "%and_ln156_3 = and i1 %or_ln156_3, i1 %or_ln156_4" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 531 'and' 'and_ln156_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 532 [1/2] (2.78ns)   --->   "%tmp_17 = fcmp_ogt  i32 %tmp_4, i32 %tmp_49" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 532 'fcmp' 'tmp_17' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 533 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln156_4 = and i1 %and_ln156_3, i1 %tmp_17" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 533 'and' 'and_ln156_4' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 534 [1/1] (0.44ns) (out node of the LUT)   --->   "%tmp_50 = select i1 %and_ln156_4, i32 %tmp_4, i32 %tmp_49" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 534 'select' 'tmp_50' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_19 : Operation 535 [2/2] (2.78ns)   --->   "%tmp_20 = fcmp_ogt  i32 %tmp_6, i32 %tmp_50" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 535 'fcmp' 'tmp_20' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 6.30>
ST_20 : Operation 536 [1/1] (0.00ns)   --->   "%bitcast_ln156_5 = bitcast i32 %tmp_6" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 536 'bitcast' 'bitcast_ln156_5' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 537 [1/1] (0.00ns)   --->   "%tmp_18 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_5, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 537 'partselect' 'tmp_18' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 538 [1/1] (0.00ns)   --->   "%trunc_ln156_5 = trunc i32 %bitcast_ln156_5" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 538 'trunc' 'trunc_ln156_5' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 539 [1/1] (0.00ns)   --->   "%bitcast_ln156_6 = bitcast i32 %tmp_50" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 539 'bitcast' 'bitcast_ln156_6' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 540 [1/1] (0.00ns)   --->   "%tmp_19 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_6, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 540 'partselect' 'tmp_19' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 541 [1/1] (0.00ns)   --->   "%trunc_ln156_6 = trunc i32 %bitcast_ln156_6" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 541 'trunc' 'trunc_ln156_6' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 542 [1/1] (0.76ns)   --->   "%icmp_ln156_10 = icmp_ne  i8 %tmp_18, i8 255" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 542 'icmp' 'icmp_ln156_10' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 543 [1/1] (0.92ns)   --->   "%icmp_ln156_11 = icmp_eq  i23 %trunc_ln156_5, i23 0" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 543 'icmp' 'icmp_ln156_11' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 544 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_6)   --->   "%or_ln156_5 = or i1 %icmp_ln156_11, i1 %icmp_ln156_10" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 544 'or' 'or_ln156_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 545 [1/1] (0.76ns)   --->   "%icmp_ln156_12 = icmp_ne  i8 %tmp_19, i8 255" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 545 'icmp' 'icmp_ln156_12' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 546 [1/1] (0.92ns)   --->   "%icmp_ln156_13 = icmp_eq  i23 %trunc_ln156_6, i23 0" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 546 'icmp' 'icmp_ln156_13' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 547 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_6)   --->   "%or_ln156_6 = or i1 %icmp_ln156_13, i1 %icmp_ln156_12" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 547 'or' 'or_ln156_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 548 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_6)   --->   "%and_ln156_5 = and i1 %or_ln156_5, i1 %or_ln156_6" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 548 'and' 'and_ln156_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 549 [1/2] (2.78ns)   --->   "%tmp_20 = fcmp_ogt  i32 %tmp_6, i32 %tmp_50" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 549 'fcmp' 'tmp_20' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 550 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln156_6 = and i1 %and_ln156_5, i1 %tmp_20" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 550 'and' 'and_ln156_6' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 551 [1/1] (0.44ns) (out node of the LUT)   --->   "%tmp_51 = select i1 %and_ln156_6, i32 %tmp_6, i32 %tmp_50" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 551 'select' 'tmp_51' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 552 [2/2] (2.78ns)   --->   "%tmp_23 = fcmp_ogt  i32 %tmp_8, i32 %tmp_51" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 552 'fcmp' 'tmp_23' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 645 [1/1] (0.00ns)   --->   "%store_ln0 = store i32 %line_buffer_2D_3, i32 %line_buffer_2D_1_out"   --->   Operation 645 'store' 'store_ln0' <Predicate = (icmp_ln68)> <Delay = 0.00>
ST_20 : Operation 646 [1/1] (0.00ns)   --->   "%store_ln0 = store i32 %line_buffer_2D_5, i32 %line_buffer_2D_3_out"   --->   Operation 646 'store' 'store_ln0' <Predicate = (icmp_ln68)> <Delay = 0.00>
ST_20 : Operation 647 [1/1] (0.00ns)   --->   "%store_ln0 = store i32 %line_buffer_2D_4, i32 %line_buffer_2D_2_out"   --->   Operation 647 'store' 'store_ln0' <Predicate = (icmp_ln68)> <Delay = 0.00>
ST_20 : Operation 648 [1/1] (0.00ns)   --->   "%store_ln0 = store i32 %p_load, i32 %p_out"   --->   Operation 648 'store' 'store_ln0' <Predicate = (icmp_ln68)> <Delay = 0.00>
ST_20 : Operation 649 [1/1] (0.00ns)   --->   "%store_ln0 = store i32 %p_load141, i32 %p_out1"   --->   Operation 649 'store' 'store_ln0' <Predicate = (icmp_ln68)> <Delay = 0.00>
ST_20 : Operation 650 [1/1] (0.00ns)   --->   "%store_ln0 = store i32 %p_load142, i32 %p_out2"   --->   Operation 650 'store' 'store_ln0' <Predicate = (icmp_ln68)> <Delay = 0.00>
ST_20 : Operation 651 [1/1] (0.42ns)   --->   "%ret_ln0 = ret"   --->   Operation 651 'ret' 'ret_ln0' <Predicate = (icmp_ln68)> <Delay = 0.42>

State 21 <SV = 20> <Delay = 6.30>
ST_21 : Operation 553 [1/1] (0.00ns)   --->   "%bitcast_ln156_7 = bitcast i32 %tmp_8" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 553 'bitcast' 'bitcast_ln156_7' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 554 [1/1] (0.00ns)   --->   "%tmp_21 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_7, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 554 'partselect' 'tmp_21' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 555 [1/1] (0.00ns)   --->   "%trunc_ln156_7 = trunc i32 %bitcast_ln156_7" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 555 'trunc' 'trunc_ln156_7' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 556 [1/1] (0.00ns)   --->   "%bitcast_ln156_8 = bitcast i32 %tmp_51" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 556 'bitcast' 'bitcast_ln156_8' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 557 [1/1] (0.00ns)   --->   "%tmp_22 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_8, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 557 'partselect' 'tmp_22' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 558 [1/1] (0.00ns)   --->   "%trunc_ln156_8 = trunc i32 %bitcast_ln156_8" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 558 'trunc' 'trunc_ln156_8' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 559 [1/1] (0.76ns)   --->   "%icmp_ln156_14 = icmp_ne  i8 %tmp_21, i8 255" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 559 'icmp' 'icmp_ln156_14' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 560 [1/1] (0.92ns)   --->   "%icmp_ln156_15 = icmp_eq  i23 %trunc_ln156_7, i23 0" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 560 'icmp' 'icmp_ln156_15' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 561 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_8)   --->   "%or_ln156_7 = or i1 %icmp_ln156_15, i1 %icmp_ln156_14" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 561 'or' 'or_ln156_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 562 [1/1] (0.76ns)   --->   "%icmp_ln156_16 = icmp_ne  i8 %tmp_22, i8 255" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 562 'icmp' 'icmp_ln156_16' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 563 [1/1] (0.92ns)   --->   "%icmp_ln156_17 = icmp_eq  i23 %trunc_ln156_8, i23 0" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 563 'icmp' 'icmp_ln156_17' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 564 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_8)   --->   "%or_ln156_8 = or i1 %icmp_ln156_17, i1 %icmp_ln156_16" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 564 'or' 'or_ln156_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 565 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_8)   --->   "%and_ln156_7 = and i1 %or_ln156_7, i1 %or_ln156_8" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 565 'and' 'and_ln156_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 566 [1/2] (2.78ns)   --->   "%tmp_23 = fcmp_ogt  i32 %tmp_8, i32 %tmp_51" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 566 'fcmp' 'tmp_23' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 567 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln156_8 = and i1 %and_ln156_7, i1 %tmp_23" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 567 'and' 'and_ln156_8' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 568 [1/1] (0.44ns) (out node of the LUT)   --->   "%tmp_52 = select i1 %and_ln156_8, i32 %tmp_8, i32 %tmp_51" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 568 'select' 'tmp_52' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_21 : Operation 569 [2/2] (2.78ns)   --->   "%tmp_26 = fcmp_ogt  i32 %tmp_10, i32 %tmp_52" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 569 'fcmp' 'tmp_26' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 21> <Delay = 6.30>
ST_22 : Operation 570 [1/1] (0.00ns)   --->   "%bitcast_ln156_9 = bitcast i32 %tmp_10" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 570 'bitcast' 'bitcast_ln156_9' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 571 [1/1] (0.00ns)   --->   "%tmp_24 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_9, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 571 'partselect' 'tmp_24' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 572 [1/1] (0.00ns)   --->   "%trunc_ln156_9 = trunc i32 %bitcast_ln156_9" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 572 'trunc' 'trunc_ln156_9' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 573 [1/1] (0.00ns)   --->   "%bitcast_ln156_10 = bitcast i32 %tmp_52" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 573 'bitcast' 'bitcast_ln156_10' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 574 [1/1] (0.00ns)   --->   "%tmp_25 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_10, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 574 'partselect' 'tmp_25' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 575 [1/1] (0.00ns)   --->   "%trunc_ln156_10 = trunc i32 %bitcast_ln156_10" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 575 'trunc' 'trunc_ln156_10' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 576 [1/1] (0.76ns)   --->   "%icmp_ln156_18 = icmp_ne  i8 %tmp_24, i8 255" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 576 'icmp' 'icmp_ln156_18' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 577 [1/1] (0.92ns)   --->   "%icmp_ln156_19 = icmp_eq  i23 %trunc_ln156_9, i23 0" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 577 'icmp' 'icmp_ln156_19' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 578 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_10)   --->   "%or_ln156_9 = or i1 %icmp_ln156_19, i1 %icmp_ln156_18" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 578 'or' 'or_ln156_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 579 [1/1] (0.76ns)   --->   "%icmp_ln156_20 = icmp_ne  i8 %tmp_25, i8 255" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 579 'icmp' 'icmp_ln156_20' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 580 [1/1] (0.92ns)   --->   "%icmp_ln156_21 = icmp_eq  i23 %trunc_ln156_10, i23 0" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 580 'icmp' 'icmp_ln156_21' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 581 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_10)   --->   "%or_ln156_10 = or i1 %icmp_ln156_21, i1 %icmp_ln156_20" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 581 'or' 'or_ln156_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 582 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_10)   --->   "%and_ln156_9 = and i1 %or_ln156_9, i1 %or_ln156_10" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 582 'and' 'and_ln156_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 583 [1/2] (2.78ns)   --->   "%tmp_26 = fcmp_ogt  i32 %tmp_10, i32 %tmp_52" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 583 'fcmp' 'tmp_26' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 584 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln156_10 = and i1 %and_ln156_9, i1 %tmp_26" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 584 'and' 'and_ln156_10' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 585 [1/1] (0.44ns) (out node of the LUT)   --->   "%tmp_53 = select i1 %and_ln156_10, i32 %tmp_10, i32 %tmp_52" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 585 'select' 'tmp_53' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_22 : Operation 586 [2/2] (2.78ns)   --->   "%tmp_29 = fcmp_ogt  i32 %tmp_12, i32 %tmp_53" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 586 'fcmp' 'tmp_29' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 6.30>
ST_23 : Operation 587 [1/1] (0.00ns)   --->   "%bitcast_ln156_11 = bitcast i32 %tmp_12" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 587 'bitcast' 'bitcast_ln156_11' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 588 [1/1] (0.00ns)   --->   "%tmp_27 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_11, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 588 'partselect' 'tmp_27' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 589 [1/1] (0.00ns)   --->   "%trunc_ln156_11 = trunc i32 %bitcast_ln156_11" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 589 'trunc' 'trunc_ln156_11' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 590 [1/1] (0.00ns)   --->   "%bitcast_ln156_12 = bitcast i32 %tmp_53" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 590 'bitcast' 'bitcast_ln156_12' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 591 [1/1] (0.00ns)   --->   "%tmp_28 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_12, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 591 'partselect' 'tmp_28' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 592 [1/1] (0.00ns)   --->   "%trunc_ln156_12 = trunc i32 %bitcast_ln156_12" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 592 'trunc' 'trunc_ln156_12' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 593 [1/1] (0.76ns)   --->   "%icmp_ln156_22 = icmp_ne  i8 %tmp_27, i8 255" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 593 'icmp' 'icmp_ln156_22' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 594 [1/1] (0.92ns)   --->   "%icmp_ln156_23 = icmp_eq  i23 %trunc_ln156_11, i23 0" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 594 'icmp' 'icmp_ln156_23' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 595 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_12)   --->   "%or_ln156_11 = or i1 %icmp_ln156_23, i1 %icmp_ln156_22" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 595 'or' 'or_ln156_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 596 [1/1] (0.76ns)   --->   "%icmp_ln156_24 = icmp_ne  i8 %tmp_28, i8 255" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 596 'icmp' 'icmp_ln156_24' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 597 [1/1] (0.92ns)   --->   "%icmp_ln156_25 = icmp_eq  i23 %trunc_ln156_12, i23 0" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 597 'icmp' 'icmp_ln156_25' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 598 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_12)   --->   "%or_ln156_12 = or i1 %icmp_ln156_25, i1 %icmp_ln156_24" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 598 'or' 'or_ln156_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 599 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_12)   --->   "%and_ln156_11 = and i1 %or_ln156_11, i1 %or_ln156_12" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 599 'and' 'and_ln156_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 600 [1/2] (2.78ns)   --->   "%tmp_29 = fcmp_ogt  i32 %tmp_12, i32 %tmp_53" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 600 'fcmp' 'tmp_29' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 601 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln156_12 = and i1 %and_ln156_11, i1 %tmp_29" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 601 'and' 'and_ln156_12' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 602 [1/1] (0.44ns) (out node of the LUT)   --->   "%tmp_54 = select i1 %and_ln156_12, i32 %tmp_12, i32 %tmp_53" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 602 'select' 'tmp_54' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_23 : Operation 603 [2/2] (2.78ns)   --->   "%tmp_32 = fcmp_ogt  i32 %tmp_14, i32 %tmp_54" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 603 'fcmp' 'tmp_32' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 6.30>
ST_24 : Operation 604 [1/1] (0.00ns)   --->   "%bitcast_ln156_13 = bitcast i32 %tmp_14" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 604 'bitcast' 'bitcast_ln156_13' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 605 [1/1] (0.00ns)   --->   "%tmp_30 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_13, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 605 'partselect' 'tmp_30' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 606 [1/1] (0.00ns)   --->   "%trunc_ln156_13 = trunc i32 %bitcast_ln156_13" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 606 'trunc' 'trunc_ln156_13' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 607 [1/1] (0.00ns)   --->   "%bitcast_ln156_14 = bitcast i32 %tmp_54" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 607 'bitcast' 'bitcast_ln156_14' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 608 [1/1] (0.00ns)   --->   "%tmp_31 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_14, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 608 'partselect' 'tmp_31' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 609 [1/1] (0.00ns)   --->   "%trunc_ln156_14 = trunc i32 %bitcast_ln156_14" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 609 'trunc' 'trunc_ln156_14' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 610 [1/1] (0.76ns)   --->   "%icmp_ln156_26 = icmp_ne  i8 %tmp_30, i8 255" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 610 'icmp' 'icmp_ln156_26' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 611 [1/1] (0.92ns)   --->   "%icmp_ln156_27 = icmp_eq  i23 %trunc_ln156_13, i23 0" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 611 'icmp' 'icmp_ln156_27' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 612 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_14)   --->   "%or_ln156_13 = or i1 %icmp_ln156_27, i1 %icmp_ln156_26" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 612 'or' 'or_ln156_13' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 613 [1/1] (0.76ns)   --->   "%icmp_ln156_28 = icmp_ne  i8 %tmp_31, i8 255" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 613 'icmp' 'icmp_ln156_28' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 614 [1/1] (0.92ns)   --->   "%icmp_ln156_29 = icmp_eq  i23 %trunc_ln156_14, i23 0" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 614 'icmp' 'icmp_ln156_29' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 615 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_14)   --->   "%or_ln156_14 = or i1 %icmp_ln156_29, i1 %icmp_ln156_28" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 615 'or' 'or_ln156_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 616 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_14)   --->   "%and_ln156_13 = and i1 %or_ln156_13, i1 %or_ln156_14" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 616 'and' 'and_ln156_13' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 617 [1/2] (2.78ns)   --->   "%tmp_32 = fcmp_ogt  i32 %tmp_14, i32 %tmp_54" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 617 'fcmp' 'tmp_32' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 618 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln156_14 = and i1 %and_ln156_13, i1 %tmp_32" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 618 'and' 'and_ln156_14' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 619 [1/1] (0.44ns) (out node of the LUT)   --->   "%tmp_55 = select i1 %and_ln156_14, i32 %tmp_14, i32 %tmp_54" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 619 'select' 'tmp_55' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 620 [2/2] (2.78ns)   --->   "%tmp_35 = fcmp_ogt  i32 %tmp_16, i32 %tmp_55" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 620 'fcmp' 'tmp_35' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 3.51>
ST_25 : Operation 621 [1/1] (0.00ns)   --->   "%bitcast_ln156_15 = bitcast i32 %tmp_16" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 621 'bitcast' 'bitcast_ln156_15' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 622 [1/1] (0.00ns)   --->   "%tmp_33 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_15, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 622 'partselect' 'tmp_33' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 623 [1/1] (0.00ns)   --->   "%trunc_ln156_15 = trunc i32 %bitcast_ln156_15" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 623 'trunc' 'trunc_ln156_15' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 624 [1/1] (0.00ns)   --->   "%bitcast_ln156_16 = bitcast i32 %tmp_55" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 624 'bitcast' 'bitcast_ln156_16' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 625 [1/1] (0.00ns)   --->   "%tmp_34 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln156_16, i32 23, i32 30" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 625 'partselect' 'tmp_34' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 626 [1/1] (0.00ns)   --->   "%trunc_ln156_16 = trunc i32 %bitcast_ln156_16" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 626 'trunc' 'trunc_ln156_16' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 627 [1/1] (0.76ns)   --->   "%icmp_ln156_30 = icmp_ne  i8 %tmp_33, i8 255" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 627 'icmp' 'icmp_ln156_30' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 628 [1/1] (0.92ns)   --->   "%icmp_ln156_31 = icmp_eq  i23 %trunc_ln156_15, i23 0" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 628 'icmp' 'icmp_ln156_31' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 629 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_16)   --->   "%or_ln156_15 = or i1 %icmp_ln156_31, i1 %icmp_ln156_30" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 629 'or' 'or_ln156_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 630 [1/1] (0.76ns)   --->   "%icmp_ln156_32 = icmp_ne  i8 %tmp_34, i8 255" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 630 'icmp' 'icmp_ln156_32' <Predicate = true> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.76> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 631 [1/1] (0.92ns)   --->   "%icmp_ln156_33 = icmp_eq  i23 %trunc_ln156_16, i23 0" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 631 'icmp' 'icmp_ln156_33' <Predicate = true> <Delay = 0.92> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.92> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 632 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_16)   --->   "%or_ln156_16 = or i1 %icmp_ln156_33, i1 %icmp_ln156_32" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 632 'or' 'or_ln156_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 633 [1/1] (0.00ns) (grouped into LUT with out node and_ln156_16)   --->   "%and_ln156_15 = and i1 %or_ln156_15, i1 %or_ln156_16" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 633 'and' 'and_ln156_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 634 [1/2] (2.78ns)   --->   "%tmp_35 = fcmp_ogt  i32 %tmp_16, i32 %tmp_55" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 634 'fcmp' 'tmp_35' <Predicate = true> <Delay = 2.78> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 2.78> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 635 [1/1] (0.28ns) (out node of the LUT)   --->   "%and_ln156_16 = and i1 %and_ln156_15, i1 %tmp_35" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 635 'and' 'and_ln156_16' <Predicate = true> <Delay = 0.28> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 636 [1/1] (0.44ns) (out node of the LUT)   --->   "%tmp_56 = select i1 %and_ln156_16, i32 %tmp_16, i32 %tmp_55" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156]   --->   Operation 636 'select' 'tmp_56' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 26 <SV = 25> <Delay = 7.30>
ST_26 : Operation 637 [1/1] (0.00ns)   --->   "%gmem_addr = getelementptr i32 %gmem, i64 %sext_ln51_cast" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:51]   --->   Operation 637 'getelementptr' 'gmem_addr' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_26 : Operation 638 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @L5_L6_str"   --->   Operation 638 'specloopname' 'specloopname_ln0' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_26 : Operation 639 [1/1] (0.00ns)   --->   "%speclooptripcount_ln0 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 729, i64 729, i64 729"   --->   Operation 639 'speclooptripcount' 'speclooptripcount_ln0' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_26 : Operation 640 [1/1] (0.00ns)   --->   "%specpipeline_ln73 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_11" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:73]   --->   Operation 640 'specpipeline' 'specpipeline_ln73' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_26 : Operation 641 [1/1] (0.00ns)   --->   "%br_ln76 = br i1 %icmp_ln76, void %L15, void %for.inc42" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:76]   --->   Operation 641 'br' 'br_ln76' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_26 : Operation 642 [1/1] (0.00ns)   --->   "%bitcast_ln160 = bitcast i32 %tmp_56" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:160]   --->   Operation 642 'bitcast' 'bitcast_ln160' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 643 [1/1] (7.30ns)   --->   "%write_ln160 = write void @_ssdm_op_Write.m_axi.p1i32, i32 %gmem_addr, i32 %bitcast_ln160, i4 15" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:160]   --->   Operation 643 'write' 'write_ln160' <Predicate = true> <Delay = 7.30> <CoreInst = "m_axi">   --->   Core 119 'm_axi' <Latency = 5> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_26 : Operation 644 [1/1] (0.00ns)   --->   "%br_ln71 = br void %for.body26" [AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:71]   --->   Operation 644 'br' 'br_ln71' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 6.058ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln0') of constant 0 on local variable 'indvar' [253]  (0.427 ns)
	'load' operation 5 bit ('indvar_load', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68) on local variable 'indvar' [272]  (0.000 ns)
	'add' operation 5 bit ('add_ln68_1', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68) [279]  (0.789 ns)
	'select' operation 5 bit ('select_ln68', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68) [280]  (0.414 ns)
	'mul' operation 12 bit ('empty_27', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68) [282]  (1.650 ns)
	'add' operation 12 bit ('tmp2', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68) [289]  (0.809 ns)
	'add' operation 19 bit ('empty_30', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68) [291]  (0.884 ns)
	'add' operation 64 bit ('empty_31', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:68) [294]  (1.085 ns)

 <State 2>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_25', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) [562]  (7.300 ns)

 <State 3>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_25', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) [562]  (7.300 ns)

 <State 4>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_25', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) [562]  (7.300 ns)

 <State 5>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_25', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) [562]  (7.300 ns)

 <State 6>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_25', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) [562]  (7.300 ns)

 <State 7>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_25', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) [562]  (7.300 ns)

 <State 8>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_25', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) [562]  (7.300 ns)

 <State 9>: 7.300ns
The critical path consists of the following:
	bus request operation ('empty_25', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) [562]  (7.300 ns)

 <State 10>: 7.300ns
The critical path consists of the following:
	bus read operation ('gmem_addr_1_read', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) [563]  (7.300 ns)

 <State 11>: 7.300ns
The critical path consists of the following:
	bus read operation ('gmem_addr_1_read_1', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) [565]  (7.300 ns)

 <State 12>: 7.300ns
The critical path consists of the following:
	bus read operation ('gmem_addr_1_read_2', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) [567]  (7.300 ns)

 <State 13>: 7.300ns
The critical path consists of the following:
	bus read operation ('gmem_addr_2_read', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) [570]  (7.300 ns)

 <State 14>: 7.300ns
The critical path consists of the following:
	bus read operation ('gmem_addr_2_read_1', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) [572]  (7.300 ns)

 <State 15>: 7.300ns
The critical path consists of the following:
	bus read operation ('gmem_addr_2_read_2', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) on port 'gmem' (AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:91) [574]  (7.300 ns)

 <State 16>: 3.209ns
The critical path consists of the following:
	'load' operation 32 bit ('line_buffer_2D') on local variable 'line_buffer_2D', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:42 [261]  (0.000 ns)
	multiplexor before 'phi' operation 32 bit ('line_buffer_2D') with incoming values : ('line_buffer_2D') ('p_load142') [589]  (0.427 ns)
	'phi' operation 32 bit ('line_buffer_2D') with incoming values : ('line_buffer_2D') ('p_load142') [589]  (0.000 ns)
	'fcmp' operation 1 bit ('tmp_5', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [596]  (2.782 ns)

 <State 17>: 6.013ns
The critical path consists of the following:
	'fcmp' operation 1 bit ('tmp_5', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [596]  (2.782 ns)
	'and' operation 1 bit ('and_ln156', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [597]  (0.000 ns)
	'select' operation 32 bit ('tmp', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [598]  (0.449 ns)
	'fcmp' operation 1 bit ('tmp_11', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [612]  (2.782 ns)

 <State 18>: 6.300ns
The critical path consists of the following:
	'fcmp' operation 1 bit ('tmp_11', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [612]  (2.782 ns)
	'and' operation 1 bit ('and_ln156_2', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [613]  (0.287 ns)
	'select' operation 32 bit ('tmp', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [614]  (0.449 ns)
	'fcmp' operation 1 bit ('tmp_17', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [628]  (2.782 ns)

 <State 19>: 6.300ns
The critical path consists of the following:
	'fcmp' operation 1 bit ('tmp_17', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [628]  (2.782 ns)
	'and' operation 1 bit ('and_ln156_4', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [629]  (0.287 ns)
	'select' operation 32 bit ('tmp', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [630]  (0.449 ns)
	'fcmp' operation 1 bit ('tmp_20', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [644]  (2.782 ns)

 <State 20>: 6.300ns
The critical path consists of the following:
	'fcmp' operation 1 bit ('tmp_20', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [644]  (2.782 ns)
	'and' operation 1 bit ('and_ln156_6', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [645]  (0.287 ns)
	'select' operation 32 bit ('tmp', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [646]  (0.449 ns)
	'fcmp' operation 1 bit ('tmp_23', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [660]  (2.782 ns)

 <State 21>: 6.300ns
The critical path consists of the following:
	'fcmp' operation 1 bit ('tmp_23', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [660]  (2.782 ns)
	'and' operation 1 bit ('and_ln156_8', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [661]  (0.287 ns)
	'select' operation 32 bit ('tmp', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [662]  (0.449 ns)
	'fcmp' operation 1 bit ('tmp_26', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [676]  (2.782 ns)

 <State 22>: 6.300ns
The critical path consists of the following:
	'fcmp' operation 1 bit ('tmp_26', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [676]  (2.782 ns)
	'and' operation 1 bit ('and_ln156_10', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [677]  (0.287 ns)
	'select' operation 32 bit ('tmp', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [678]  (0.449 ns)
	'fcmp' operation 1 bit ('tmp_29', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [692]  (2.782 ns)

 <State 23>: 6.300ns
The critical path consists of the following:
	'fcmp' operation 1 bit ('tmp_29', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [692]  (2.782 ns)
	'and' operation 1 bit ('and_ln156_12', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [693]  (0.287 ns)
	'select' operation 32 bit ('tmp', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [694]  (0.449 ns)
	'fcmp' operation 1 bit ('tmp_32', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [708]  (2.782 ns)

 <State 24>: 6.300ns
The critical path consists of the following:
	'fcmp' operation 1 bit ('tmp_32', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [708]  (2.782 ns)
	'and' operation 1 bit ('and_ln156_14', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [709]  (0.287 ns)
	'select' operation 32 bit ('tmp', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [710]  (0.449 ns)
	'fcmp' operation 1 bit ('tmp_35', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [724]  (2.782 ns)

 <State 25>: 3.518ns
The critical path consists of the following:
	'fcmp' operation 1 bit ('tmp_35', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [724]  (2.782 ns)
	'and' operation 1 bit ('and_ln156_16', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [725]  (0.287 ns)
	'select' operation 32 bit ('tmp', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:156) [726]  (0.449 ns)

 <State 26>: 7.300ns
The critical path consists of the following:
	'getelementptr' operation 32 bit ('gmem_addr', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:51) [273]  (0.000 ns)
	bus write operation ('write_ln160', AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:160) on port 'gmem' (AlexNet-FPGA-implementation/Pool1/src/pool1.cpp:160) [728]  (7.300 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
